'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _uxcorePopover = require('uxcore-popover');

var _uxcorePopover2 = _interopRequireDefault(_uxcorePopover);

var _uxcoreIcon = require('uxcore-icon');

var _uxcoreIcon2 = _interopRequireDefault(_uxcoreIcon);

var _reactLifecyclesCompat = require('react-lifecycles-compat');

var _i18n = require('./i18n');

var _i18n2 = _interopRequireDefault(_i18n);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * TagItem Component for uxcore
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author peijie.dpj
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2015-2017, Uxcore Team, Alinw.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

var TagItem = function (_React$Component) {
  _inherits(TagItem, _React$Component);

  function TagItem(props) {
    _classCallCheck(this, TagItem);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.state = {
      animationTag: '',
      count: props.count
    };
    return _this;
  }

  TagItem.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
    if (props.count === state.count + 1) {
      return {
        animationTag: props.tag,
        count: props.count
      };
    }
    return null;
  };

  TagItem.prototype.componentWillUnmount = function componentWillUnmount() {
    console.log('unmount');
  };

  TagItem.prototype.onClick = function onClick(tag) {
    var props = this.props;


    props.onClick(tag);
  };

  TagItem.prototype.onAddCount = function onAddCount(tag) {
    var props = this.props;


    props.onAddCount(tag);
  };

  TagItem.prototype.onDelete = function onDelete(tag) {
    var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var props = this.props;


    props.onDelete(tag, cb);
  };

  TagItem.prototype.renderCount = function renderCount(num) {
    var props = this.props;


    if (num > props.maxDisplayCount) {
      return props.maxDisplayCount + '+';
    }
    return num;
  };

  TagItem.prototype.render = function render() {
    var _classnames;

    var me = this;
    var props = me.props,
        state = me.state,
        context = me.context;
    var locale = props.locale,
        type = props.type,
        className = props.className,
        canDelete = props.canDelete,
        tag = props.tag,
        children = props.children,
        canAddCount = props.canAddCount,
        maxDisplayCount = props.maxDisplayCount,
        confirmDeleteText = props.confirmDeleteText;
    var count = state.count;


    var deleteOverlayPrefixCls = context.tagPrefixCls;
    var prefixCls = props.prefixCls ? props.prefixCls : context.tagPrefixCls + '-item';
    var lang = _i18n2["default"][locale];

    var deleteOverlay = void 0;

    if (props.confirmDeleteText) {
      deleteOverlay = _react2["default"].createElement(
        'div',
        { className: deleteOverlayPrefixCls + '-popup-delete' },
        _react2["default"].createElement('i', { className: 'kuma-icon kuma-icon-caution' }),
        _react2["default"].createElement(
          'span',
          null,
          props.confirmDeleteText
        )
      );
    }

    var tagProps = {
      className: prefixCls + '-tag',
      onClick: me.onClick.bind(me, tag)
    };

    if (typeof children === 'string') {
      tagProps.title = children;
    }

    return _react2["default"].createElement(
      'li',
      {
        className: (0, _classnames3["default"])('' + prefixCls, (_classnames = {}, _defineProperty(_classnames, className, !!className), _defineProperty(_classnames, 'can-delete', canDelete), _defineProperty(_classnames, prefixCls + '-show', !!type), _defineProperty(_classnames, prefixCls + '-' + type, !!type), _classnames))
      },
      _react2["default"].createElement(
        'span',
        tagProps,
        children
      ),
      _react2["default"].createElement(
        'span',
        {
          className: (0, _classnames3["default"])(prefixCls + '-option', {
            'can-add-count': canAddCount,
            'is-zero': count === 0
          })
        },
        _react2["default"].createElement(
          'span',
          {
            className: (0, _classnames3["default"])(prefixCls + '-count', {
              'max-count': count > maxDisplayCount
            })
          },
          me.renderCount(count)
        ),
        _react2["default"].createElement(
          'span',
          {
            className: prefixCls + '-add-count',
            onClick: me.onAddCount.bind(me, tag)
          },
          _react2["default"].createElement(_uxcoreIcon2["default"], { name: 'shoucang', usei: true })
        ),
        _react2["default"].createElement(
          'span',
          {
            className: (0, _classnames3["default"])(prefixCls + '-add-animation', {
              show: me.state.animationTag === tag
            })
          },
          '+1'
        )
      ),
      confirmDeleteText ? _react2["default"].createElement(
        _uxcorePopover2["default"],
        {
          overlay: deleteOverlay,
          placement: 'top',
          trigger: 'click',
          showButton: true,
          onOk: function onOk(hideCallback) {
            me.onDelete(tag, hideCallback);
          },
          okText: lang.deleteOkText,
          cancelText: lang.deleteCancelText
        },
        _react2["default"].createElement(_uxcoreIcon2["default"], { name: type && canDelete ? 'biaoqian-qingchu' : 'biaodanlei-tongyongqingchu', usei: true })
      ) : _react2["default"].createElement(_uxcoreIcon2["default"], { name: type && canDelete ? 'biaoqian-qingchu' : 'biaodanlei-tongyongqingchu', onClick: function onClick() {
          me.onDelete(tag);
        }, usei: true })
    );
  };

  return TagItem;
}(_react2["default"].Component);

TagItem.contextTypes = {
  tagPrefixCls: _propTypes2["default"].string
};


TagItem.defaultProps = {
  className: '',
  count: 0, // 标签后面的数字
  canAddCount: false, // 是否可以增加数字
  canDelete: false, // 是否可以删除标签
  onClick: function onClick() {}, // 点标签回调
  maxDisplayCount: 99, // 最大显示数字
  onAddCount: function onAddCount() {}, // 点击增加数字的加号回调
  onDelete: function onDelete() {}, // 点击删除icon回调 注意手动调用cb，否则弹窗不会消失
  confirmDeleteText: '', // 确认删除文案，如果不填则直接触发onDelete回调
  locale: 'zh-cn'
};

// http://facebook.github.io/react/docs/reusable-components.html
TagItem.propTypes = {
  prefixCls: _propTypes2["default"].string,
  className: _propTypes2["default"].string,
  type: _propTypes2["default"].oneOf(['show', 'success', 'danger', 'info', 'warning']),
  tag: _propTypes2["default"].string,
  count: _propTypes2["default"].number,
  canAddCount: _propTypes2["default"].bool,
  canDelete: _propTypes2["default"].bool,
  onClick: _propTypes2["default"].func,
  maxDisplayCount: _propTypes2["default"].number,
  onAddCount: _propTypes2["default"].func,
  onDelete: _propTypes2["default"].func,
  confirmDeleteText: _propTypes2["default"].string,
  locale: _propTypes2["default"].string
};

TagItem.displayName = 'TagItem';

(0, _reactLifecyclesCompat.polyfill)(TagItem);

exports["default"] = TagItem;
module.exports = exports['default'];