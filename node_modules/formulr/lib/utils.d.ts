import { FieldSetModel, BasicModel, ModelRef } from './models';
export declare function noop(): void;
export declare const id: <T>(it: T) => T;
export declare function isPlainObject(value: unknown): value is object;
export declare function removeOnUnmount<Model extends BasicModel<any>>(field: string | BasicModel<any> | ModelRef<any, any, Model>, model: BasicModel<any>, parent: FieldSetModel): void;
export declare type $MergeProps<T> = (T extends any ? (t: T) => void : never) extends (r: infer R) => void ? R : never;
//# sourceMappingURL=utils.d.ts.map