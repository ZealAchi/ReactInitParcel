import { BehaviorSubject, Observable } from 'rxjs';
import { FieldSetModel } from './set';
import { BasicModel } from './basic';
import { ValidateOption } from '../validate';
declare enum FormStrategy {
    /**
     * 指定 model 模式
     */
    Model = 0,
    /**
     * 视图驱动模式
     */
    View = 1
}
declare const FORM_ID: unique symbol;
declare class FormModel<Children extends Record<string, BasicModel<unknown>> = Record<string, BasicModel<unknown>>> extends FieldSetModel<Children> {
    readonly children: Children;
    /**
     * @internal
     */
    [FORM_ID]: boolean;
    /** @internal */
    private readonly workingValidators;
    readonly isValidating$: BehaviorSubject<boolean>;
    constructor(children: Children);
    /**
     * 执行整个 `Form` 的校验，会递归触发所有表单元素的校验
     * @param option 表单校验的参数
     */
    validate(option?: ValidateOption): Promise<import("../validate").IValidateResult<any> | import("../validate").IMaybeError<any>[] | null | undefined>;
    /** @internal */
    addWorkingValidator(v: Observable<unknown>): void;
    /** @internal */
    removeWorkingValidator(v: Observable<unknown>): void;
    /** @internal */
    private updateIsValidating;
}
declare function isFormModel<Children extends Record<string, BasicModel<any>> = Record<string, BasicModel<any>>>(maybeModel: any): maybeModel is FormModel<Children>;
export { FormStrategy, FormModel, isFormModel };
//# sourceMappingURL=form.d.ts.map