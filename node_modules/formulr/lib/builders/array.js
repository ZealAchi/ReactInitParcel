import { __extends } from "tslib";
import { BasicBuilder } from './basic';
import { FieldArrayModel } from '../models';
import { or } from '../maybe';
var FieldArrayBuilder = /** @class */ (function (_super) {
    __extends(FieldArrayBuilder, _super);
    function FieldArrayBuilder(childBuilder) {
        var _this = _super.call(this) || this;
        _this.childBuilder = childBuilder;
        _this._defaultValue = [];
        return _this;
    }
    FieldArrayBuilder.prototype.defaultValue = function (defaultValue) {
        this._defaultValue = defaultValue;
        return this;
    };
    FieldArrayBuilder.prototype.build = function (defaultValue) {
        var model = new FieldArrayModel(this.childBuilder, or(defaultValue, this._defaultValue));
        model.validators = this._validators;
        return model;
    };
    return FieldArrayBuilder;
}(BasicBuilder));
export { FieldArrayBuilder };
