import { BasicBuilder } from './basic';
import { FieldSetModel, $FieldSetValue } from '../models';
import { Maybe } from '../maybe';
export declare type $FieldSetBuilderChildren<ChildBuilders extends Record<string, BasicBuilder<any, any>>> = {
    [Key in keyof ChildBuilders]: ChildBuilders[Key]['phantomModel'];
};
export declare class FieldSetBuilder<ChildBuilders extends Record<string, BasicBuilder<any, any>>> extends BasicBuilder<$FieldSetValue<$FieldSetBuilderChildren<ChildBuilders>>, FieldSetModel<$FieldSetBuilderChildren<ChildBuilders>>> {
    private readonly _childBuilders;
    constructor(_childBuilders: ChildBuilders);
    build(defaultValues?: Maybe<$FieldSetValue<$FieldSetBuilderChildren<ChildBuilders>>>): FieldSetModel<$FieldSetBuilderChildren<ChildBuilders>>;
}
//# sourceMappingURL=set.d.ts.map