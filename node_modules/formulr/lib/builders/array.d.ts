import { BasicBuilder } from './basic';
import { FieldArrayModel } from '../models';
import { Maybe } from '../maybe';
export declare class FieldArrayBuilder<ChildBuilder extends BasicBuilder<any, any>> extends BasicBuilder<readonly (ChildBuilder['phantomValue'] | null)[], FieldArrayModel<ChildBuilder['phantomValue'], ChildBuilder['phantomModel']>> {
    private readonly childBuilder;
    private _defaultValue;
    constructor(childBuilder: ChildBuilder);
    defaultValue(defaultValue: readonly ChildBuilder['phantomValue'][]): this;
    build(defaultValue?: Maybe<readonly (ChildBuilder['phantomValue'] | null)[]>): FieldArrayModel<ChildBuilder['phantomValue'], ChildBuilder['phantomModel']>;
}
//# sourceMappingURL=array.d.ts.map