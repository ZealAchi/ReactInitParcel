import { FieldArrayModel, BasicModel, FieldArrayChild, ModelRef } from './models';
import { IValidators } from './validate';
export declare type IUseFieldArray<Item, Child extends BasicModel<Item>> = [FieldArrayChild<Item, Child>[], FieldArrayModel<Item, Child>];
/**
 * 创建一个 `FieldArray`
 *
 * @param field 字段名，当 `FormStrategy` 是 `View` 的时候才能用字段名
 * @param validators 当 `field` 是字段名的时候，可以传入 `validator`
 * @param defaultValue 默认值
 */
export declare function useFieldArray<Item, Child extends BasicModel<Item>>(field: string | ModelRef<readonly Item[], any, FieldArrayModel<Item, Child>>, validators?: IValidators<readonly (Item | null)[]>, defaultValue?: Item[]): FieldArrayModel<Item, Child>;
/**
 * 创建一个 `FieldArray`
 *
 * @param field `FieldArray` 对应的 model 对象，用于关联 `FieldArray` 和 model；当 `FormStrategy` 是 `Model` 的时候才能用
 */
export declare function useFieldArray<Item, Child extends BasicModel<Item>>(field: FieldArrayModel<Item, Child>): FieldArrayModel<Item, Child>;
//# sourceMappingURL=field-array.d.ts.map