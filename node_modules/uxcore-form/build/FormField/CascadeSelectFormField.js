'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _uxcoreFormField = require('uxcore-form-field');

var _uxcoreFormField2 = _interopRequireDefault(_uxcoreFormField);

var _uxcoreConst = require('uxcore-const');

var _uxcoreConst2 = _interopRequireDefault(_uxcoreConst);

var _uxcoreSelect = require('uxcore-select2');

var _uxcoreSelect2 = _interopRequireDefault(_uxcoreSelect);

var _objectAssign = require('object-assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

var _cloneDeep = require('lodash/cloneDeep');

var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var Option = _uxcoreSelect2["default"].Option;

var CascadeSelectFormField = function (_FormField) {
  _inherits(CascadeSelectFormField, _FormField);

  function CascadeSelectFormField() {
    _classCallCheck(this, CascadeSelectFormField);

    return _possibleConstructorReturn(this, _FormField.apply(this, arguments));
  }

  CascadeSelectFormField.prototype.getDataLength = function getDataLength() {
    var me = this;
    return me.props.jsxdata.length;
  };

  CascadeSelectFormField.prototype.handleChange = function handleChange(i, value) {
    var me = this;
    var values = (0, _cloneDeep2["default"])(me.state.value || []);
    if (values[i]) {
      values = values.slice(0, i);
      values.push(value);
    } else {
      values[i] = value;
    }
    me.handleDataChange(values);
  };

  CascadeSelectFormField.prototype.addSpecificClass = function addSpecificClass() {
    var me = this;
    if (me.props.jsxprefixCls === 'kuma-uxform-field') {
      return me.props.jsxprefixCls + ' kuma-cascade-select-uxform-field';
    }
    return me.props.jsxprefixCls;
  };

  CascadeSelectFormField.prototype.renderField = function renderField() {
    var me = this;
    var length = me.getDataLength();
    var arr = [];
    var data = {};
    var mode = me.props.jsxmode || me.props.mode;
    if (mode === _uxcoreConst2["default"].MODE.EDIT) {
      var _ret = function () {
        try {
          data = me.props.jsxdata.contents;
        } catch (e) {
          console.warn(e.message);
          return {
            v: null
          };
        }

        /*
         * 如果 value 存在相应的值，则填充下一级的选择，
         * 如果 value 不存在，则填充空数组，
         * 如果 data 中不包含 contents，则证明级联选择生成已结束，则跳出循环
         */
        var stateValue = me.state.value || []; // 预防 value 是 undefined 的情况

        var _loop = function _loop(i) {
          var options = data.map(function (item, index) {
            return _react2["default"].createElement(
              Option,
              { key: index, value: item.value },
              item.text
            );
          });

          var placeholder = me.props.jsxplaceholder;

          var selectOptions = {};

          var selectKeys = Object.keys(_uxcoreSelect2["default"].RcSelect.propTypes).filter(function (key) {
            return ['defaultValue'].indexOf(key) === -1;
          });
          selectKeys.forEach(function (key) {
            selectOptions[key] = me.props[key];
          });
          selectOptions = _extends({}, selectOptions, {
            ref: 'el',
            key: 'select',
            optionLabelProp: 'children',
            style: me.props.jsxstyle,
            getPopupContainer: me.props.getPopupContainer,
            size: me.getSize(),
            searchPlaceholder: placeholder instanceof Array ? placeholder[i] : placeholder,
            placeholder: placeholder instanceof Array ? placeholder[i] : placeholder
          });
          selectOptions.onChange = me.handleChange.bind(me, i);
          selectOptions.value = stateValue[i] || [];
          if (i !== 0) {
            arr.push(_react2["default"].createElement(
              'span',
              { key: 'split' + i, className: 'kuma-uxform-split' },
              '-'
            ));
          }
          arr.push(_react2["default"].createElement(
            _uxcoreSelect2["default"],
            _extends({}, selectOptions, { key: i }),
            options
          ));
          if (stateValue[i]) {
            data = data.filter(function (item) {
              return item.value === stateValue[i];
            })[0];
            data = data.contents;
            if (!data) return 'break';
          } else {
            data = [];
          }
        };

        for (var i = 0; i < length; i++) {
          var _ret2 = _loop(i);

          if (_ret2 === 'break') break;
        }
      }();

      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
    } else if (mode === _uxcoreConst2["default"].MODE.VIEW) {
      if (me.state.value instanceof Array) {
        data = me.props.jsxdata;
        var textArr = me.state.value.map(function (item) {
          data = data.contents.filter(function (ele) {
            return ele.value === item;
          })[0];
          return data.text;
        });
        arr.push(_react2["default"].createElement(
          'span',
          { key: 'cascade' },
          textArr.join(' ') || me.props.viewModePlaceholder || '--'
        ));
      }
    }
    return arr;
  };

  return CascadeSelectFormField;
}(_uxcoreFormField2["default"]);

CascadeSelectFormField.propTypes = (0, _objectAssign2["default"])({}, _uxcoreFormField2["default"].propTypes, {
  jsxstyle: _propTypes2["default"].object,
  jsxshowSearch: _propTypes2["default"].bool,
  jsxplaceholder: _propTypes2["default"].oneOfType([_propTypes2["default"].string, _propTypes2["default"].array]),
  jsxdata: _propTypes2["default"].object
});
CascadeSelectFormField.defaultProps = (0, _objectAssign2["default"])({}, _uxcoreFormField2["default"].defaultProps, {
  jsxshowSearch: false,
  jsxplaceholder: '请下拉选择'
});
CascadeSelectFormField.displayName = 'CascadeSelectFormField';

exports["default"] = CascadeSelectFormField;
module.exports = exports['default'];