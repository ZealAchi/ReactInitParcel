'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _uxcoreCard = require('uxcore-card');

var _uxcoreCard2 = _interopRequireDefault(_uxcoreCard);

var _uxcoreFormRow = require('uxcore-form-row');

var _uxcoreFormRow2 = _interopRequireDefault(_uxcoreFormRow);

var _cloneDeep = require('lodash/cloneDeep');

var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var FormCard = function (_Card) {
  _inherits(FormCard, _Card);

  function FormCard() {
    _classCallCheck(this, FormCard);

    return _possibleConstructorReturn(this, _Card.apply(this, arguments));
  }

  FormCard.prototype.processChild = function processChild(children) {
    var length = _react2["default"].Children.count(children);
    var elements = [];
    if (length === 0) {
      console.warn('FORM: You must pass children to the form component');
      return false;
    }
    _react2["default"].Children.forEach(children, function (child) {
      // 如果是自己添加的 DOM 直接抛弃
      if (child && typeof child.type === 'function') {
        var displayName = child.type.displayName;

        if (/FormField/.test(displayName)) {
          elements.push(_react2["default"].createElement(
            _uxcoreFormRow2["default"],
            null,
            child
          ));
        } else if (/FormRow/.test(displayName)) {
          elements.push(child);
        }
      }
    });
    return elements;
  };

  FormCard.prototype.renderContent = function renderContent() {
    var me = this;
    var collapsed = me.state.collapsed;
    var _me$props = me.props,
        prefixCls = _me$props.prefixCls,
        children = _me$props.children,
        contentPaddingSize = _me$props.contentPaddingSize,
        keepAlive = _me$props.keepAlive;

    if (!keepAlive) {
      console.error('FormCard不允许keepAlive参数为false，否则将导致无法获取FormCard下的表单值！');
    }
    var elements = me.processChild(children);
    var style = {
      height: collapsed ? 0 : me.height,
      paddingTop: collapsed ? 0 : 24,
      paddingBottom: collapsed ? 0 : 0
    };
    return _react2["default"].createElement(
      'div',
      {
        className: (0, _classnames3["default"])(prefixCls + '-content', _defineProperty({}, prefixCls + '-content-' + contentPaddingSize + '-padding', !!contentPaddingSize)),
        ref: function ref(c) {
          me.content = c;
        },
        style: style
      },
      !!elements && elements.map(function (child, index) {
        return _react2["default"].cloneElement(child, {
          mode: me.props.mode,
          instantValidate: me.props.instantValidate,
          asyncValidate: me.props.asyncValidate,
          verticalAlign: me.props.verticalAlign,
          autoAdjustSpacing: me.props.autoAdjustSpacing,
          size: me.props.size,
          data: (0, _cloneDeep2["default"])(me.props.data || {}),
          key: child.key || index,
          attachFormField: me.props.attachFormField,
          detachFormField: me.props.detachFormField,
          handleDataChange: me.props.handleDataChange,
          getValues: me.props.getValues,
          resetValues: me.props.resetValues,
          formPrefixCls: me.props.formPrefixCls
        });
      })
    );
  };

  return FormCard;
}(_uxcoreCard2["default"]);

FormCard.defaultProps = _extends({}, _uxcoreCard2["default"].defaultProps, {
  keepAlive: true
});

FormCard.propTypes = _extends({}, _uxcoreCard2["default"].propTypes);

FormCard.displayName = 'FormCard';

exports["default"] = FormCard;
module.exports = exports['default'];