'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _rcMenu = require('rc-menu');

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var SubMenu = function (_React$Component) {
  _inherits(SubMenu, _React$Component);

  function SubMenu() {
    _classCallCheck(this, SubMenu);

    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }

  SubMenu.prototype.render = function render() {
    var _props = this.props,
        title = _props.title,
        props = _objectWithoutProperties(_props, ['title']);

    var _context = this.context,
        mode = _context.mode,
        level = _context.level,
        theme = _context.theme,
        prefixCls = _context.prefixCls,
        lineClamp = _context.lineClamp;

    var _getClampProps = (0, _utils.getClampProps)({
      mode: mode,
      level: props.level || level,
      className: prefixCls + '-submenu-title-text ' + prefixCls + '-clamp-text',
      lineClamp: lineClamp
    }),
        titleProps = _getClampProps.props,
        clamp = _getClampProps.clamp;

    if (typeof title === 'string') {
      titleProps.title = title;
    }

    var titleJSX = title;
    if (clamp) {
      titleJSX = _react2["default"].createElement(
        'span',
        titleProps,
        title
      );
    } else {
      titleJSX = _react2["default"].createElement(
        'span',
        _extends({}, titleProps, { className: prefixCls + '-submenu-title-text' }),
        title
      );
    }
    props.title = titleJSX;

    if (clamp) {
      props.className = (0, _classnames3["default"])(props.className, prefixCls + '-submenu-clamp');
    }

    return _react2["default"].createElement(_rcMenu.SubMenu, _extends({}, props, {
      ref: this.saveSubMenu,
      popupClassName: (0, _classnames3["default"])(prefixCls + '-' + theme, _defineProperty({}, prefixCls + '-lte-react16', _utils.IS_LET_REACT_16))
    }));
  };

  return SubMenu;
}(_react2["default"].Component);

SubMenu.propTypes = _extends({}, _rcMenu.SubMenu.propTypes, {
  title: _propTypes2["default"].node
});

SubMenu.defaultProps = _extends({}, _rcMenu.SubMenu.defaultProps, {
  title: null
});

SubMenu.contextTypes = {
  mode: _propTypes2["default"].string,
  level: _propTypes2["default"].number,
  theme: _propTypes2["default"].string,
  prefixCls: _propTypes2["default"].string,
  lineClamp: _propTypes2["default"].number
};

SubMenu.isSubMenu = true;

exports["default"] = SubMenu;
module.exports = exports['default'];