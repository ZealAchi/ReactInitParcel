'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uxcorePopover = require('uxcore-popover');

var _uxcorePopover2 = _interopRequireDefault(_uxcorePopover);

var _uxcoreIcon = require('uxcore-icon');

var _uxcoreIcon2 = _interopRequireDefault(_uxcoreIcon);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _util = require('../util');

var _DraggableList = require('./DraggableList');

var _DraggableList2 = _interopRequireDefault(_DraggableList);

var _i18n = require('../i18n');

var _i18n2 = _interopRequireDefault(_i18n);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var ColumnOrder = function (_React$Component) {
  _inherits(ColumnOrder, _React$Component);

  function ColumnOrder(props) {
    _classCallCheck(this, ColumnOrder);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _initialiseProps.call(_this);

    _this.state = {
      value: props.defaultValue,
      preColumns: props.columns,
      checkAbleColumns: (0, _util.getColumnsInfo)(props.columns, props.includeActionColumn, true)
    };
    return _this;
  }

  ColumnOrder.prototype.renderDragList = function renderDragList() {
    var columns = this.state.checkAbleColumns.columns;

    var newColumns = [].concat(_toConsumableArray(columns));
    newColumns.map(function (column) {
      if (column.type === 'action') {
        column.key = '_action_';
      } else {
        column.key = column.dataKey;
      }
      if (typeof column.title === 'function') {
        column.title = column.title();
      }
    });
    newColumns = newColumns.filter(function (item) {
      return !item.fixed && !item.rightFixed;
    });
    return _react2["default"].createElement(_DraggableList2["default"], {
      data: newColumns,
      itemRender: function itemRender(item) {
        return _react2["default"].createElement(
          'div',
          { key: item.key },
          item.title
        );
      },
      onDrop: this.onDrop
    });
  };

  ColumnOrder.prototype.render = function render() {
    var p = this.props;
    var checkAbleColumns = this.state.checkAbleColumns;

    var disabled = !p.keepActiveInCustomView && !p.isTableView || !checkAbleColumns.columns.length;
    return _react2["default"].createElement(
      _uxcorePopover2["default"],
      {
        overlay: !disabled ? this.renderDragList() : _react2["default"].createElement('div', null),
        trigger: 'click',
        overlayClassName: (0, _classnames2["default"])({
          'list-action-bar-column-order-overlay': true,
          'kuma-popover-hidden': disabled
        }),
        placement: 'bottomRight'
      },
      _react2["default"].createElement(
        'div',
        { className: (0, _classnames2["default"])('column-order-title', {
            'disabled': disabled
          }) },
        _react2["default"].createElement(_uxcoreIcon2["default"], { usei: true, name: p.iconName }),
        _react2["default"].createElement(
          'span',
          null,
          p.title || _i18n2["default"][p.locale].columnOrder
        )
      )
    );
  };

  return ColumnOrder;
}(_react2["default"].Component);

ColumnOrder.propTypes = {
  iconName: _propTypes2["default"].string,
  onChange: _propTypes2["default"].func,
  isTableView: _propTypes2["default"].bool
};
ColumnOrder.defaultProps = {
  iconName: 'paixu-jiangxu',
  onChange: function onChange() {},
  isTableView: true
};

ColumnOrder.getDerivedStateFromProps = function (props, state) {
  if (props.columns !== state.preColumns) {
    return {
      checkAbleColumns: (0, _util.getColumnsInfo)(props.columns, props.includeActionColumn, true),
      preColumns: props.columns
    };
  }
  return null;
};

var _initialiseProps = function _initialiseProps() {
  var _this2 = this;

  this.onDrop = function (data, dragInfo) {
    var _state$checkAbleColum = _this2.state.checkAbleColumns,
        otherColumns = _state$checkAbleColum.otherColumns,
        actionColumnPos = _state$checkAbleColum.actionColumnPos,
        actionColumn = _state$checkAbleColum.actionColumn,
        fixedColumns = _state$checkAbleColum.fixedColumns;
    var includeActionColumn = _this2.props.includeActionColumn;

    _this2.props.onChange(dragInfo, data, otherColumns);
    // 如果不允许排序操作列，则此处需要添加回去
    if (!includeActionColumn && actionColumn) {
      data.splice(actionColumnPos - otherColumns.length, 0, actionColumn);
    }
    // 同样也要将fixedColumns和othersColumns添加回去
    _this2.props.handleColumnOrderChange(otherColumns.concat(fixedColumns).concat(data));
  };
};

exports["default"] = ColumnOrder;
module.exports = exports['default'];