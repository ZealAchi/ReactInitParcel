'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uxcoreMenu = require('uxcore-menu');

var _uxcoreMenu2 = _interopRequireDefault(_uxcoreMenu);

var _uxcorePopover = require('uxcore-popover');

var _uxcorePopover2 = _interopRequireDefault(_uxcorePopover);

var _uxcoreIcon = require('uxcore-icon');

var _uxcoreIcon2 = _interopRequireDefault(_uxcoreIcon);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var RowOrder = function (_React$Component) {
  _inherits(RowOrder, _React$Component);

  function RowOrder(props) {
    _classCallCheck(this, RowOrder);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.handleSelect = function (data) {
      var textValue = data.key.split('__');
      var value = {
        text: textValue[0],
        value: textValue[1]
      };
      _this.setState({
        value: value
      });
      var overlay = document.querySelector('.' + _this.state.overlayId);
      if (overlay) {
        overlay.classList.add('kuma-popover-hidden');
      }
      _this.props.onChange(value);
    };

    _this.state = {
      value: props.defaultValue,
      overlayId: 'overlay_' + setTimeout(0)
    };
    return _this;
  }

  RowOrder.prototype.renderMenus = function renderMenus() {
    var value = this.state.value;
    var items = this.props.items;

    return _react2["default"].createElement(
      _uxcoreMenu2["default"],
      { onClick: this.handleSelect, className: 'list-action-bar-order-menu' },
      items.map(function (item) {
        return _react2["default"].createElement(
          _uxcoreMenu2["default"].Item,
          { key: item.text + '__' + item.value },
          item.text,
          _react2["default"].createElement(
            'span',
            { className: 'icon-wrapper' },
            value.value === item.value ? _react2["default"].createElement(_uxcoreIcon2["default"], { usei: true, name: 'duigou' }) : ''
          )
        );
      })
    );
  };

  RowOrder.prototype.render = function render() {
    var _classnames;

    var p = this.props;
    var disabled = !p.keepActiveInCustomView && !p.isTableView;
    return _react2["default"].createElement(
      _uxcorePopover2["default"],
      {
        overlay: !disabled ? this.renderMenus() : _react2["default"].createElement('div', null),
        trigger: 'click',
        overlayClassName: (0, _classnames3["default"])((_classnames = {
          'list-action-bar-order-overlay': true
        }, _defineProperty(_classnames, this.state.overlayId, true), _defineProperty(_classnames, 'kuma-popover-hidden', disabled), _classnames)),
        placement: 'bottomRight'
      },
      _react2["default"].createElement(
        'div',
        { className: (0, _classnames3["default"])('order-title', {
            'disabled': disabled
          }) },
        _react2["default"].createElement(_uxcoreIcon2["default"], { usei: true, name: p.iconName }),
        _react2["default"].createElement(
          'span',
          null,
          this.state.value.text
        )
      )
    );
  };

  return RowOrder;
}(_react2["default"].Component);

RowOrder.propTypes = {
  iconName: _propTypes2["default"].string,
  items: _propTypes2["default"].array,
  defaultValue: _propTypes2["default"].object,
  onChange: _propTypes2["default"].func,
  isTableView: _propTypes2["default"].bool
};
RowOrder.defaultProps = {
  iconName: 'paixu-jiangxu',
  defaultValue: {},
  items: [],
  onChange: function onChange() {},
  isTableView: true
};
exports["default"] = RowOrder;
module.exports = exports['default'];