'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Grid Component for uxcore
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author zhouquan.yezq
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2014-2015, UXCore Team, Alinw.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

var SearchBar = function (_React$Component) {
  _inherits(SearchBar, _React$Component);

  function SearchBar(props) {
    _classCallCheck(this, SearchBar);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.state = {
      searchTxt: ''
    };
    _this.onKeyDown = _this.onKeyDown.bind(_this);
    _this.handleChange = _this.handleChange.bind(_this);
    _this.doSearch = _this.doSearch.bind(_this);
    return _this;
  }

  SearchBar.prototype.onKeyDown = function onKeyDown(e) {
    if (e.keyCode === 13) {
      this.doSearch();
    }
  };

  SearchBar.prototype.doSearch = function doSearch() {
    this.props.onSearch(this.state.searchTxt);
  };

  SearchBar.prototype.handleChange = function handleChange(e) {
    this.setState({
      searchTxt: e.target.value
    });
  };

  SearchBar.prototype.render = function render() {
    var me = this;
    var placeholder = me.props.placeholder;

    return _react2["default"].createElement(
      'div',
      { className: this.props.prefixCls },
      _react2["default"].createElement('input', {
        type: 'text',
        className: 'kuma-input',
        placeholder: placeholder,
        value: this.state.value,
        onKeyDown: this.onKeyDown,
        onChange: this.handleChange
      }),
      _react2["default"].createElement('i', { className: 'kuma-icon-search uxcore-icon uxicon-sousuo', onClick: this.doSearch })
    );
  };

  return SearchBar;
}(_react2["default"].Component);

SearchBar.propTypes = {
  onSearch: _propTypes2["default"].func,
  prefixCls: _propTypes2["default"].string
};

SearchBar.defaultProps = {
  prefixCls: 'kuma-uxtable-searchbar',
  onSearch: function onSearch() {}
};

exports["default"] = SearchBar;
module.exports = exports['default'];