'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultProps = exports.propTypes = undefined;

var _uxcoreConst = require('uxcore-const');

var _uxcoreConst2 = _interopRequireDefault(_uxcoreConst);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/**
 * Table Component for uxcore
 * @author zhouquan.yezq
 *
 * Copyright 2014-2015, UXCore Team, Alinw.
 * All rights reserved.
 */

var defaultProps = {
  prefixCls: 'kuma-uxtable',
  jsxcolumns: [],
  locale: 'zh-cn',
  size: 'middle',
  showHeader: true,
  showFooter: true,
  showRowGroupFooter: false,
  width: 'auto',
  height: 'auto',
  mode: _uxcoreConst2["default"].MODE.EDIT,
  renderModel: '',
  levels: 0,
  actionBarHeight: 54,
  fetchDataOnMount: true,
  doubleClickToEdit: true,
  rowSelector: 'checkboxSelector',
  showPager: true,
  isMiniPager: false,
  showPagerSizeChanger: true,
  showPagerQuickJumper: true,
  showColumnPicker: false,
  showHeaderBorder: false,
  showPagerTotal: true,
  showMask: false,
  showSearch: false,
  getSavedData: true,
  toggleSubCompOnRowClick: false,
  toggleTreeExpandOnRowClick: false,
  pageSize: 10,
  pagerSizeOptions: [10, 20, 30, 40],
  rowHeight: 76,
  fetchParams: {},
  fetchHeader: {},
  currentPage: 1,
  searchBarPlaceholder: '搜索表格内容',
  loadingText: 'loading',
  fitResponse: function fitResponse(response) {
    return {
      content: response.content,
      success: response.success === undefined ? !response.hasError : response.success,
      error: {
        message: response.content || response.errors
      }
    };
  },
  processData: function processData(data) {
    return data;
  },
  beforeFetch: function beforeFetch(obj) {
    return obj;
  },
  onFetchError: function onFetchError(err) {
    if (err && err.stack) {
      console.error(err.stack);
    }
  },
  addRowClassName: function addRowClassName() {},
  onChange: function onChange() {},
  onSave: function onSave() {},
  shouldResetExpandedKeys: function shouldResetExpandedKeys() {},
  showColumnPickerCheckAll: false,
  defaultEditable: false,
  getTooltipContainer: null,
  columnResizeable: false,
  defaultRowGroupActiveKeys: undefined,
  onRowGroupOpenChange: undefined,
  onToggleSubComp: function onToggleSubComp() {},
  needCheckRightFixed: false,
  fixHeaderToTop: false,
  fixHeaderOffset: 0,
  fixActionBarToTop: false,
  fixActionBarOffset: 0,
  expandIconType: undefined,
  tooltipPlacement: '',
  allowActionEventDefault: false
};

// http://facebook.github.io/react/docs/reusable-components.html
var propTypes = {
  prefixCls: _propTypes2["default"].string,
  locale: _propTypes2["default"].string,
  size: _propTypes2["default"].oneOf(['small', 'middle']),
  jsxcolumns: _propTypes2["default"].arrayOf(_propTypes2["default"].object),
  width: _propTypes2["default"].oneOfType([_propTypes2["default"].string, _propTypes2["default"].number]),
  height: _propTypes2["default"].oneOfType([_propTypes2["default"].string, _propTypes2["default"].number]),
  headerHeight: _propTypes2["default"].number,
  pageSize: _propTypes2["default"].number,
  queryKeys: _propTypes2["default"].array,
  fetchDataOnMount: _propTypes2["default"].bool,
  doubleClickToEdit: _propTypes2["default"].bool,
  showColumnPicker: _propTypes2["default"].bool,
  showPager: _propTypes2["default"].bool,
  showFooter: _propTypes2["default"].bool,
  showRowGroupFooter: _propTypes2["default"].bool,
  isMiniPager: _propTypes2["default"].bool,
  showPagerTotal: _propTypes2["default"].bool,
  showPagerQuickJumper: _propTypes2["default"].bool,
  pagerSizeOptions: _propTypes2["default"].array,
  showHeader: _propTypes2["default"].bool,
  showMask: _propTypes2["default"].bool,
  showSearch: _propTypes2["default"].bool,
  searchBarPlaceholder: _propTypes2["default"].string,
  toggleSubCompOnRowClick: _propTypes2["default"].bool,
  toggleTreeExpandOnRowClick: _propTypes2["default"].bool,
  loadingText: _propTypes2["default"].string,
  subComp: _propTypes2["default"].element,
  emptyText: _propTypes2["default"].oneOfType([_propTypes2["default"].string, _propTypes2["default"].element, _propTypes2["default"].object]),
  jsxdata: _propTypes2["default"].object,
  fetchUrl: _propTypes2["default"].string,
  fetchParams: _propTypes2["default"].object,
  fetchMethod: _propTypes2["default"].string,
  fetchHeader: _propTypes2["default"].object,
  currentPage: _propTypes2["default"].number,
  rowSelector: _propTypes2["default"].string,
  actionBar: _propTypes2["default"].oneOfType([_propTypes2["default"].array, _propTypes2["default"].object]),
  linkBar: _propTypes2["default"].oneOfType([_propTypes2["default"].array, _propTypes2["default"].object]),
  fitResponse: _propTypes2["default"].func,
  processData: _propTypes2["default"].func,
  beforeFetch: _propTypes2["default"].func,
  onFetchError: _propTypes2["default"].func,
  onColumnPick: _propTypes2["default"].func,
  addRowClassName: _propTypes2["default"].func,
  shouldResetExpandedKeys: _propTypes2["default"].func,
  passedData: _propTypes2["default"].object,
  getSavedData: _propTypes2["default"].bool,
  onChange: _propTypes2["default"].func,
  renderModel: _propTypes2["default"].string,
  levels: _propTypes2["default"].number,
  footer: _propTypes2["default"].func,
  showColumnPickerCheckAll: _propTypes2["default"].bool,
  defaultEditable: _propTypes2["default"].bool,
  getTooltipContainer: _propTypes2["default"].func,
  columnResizeable: _propTypes2["default"].bool,
  defaultRowGroupActiveKeys: _propTypes2["default"].oneOfType([_propTypes2["default"].array, _propTypes2["default"].number]),
  onToggleSubComp: _propTypes2["default"].func,
  onRowGroupOpenChange: _propTypes2["default"].func,
  needCheckRightFixed: _propTypes2["default"].bool,
  fixHeaderToTop: _propTypes2["default"].bool,
  fixHeaderOffset: _propTypes2["default"].number,
  fixActionBarToTop: _propTypes2["default"].bool,
  fixActionBarOffset: _propTypes2["default"].number,
  expandIconType: _propTypes2["default"].string,
  tooltipPlacement: _propTypes2["default"].oneOf(['topLeft', 'top', 'topRight', 'bottomLeft', 'bottom', 'bottomRight']),
  allowActionEventDefault: _propTypes2["default"].bool
};

exports.propTypes = propTypes;
exports.defaultProps = defaultProps;