'use strict';

Object.defineProperty(exports, "__esModule", {
   value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _StyleMaps = require('./StyleMaps');

var _StyleMaps2 = _interopRequireDefault(_StyleMaps);

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var Col = function (_React$Component) {
   _inherits(Col, _React$Component);

   function Col() {
      _classCallCheck(this, Col);

      return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
   }

   Col.prototype.render = function render() {
      var _this2 = this;

      var _props = this.props,
          componentClass = _props.componentClass,
          rest = _objectWithoutProperties(_props, ['componentClass']);

      var _splitGridProps = (0, _utils.splitGridProps)(rest),
          _splitGridProps2 = _slicedToArray(_splitGridProps, 1),
          elementProps = _splitGridProps2[0];

      var ComponentClass = componentClass;
      var classes = {};

      Object.keys(_StyleMaps2["default"].SIZES).forEach(function (key) {
         var size = _StyleMaps2["default"].SIZES[key];
         var prop = size;
         var classPart = size + '-';

         if (_this2.props[prop]) {
            classes['col-' + classPart + _this2.props[prop]] = true;
         }

         prop = size + 'Offset';
         classPart = size + '-offset-';
         if (_this2.props[prop] >= 0) {
            classes['col-' + classPart + _this2.props[prop]] = true;
         }

         prop = size + 'Push';
         classPart = size + '-push-';
         if (_this2.props[prop] >= 0) {
            classes['col-' + classPart + _this2.props[prop]] = true;
         }

         prop = size + 'Pull';
         classPart = size + '-pull-';
         if (_this2.props[prop] >= 0) {
            classes['col-' + classPart + _this2.props[prop]] = true;
         }
      }, this);
      return _react2["default"].createElement(
         ComponentClass,
         _extends({}, elementProps, { className: (0, _classnames2["default"])(this.props.className, classes) }),
         this.props.children
      );
   };

   return Col;
}(_react2["default"].Component);

Col.displayName = 'Col';
Col.propTypes = {
   /**
      * The number of columns you wish to span
      *
      * for Extra small devices Phones (<768px)
      *
      * class-prefix `col-xs-`
      */
   xs: _propTypes2["default"].number,
   /**
      * The number of columns you wish to span
      *
      * for Small devices Tablets (≥768px)
      *
      * class-prefix `col-sm-`
      */
   sm: _propTypes2["default"].number,
   /**
      * The number of columns you wish to span
      *
      * for Medium devices Desktops (≥992px)
      *
      * class-prefix `col-md-`
      */
   md: _propTypes2["default"].number,
   /**
      * The number of columns you wish to span
      *
      * for Large devices Desktops (≥1200px)
      *
      * class-prefix `col-lg-`
      */
   lg: _propTypes2["default"].number,
   /**
      * Move columns to the right
      *
      * for Extra small devices Phones
      *
      * class-prefix `col-xs-offset-`
      */
   xsOffset: _propTypes2["default"].number,
   /**
      * Move columns to the right
      *
      * for Small devices Tablets
      *
      * class-prefix `col-sm-offset-`
      */
   smOffset: _propTypes2["default"].number,
   /**
      * Move columns to the right
      *
      * for Medium devices Desktops
      *
      * class-prefix `col-md-offset-`
      */
   mdOffset: _propTypes2["default"].number,
   /**
      * Move columns to the right
      *
      * for Large devices Desktops
      *
      * class-prefix `col-lg-offset-`
      */
   lgOffset: _propTypes2["default"].number,
   /**
      * Change the order of grid columns to the right
      *
      * for Extra small devices Phones
      *
      * class-prefix `col-xs-push-`
      */
   xsPush: _propTypes2["default"].number,
   /**
      * Change the order of grid columns to the right
      *
      * for Small devices Tablets
      *
      * class-prefix `col-sm-push-`
      */
   smPush: _propTypes2["default"].number,
   /**
      * Change the order of grid columns to the right
      *
      * for Medium devices Desktops
      *
      * class-prefix `col-md-push-`
      */
   mdPush: _propTypes2["default"].number,
   /**
      * Change the order of grid columns to the right
      *
      * for Large devices Desktops
      *
      * class-prefix `col-lg-push-`
      */
   lgPush: _propTypes2["default"].number,
   /**
      * Change the order of grid columns to the left
      *
      * for Extra small devices Phones
      *
      * class-prefix `col-xs-pull-`
      */
   xsPull: _propTypes2["default"].number,
   /**
      * Change the order of grid columns to the left
      *
      * for Small devices Tablets
      *
      * class-prefix `col-sm-pull-`
      */
   smPull: _propTypes2["default"].number,
   /**
      * Change the order of grid columns to the left
      *
      * for Medium devices Desktops
      *
      * class-prefix `col-md-pull-`
      */
   mdPull: _propTypes2["default"].number,
   /**
      * Change the order of grid columns to the left
      *
      * for Large devices Desktops
      *
      * class-prefix `col-lg-pull-`
      */
   lgPull: _propTypes2["default"].number,
   /**
      * You can use a custom element for this component
      */
   componentClass: _propTypes2["default"].oneOfType([_propTypes2["default"].func, _propTypes2["default"].string])
};

Col.defaultProps = {
   componentClass: 'div'
};

exports["default"] = Col;
module.exports = exports['default'];