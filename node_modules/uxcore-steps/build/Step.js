'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uxcoreIcon = require('uxcore-icon');

var _uxcoreIcon2 = _interopRequireDefault(_uxcoreIcon);

var _uxcoreTooltip = require('uxcore-tooltip');

var _uxcoreTooltip2 = _interopRequireDefault(_uxcoreTooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var Step = function (_React$Component) {
  _inherits(Step, _React$Component);

  function Step(props) {
    _classCallCheck(this, Step);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.onIconClick = _this.onIconClick.bind(_this);
    return _this;
  }

  Step.prototype.onIconClick = function onIconClick() {
    if (this.props.hasDetail || this.props.editable) {
      this.props.onChange(this.props.stepNumber - 1);
    }
  };

  Step.prototype.render = function render() {
    // Destructuring all vars from props
    var _props = this.props,
        prefixCls = _props.prefixCls,
        type = _props.type,
        showIcon = _props.showIcon,
        icon = _props.icon,
        iconPrefix = _props.iconPrefix,
        maxDescriptionWidth = _props.maxDescriptionWidth,
        stepLast = _props.stepLast,
        stepNumber = _props.stepNumber,
        fixStyle = _props.fixStyle,
        tailWidth = _props.tailWidth,
        title = _props.title,
        description = _props.description,
        hasDetail = _props.hasDetail,
        showDetail = _props.showDetail,
        detailContentFixStyle = _props.detailContentFixStyle,
        editable = _props.editable,
        children = _props.children;


    var status = this.props.status || 'wait';

    // arrow-bar 是一种完全不一样的类型，之前的逻辑完全用不到，提前返回
    if (type === 'arrow-bar') {
      var arrowbarStepCls = prefixCls + '-item-arrowbar ' + prefixCls + '-status-' + status;
      if (editable) {
        arrowbarStepCls = arrowbarStepCls + ' ' + prefixCls + '-editable';
      }

      var arrowJsx = null;
      if (!stepLast) {
        arrowJsx = _react2["default"].createElement(
          'div',
          null,
          _react2["default"].createElement('div', { className: prefixCls + '-arrow-right' }),
          _react2["default"].createElement('div', { className: prefixCls + '-arrow-right-bg' })
        );
      }

      var descJsx = null;
      if (description) {
        var overlay = _react2["default"].createElement(
          'div',
          null,
          description
        );
        descJsx = _react2["default"].createElement(
          _uxcoreTooltip2["default"],
          { overlay: overlay, placement: 'bottom' },
          _react2["default"].createElement(_uxcoreIcon2["default"], { usei: true, name: 'xinxitishicopy', className: 'step-info' })
        );
      }

      return _react2["default"].createElement(
        'div',
        { className: arrowbarStepCls },
        _react2["default"].createElement(
          'div',
          { className: prefixCls + '-title', onClick: this.onIconClick },
          _react2["default"].createElement(
            'span',
            null,
            title
          ),
          descJsx
        ),
        arrowJsx
      );
    }

    // arrow-bar 之外的其它类型从这里开始
    var stepCls = prefixCls + '-item ' + prefixCls + '-status-' + status;
    if (editable) {
      stepCls = stepCls + ' ' + prefixCls + '-editable';
    }

    // Step styles by calculating
    var stepStyle = fixStyle ? _extends({}, fixStyle) : {};
    stepStyle.width = tailWidth;

    // 节点图标，逻辑：如果用户指定了 icon 就用指定的 icon，否则根据状态确定 icon
    var iconJsx = _react2["default"].createElement('span', { className: prefixCls + '-icon' });
    if (showIcon) {
      iconJsx = _react2["default"].createElement(
        'span',
        { className: prefixCls + '-icon' },
        stepNumber
      );
      if (icon) {
        stepCls += ' ' + prefixCls + '-custom';
        if (typeof icon === 'string') {
          iconJsx = _react2["default"].createElement('span', { className: prefixCls + '-icon ' + iconPrefix + 'icon ' + iconPrefix + 'icon-' + icon });
        } else {
          iconJsx = _react2["default"].createElement(
            'span',
            { className: prefixCls + '-icon ' + prefixCls + '-uxicon' },
            icon
          );
        }
      } else if (status === 'finish') {
        iconJsx = _react2["default"].createElement(
          'span',
          { className: prefixCls + '-icon' },
          _react2["default"].createElement(_uxcoreIcon2["default"], { usei: true, name: 'option-yixuan-gou' })
        );
      } else if (status === 'error') {
        iconJsx = _react2["default"].createElement(
          'span',
          { className: prefixCls + '-icon' },
          _react2["default"].createElement(_uxcoreIcon2["default"], { usei: true, name: 'biaoqian-qingchu' })
        );
      }
    }

    // 节点之间的连接线
    var tailJsx = null;
    if (stepLast) {
      stepCls += ' ' + prefixCls + '-item-last';
    } else {
      tailJsx = _react2["default"].createElement(
        'div',
        { className: prefixCls + '-tail' },
        _react2["default"].createElement('i', null)
      );
    }

    var headStyle = { cursor: hasDetail ? 'pointer' : 'default' };
    var detailCls = prefixCls + '-detail ' + (showDetail ? prefixCls + '-detail-current' : '');

    // 描述，为了兼容之前的样式，默认还是已 pop 的方式放在上面，用户指定 bottom-desc 的类型后放到 title 下面
    var descContentJsx = null;
    if (description) {
      descContentJsx = _react2["default"].createElement(
        'div',
        { className: prefixCls + '-description' },
        description
      );
    } else {
      stepCls += ' ' + prefixCls + '-no-desc';
    }

    var descriptionDesc = descContentJsx;
    if (type !== 'bottom-desc') {
      descriptionDesc = _react2["default"].createElement(
        'div',
        null,
        descContentJsx,
        descContentJsx ? _react2["default"].createElement('div', { className: prefixCls + '-description-arrow' }) : null
      );
    }

    var titleTitle = typeof title === 'string' ? title : '';

    return _react2["default"].createElement(
      'div',
      { className: '' + stepCls, style: stepStyle },
      tailJsx,
      _react2["default"].createElement(
        'div',
        { className: prefixCls + '-head', style: headStyle, onClick: this.onIconClick },
        _react2["default"].createElement(
          'div',
          { className: prefixCls + '-head-inner' },
          iconJsx
        )
      ),
      _react2["default"].createElement(
        'div',
        { className: prefixCls + '-main', style: { maxWidth: maxDescriptionWidth } },
        _react2["default"].createElement('div', { className: prefixCls + '-detail-arrow', style: { display: showDetail ? 'block' : 'none' } }),
        _react2["default"].createElement(
          'div',
          { className: prefixCls + '-title', title: titleTitle },
          title
        ),
        descriptionDesc
      ),
      _react2["default"].createElement(
        'div',
        { className: detailCls },
        _react2["default"].createElement(
          'div',
          { className: prefixCls + '-detail-con', style: detailContentFixStyle },
          _react2["default"].createElement(
            'div',
            { className: prefixCls + '-detail-content' },
            children
          )
        )
      )
    );
  };

  return Step;
}(_react2["default"].Component);

Step.displayName = 'Step';
Step.propTypes = {
  hasDetail: _propTypes2["default"].bool,
  editable: _propTypes2["default"].bool,
  onChange: _propTypes2["default"].func,
  stepNumber: _propTypes2["default"].number,
  prefixCls: _propTypes2["default"].string,
  className: _propTypes2["default"].string,
  iconPrefix: _propTypes2["default"].string,
  maxDescriptionWidth: _propTypes2["default"].number,
  current: _propTypes2["default"].number,
  direction: _propTypes2["default"].string,
  showIcon: _propTypes2["default"].bool,
  icon: _propTypes2["default"].any,
  type: _propTypes2["default"].oneOf(['default', 'title-on-top', 'long-desc', 'bottom-desc', 'arrow-bar']),
  showDetail: _propTypes2["default"].bool,
  currentDetail: _propTypes2["default"].number,
  stepLast: _propTypes2["default"].bool,
  fixStyle: _propTypes2["default"].object,
  tailWidth: _propTypes2["default"].node,
  title: _propTypes2["default"].node,
  description: _propTypes2["default"].node,
  detailContentFixStyle: _propTypes2["default"].object,
  children: _propTypes2["default"].any,
  status: _propTypes2["default"].string
};
Step.defaultProps = {
  hasDetail: false,
  editable: false,
  onChange: function onChange() {},
  stepNumber: 0,
  prefixCls: 'kuma-step',
  className: '',
  iconPrefix: '',
  maxDescriptionWidth: 100,
  current: 0,
  direction: '',
  showIcon: true,
  icon: '',
  type: 'default',
  showDetail: false,
  currentDetail: 0,
  stepLast: false,
  fixStyle: null,
  tailWidth: 0,
  title: '',
  description: '',
  detailContentFixStyle: {},
  children: [],
  status: ''
};
exports["default"] = Step;
module.exports = exports['default'];