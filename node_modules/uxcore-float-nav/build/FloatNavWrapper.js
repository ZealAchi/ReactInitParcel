'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _FloatNav = require('./FloatNav');

var _FloatNav2 = _interopRequireDefault(_FloatNav);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * FloatNav Component for uxcore
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author vincent.bian
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2015-2016, Uxcore Team, Alinw.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var FloatNavWrapper = function (_Component) {
  _inherits(FloatNavWrapper, _Component);

  function FloatNavWrapper(props) {
    _classCallCheck(this, FloatNavWrapper);

    var _this = _possibleConstructorReturn(this, _Component.call(this, props));

    _this.state = {
      scrollTop: 0
    };
    return _this;
  }

  FloatNavWrapper.prototype.renderContent = function renderContent() {
    return this.props.content;
  };

  FloatNavWrapper.prototype.render = function render() {
    var _this2 = this;

    var _props = this.props,
        prefixCls = _props.prefixCls,
        offset = _props.offset;
    var scrollTop = this.state.scrollTop;

    return _react2["default"].createElement(
      'div',
      null,
      _react2["default"].createElement(
        'div',
        {
          className: prefixCls + '-wrapper',
          ref: function ref(node) {
            return _this2.wrapper = node;
          }
        },
        this.renderContent()
      ),
      _react2["default"].createElement(_FloatNav2["default"], _extends({}, this.props, {
        wrapper: this.wrapper,
        onScrollChange: function onScrollChange(scrollTop) {
          _this2.setState({ scrollTop: scrollTop });
        }
      }))
    );
  };

  return FloatNavWrapper;
}(_react.Component);

FloatNavWrapper.displayName = 'FloatNavWrapper';
FloatNavWrapper.defaultProps = {
  prefixCls: 'uxcore-float-nav',
  className: '',
  showOrderNumber: true,
  width: 260,
  height: 370,
  offset: {
    right: 20,
    bottom: 20
  },
  content: null,
  stepLength: 50,
  hoverable: false
};
FloatNavWrapper.propTypes = {
  prefixCls: _propTypes2["default"].string,
  className: _propTypes2["default"].string,
  showOrderNumber: _propTypes2["default"].bool,
  width: _propTypes2["default"].number,
  height: _propTypes2["default"].number,
  offset: _propTypes2["default"].shape({
    right: _propTypes2["default"].number,
    bottom: _propTypes2["default"].number
  }),
  content: _propTypes2["default"].element,
  stepLength: _propTypes2["default"].number,
  children: _propTypes2["default"].any,
  hoverable: _propTypes2["default"].bool
};
exports["default"] = FloatNavWrapper;
module.exports = exports['default'];