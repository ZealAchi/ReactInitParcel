'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Left = require('./Left');

var _Left2 = _interopRequireDefault(_Left);

var _Right = require('./Right');

var _Right2 = _interopRequireDefault(_Right);

var _classnames4 = require('classnames');

var _classnames5 = _interopRequireDefault(_classnames4);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * @author: eternalsky
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * @time:   10/26 2015
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */

var Layout = function (_React$Component) {
  _inherits(Layout, _React$Component);

  function Layout(props) {
    _classCallCheck(this, Layout);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.state = {};
    return _this;
  }

  Layout.prototype.getSuffix = function getSuffix(leftAdaptive, rightAdaptive) {
    var suffix = '';
    // 如果都是非自适应，则为 fixed
    if (!leftAdaptive && !rightAdaptive) {
      suffix = 'fixed';
    } else if (!leftAdaptive && rightAdaptive) {
      // 左侧定宽，右侧自适应，lf
      suffix = 'lf';
    } else if (leftAdaptive && !rightAdaptive) {
      // 左侧自适应，右侧定宽，rf
      suffix = 'rf';
    } else {
      // console.error('left and right cannot be both adaptive, layout generation failed');
    }
    return suffix;
  };

  Layout.prototype.processChildren = function processChildren() {
    var me = this;
    var children = me.props.children;
    var leftAdaptive = false;
    var rightAdaptive = false;
    _react2["default"].Children.map(children, function (child) {
      if (child && typeof child.type === 'function' && child.type.displayName === 'Left') {
        me.left = child;
        leftAdaptive = !!child.props.adaptive;
      } else if (child && typeof child.type === 'function' && child.type.displayName === 'Right') {
        me.right = child;
        rightAdaptive = !!child.props.adaptive;
      }
    });

    me.suffix = me.getSuffix(leftAdaptive, rightAdaptive);
    if (me.suffix === 'rf') {
      me.rightStyle = {
        marginLeft: -me.right.props.width
      };
      me.leftStyle = {
        paddingRight: me.right.props.width
      };
    } else if (me.suffix === 'lf') {
      me.rightStyle = {
        paddingLeft: me.left.props.width
      };
      me.leftStyle = {
        marginRight: -me.left.props.width
      };
    }
    return me.generateClass(me.suffix);
  };

  Layout.prototype.generateClass = function generateClass(suffix) {
    var me = this;
    var prefixCls = me.props.prefixCls;
    var length = _react2["default"].Children.count(me.props.children);
    var layoutCls = '';
    var leftCls = '';
    var rightCls = '';

    if (length === 2) {
      layoutCls = prefixCls + '-2c';
    } else if (length === 3) {
      layoutCls = prefixCls + '-3c';
    } else {
      // console.error('children length should be 2 or 3, layout generation failed');
    }

    leftCls = layoutCls + '-left-' + suffix;
    rightCls = layoutCls + '-right-' + suffix;

    return {
      layoutCls: layoutCls,
      leftCls: leftCls,
      rightCls: rightCls
    };
  };

  Layout.prototype.renderLeft = function renderLeft(cls) {
    var me = this;
    if (!!me.left) {
      var _classnames;

      return _react2["default"].cloneElement(me.left, {
        className: (0, _classnames5["default"])((_classnames = {}, _defineProperty(_classnames, me.left.props.className, !!me.left.props.className), _defineProperty(_classnames, cls.leftCls, true), _classnames)),
        style: me.leftStyle || {},
        key: 'left'
      });
    }
    return undefined;
  };

  Layout.prototype.renderRight = function renderRight(cls) {
    var me = this;
    if (!!me.right) {
      var _classnames2;

      return _react2["default"].cloneElement(me.right, {
        className: (0, _classnames5["default"])((_classnames2 = {}, _defineProperty(_classnames2, me.right.props.className, !!me.right.props.className), _defineProperty(_classnames2, cls.rightCls, true), _classnames2)),
        style: me.rightStyle || {},
        key: 'right'
      });
    }
    return undefined;
  };

  Layout.prototype.renderLayout = function renderLayout(cls) {
    var me = this;
    var arr = [];
    if (me.suffix === 'lf') {
      arr.push(me.renderRight(cls));
      arr.push(me.renderLeft(cls));
    } else {
      arr.push(me.renderLeft(cls));
      arr.push(me.renderRight(cls));
    }
    return arr;
  };

  Layout.prototype.render = function render() {
    var _classnames3;

    var me = this;
    var cls = me.processChildren();
    return _react2["default"].createElement(
      'div',
      {
        className: (0, _classnames5["default"])((_classnames3 = {}, _defineProperty(_classnames3, me.props.className, !!me.props.className), _defineProperty(_classnames3, cls.layoutCls, true), _defineProperty(_classnames3, 'fn-clear', true), _classnames3))
      },
      me.renderLayout(cls)
    );
  };

  return Layout;
}(_react2["default"].Component);

Layout.Left = _Left2["default"];
Layout.Right = _Right2["default"];
Layout.displayName = 'Layout';
Layout.defaultProps = {
  prefixCls: 'kuma-layout'
};
Layout.propTypes = {
  prefixCls: _propTypes2["default"].string
};

exports["default"] = Layout;
module.exports = exports['default'];