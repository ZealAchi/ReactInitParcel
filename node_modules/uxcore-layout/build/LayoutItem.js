'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _objectAssign = require('object-assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var LayoutItem = function (_React$Component) {
  _inherits(LayoutItem, _React$Component);

  function LayoutItem(props) {
    _classCallCheck(this, LayoutItem);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.state = {};
    return _this;
  }

  LayoutItem.prototype.render = function render() {
    var me = this;
    var style = {};
    if (!me.props.adaptive) {
      style.width = me.props.width;
    }
    return _react2["default"].createElement(
      'div',
      {
        className: (0, _classnames3["default"])(_defineProperty({}, me.props.className, !!me.props.className)),
        style: (0, _objectAssign2["default"])({}, style, me.props.style)
      },
      me.props.children
    );
  };

  return LayoutItem;
}(_react2["default"].Component);

LayoutItem.displayName = 'LayoutItem';
LayoutItem.defaultProps = {
  width: 500
};
LayoutItem.propTypes = {
  width: _propTypes2["default"].number,
  adaptive: _propTypes2["default"].bool
};

exports["default"] = LayoutItem;
module.exports = exports['default'];