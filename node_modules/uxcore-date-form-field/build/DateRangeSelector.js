'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uxcoreButton = require('uxcore-button');

var _uxcoreButton2 = _interopRequireDefault(_uxcoreButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var DateRangeSelector = function (_React$Component) {
  _inherits(DateRangeSelector, _React$Component);

  function DateRangeSelector() {
    var _temp, _this, _ret;

    _classCallCheck(this, DateRangeSelector);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onSelectHandle = function (start, end) {
      _this.props.onSelect(start, end);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  DateRangeSelector.prototype.render = function render() {
    var _this2 = this;

    var dateRanges = this.props.dateRanges;

    return dateRanges.map(function (range) {
      var text = range.text,
          value = range.value;

      return _react2["default"].createElement(
        _uxcoreButton2["default"],
        {
          size: 'small',
          onClick: function onClick() {
            return _this2.onSelectHandle(value.start, value.end);
          },
          key: text
        },
        text
      );
    });
  };

  return DateRangeSelector;
}(_react2["default"].Component);

DateRangeSelector.defaultProps = {
  dateRanges: [],
  onSelect: function onSelect() {}
};
DateRangeSelector.propTypes = {
  dateRanges: _propTypes2["default"].array,
  onSelect: _propTypes2["default"].func
};
exports["default"] = DateRangeSelector;
module.exports = exports['default'];