import * as React from 'react';
import Wrap, { INoticeWrapProps } from './Wrap';
import NoticeWrap from './Wrap';
export declare type NoticePositions = 'right-top' | 'right-bottom' | 'left-top' | 'left-bottom';
declare type ContainerChild = React.ReactElement<INoticeWrapProps, typeof NoticeWrap>;
interface INoticeContainerProps {
    element: HTMLDivElement;
}
interface INoticeContainerState {
    list: readonly ContainerChild[];
}
export declare const instanceMap: Map<number, React.RefObject<Wrap>>;
declare class NoticeContainer extends React.Component<INoticeContainerProps, INoticeContainerState> {
    state: INoticeContainerState;
    onExited: (id: number) => void;
    push(children: React.ReactNode): number;
    render(): JSX.Element;
}
export declare function getContainer(position: NoticePositions): NoticeContainer;
export declare function remove(id: number): void;
export {};
