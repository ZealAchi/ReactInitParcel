import { __extends } from "tslib";
import * as React from 'react';
import { Component } from 'react';
import cx from 'classnames';
import { isElement } from 'react-is';
var BreadcrumbSteps = (function (_super) {
    __extends(BreadcrumbSteps, _super);
    function BreadcrumbSteps() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onStepChange = function (id) {
            var onStepChange = _this.props.onStepChange;
            onStepChange && onStepChange(id);
        };
        return _this;
    }
    BreadcrumbSteps.prototype.render = function () {
        var _a;
        var _this = this;
        var props = this.props;
        var className = props.className, prefix = props.prefix, children = props.children, current = props.current, sequence = props.sequence, onStepChange = props.onStepChange, type = props.type;
        var stepWidth = 100 / React.Children.count(children) + "%";
        var isBreadcrumb = type === 'breadcrumb';
        var isCard = type === 'card';
        var isTabs = type === 'tabs';
        var stepsCls = cx(prefix + "-steps", className, (_a = {},
            _a[prefix + "-steps-breadcrumb"] = isBreadcrumb,
            _a[prefix + "-steps-card"] = isCard,
            _a[prefix + "-steps-tabs"] = isTabs,
            _a));
        return (React.createElement("div", { className: stepsCls, "data-zv": '7.4.3' }, React.Children.map(children, function (item, index) {
            var stepClassName = cx(prefix + "-steps-item", {
                'is-finish': isBreadcrumb && index <= current - 1,
                'is-current': (isCard || isTabs) && index === current - 1,
                'is-clicked': Boolean(onStepChange),
            });
            if (!isElement(item)) {
                return null;
            }
            var itemTitle = item.props.title;
            return (React.createElement("div", { className: stepClassName, style: { width: stepWidth }, onClick: function () { return _this.onStepChange(index + 1); }, "data-zv": '7.4.3' },
                React.createElement("div", { className: prefix + "-steps-step", "data-zv": '7.4.3' }, sequence ? index + 1 + ". " + itemTitle : itemTitle)));
        })));
    };
    return BreadcrumbSteps;
}(Component));
export default BreadcrumbSteps;
