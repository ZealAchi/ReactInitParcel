import { __extends } from "tslib";
import * as React from 'react';
import { Component } from 'react';
import cx from 'classnames';
import Placeholder from '../placeholder';
import isNil from '../utils/isNil';
var Card = (function (_super) {
    __extends(Card, _super);
    function Card() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Card.prototype.render = function () {
        var _a;
        var _b = this.props, title = _b.title, action = _b.action, type = _b.type, loading = _b.loading, style = _b.style, children = _b.children, className = _b.className, bodyStyle = _b.bodyStyle, prefix = _b.prefix;
        var isValidTitle = !isNil(title);
        var isValidAction = !isNil(action);
        return (React.createElement("div", { className: cx(prefix + "-card", className, (_a = {},
                _a[prefix + "-card--normal"] = type === 'normal',
                _a[prefix + "-card--nested"] = type === 'nested',
                _a)), style: style, "data-zv": '7.4.3' },
            (isValidTitle || isValidAction) && (React.createElement("div", { className: prefix + "-card-header", "data-zv": '7.4.3' },
                isValidTitle && (React.createElement("h3", { className: prefix + "-card-header__title", "data-zv": '7.4.3' }, title)),
                isValidAction && (React.createElement("div", { className: prefix + "-card-header__action", "data-zv": '7.4.3' }, action)))),
            React.createElement("div", { className: prefix + "-card-body", style: bodyStyle, "data-zv": '7.4.3' }, loading ? React.createElement(Placeholder.TextBlock, { rows: 5 }) : children)));
    };
    Card.defaultProps = {
        type: 'normal',
        style: {},
        bodyStyle: {},
        loading: false,
        className: '',
        prefix: 'zent',
    };
    return Card;
}(Component));
export { Card };
export default Card;
