import { Omit } from 'utility-types';
export declare type TextMarkSearchWords = string | RegExp;
export interface ITextMarkChunk {
    highlight: boolean;
    start: number;
    end: number;
}
export interface ITextMarkFindAllParameters {
    autoEscape?: boolean;
    caseSensitive?: boolean;
    findChunks: TextMarkFindChunksFunction;
    sanitize?: TextMarkSanitizeFunction;
    searchWords: TextMarkSearchWords[];
    textToHighlight: string;
}
export interface ITextMarkCombineChunksParamters {
    chunks: ITextMarkChunk[];
}
export interface ITextMarkFillInChunksParameters {
    chunksToHighlight: ITextMarkChunk[];
    totalLength: number;
}
export declare type TextMarkFindChunksFunction = (options: Omit<ITextMarkFindAllParameters, 'findChunks'>) => ITextMarkChunk[];
export declare type TextMarkSanitizeFunction = (str: string) => string;
export declare function findAll({ autoEscape, caseSensitive, findChunks, sanitize, searchWords, textToHighlight, }: ITextMarkFindAllParameters): ITextMarkChunk[];
