import { __assign, __extends, __rest } from "tslib";
import * as React from 'react';
import Group from './Group';
import { ButtonDirective } from './Directive';
var Button = (function (_super) {
    __extends(Button, _super);
    function Button() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Button.prototype.render = function () {
        var _a = this.props, href = _a.href, target = _a.target, htmlType = _a.htmlType, type = _a.type, size = _a.size, block = _a.block, disabled = _a.disabled, loading = _a.loading, outline = _a.outline, bordered = _a.bordered, icon = _a.icon, children = _a.children, download = _a.download, props = __rest(_a, ["href", "target", "htmlType", "type", "size", "block", "disabled", "loading", "outline", "bordered", "icon", "children", "download"]);
        var child;
        if (href || target) {
            child = (React.createElement("a", __assign({ href: disabled || loading ? undefined : href || '', target: target, download: download }, props, { "data-zv": '7.4.3' }), children));
        }
        else {
            child = (React.createElement("button", __assign({ type: htmlType, disabled: !!(disabled || loading) }, props, { "data-zv": '7.4.3' }), children));
        }
        return (React.createElement(ButtonDirective, { type: type, size: size, block: block, disabled: disabled, loading: loading, outline: outline, bordered: bordered, icon: icon }, child));
    };
    Button.defaultProps = {
        type: 'default',
        size: 'medium',
        htmlType: 'button',
        bordered: true,
    };
    Button.Group = Group;
    Button.Directive = ButtonDirective;
    return Button;
}(React.Component));
export { Button };
export default Button;
