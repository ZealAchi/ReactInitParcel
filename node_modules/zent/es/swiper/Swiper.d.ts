import * as React from 'react';
import { Component } from 'react';
export interface ISwiperProps {
    className?: string;
    prefix?: string;
    transitionDuration?: number;
    autoplay?: boolean;
    autoplayInterval?: number;
    dots?: boolean;
    dotsColor: string;
    dotsSize?: 'normal' | 'small' | 'large';
    arrows?: boolean;
    arrowsType?: 'dark' | 'light';
    onChange?: (current: number, prev: number | null) => void;
    children?: React.ReactNode;
}
export interface ISwiperState {
    currentIndex: number;
    prevProps?: ISwiperProps;
}
export declare class Swiper extends Component<ISwiperProps, ISwiperState> {
    static defaultProps: {
        className: string;
        prefix: string;
        transitionDuration: number;
        autoplay: boolean;
        autoplayInterval: number;
        dots: boolean;
        dotsColor: string;
        dotsSize: string;
        arrows: boolean;
        arrowsType: string;
    };
    swiper: HTMLDivElement;
    swiperContainer: HTMLDivElement;
    swiperWidth: number;
    autoplayTimer?: number;
    isSwiping: boolean;
    state: {
        currentIndex: number;
    };
    init: (isResetToOrigin?: boolean) => void;
    getSwiper: (swiper: HTMLDivElement) => void;
    getSwiperContainer: (swiperContainer: HTMLDivElement) => void;
    setSwiperWidth: () => void;
    startAutoplay: () => void;
    clearAutoplay: () => void;
    next: () => void;
    prev: () => void;
    swipeTo: (index: number) => void;
    translate: (currentIndex: number, prevIndex: number, isSilent?: boolean) => void;
    resetPosition: (currentIndex: number) => void;
    getRealPrevIndex: (index: number) => number;
    cloneChildren: (children?: React.ReactNode) => {};
    handleMouseEnter: () => void;
    handleMouseLeave: () => void;
    handleDotsClick: (index: number) => void;
    handleResize: any;
    static getDerivedStateFromProps(props: ISwiperProps, state: ISwiperState): Partial<ISwiperState> | null;
    componentDidMount(): void;
    componentDidUpdate(prevProps: ISwiperProps, prevState: ISwiperState): void;
    componentWillUnmount(): void;
    render(): JSX.Element;
}
export default Swiper;
