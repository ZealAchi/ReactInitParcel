import { __extends } from "tslib";
import * as React from 'react';
import { Component } from 'react';
import cx from 'classnames';
var Star = (function (_super) {
    __extends(Star, _super);
    function Star() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.elRef = React.createRef();
        _this.onHover = function (e) {
            var _a = _this.props, onHover = _a.onHover, index = _a.index;
            onHover(e, index);
        };
        _this.onClick = function (e) {
            var _a = _this.props, onClick = _a.onClick, index = _a.index;
            onClick(e, index);
        };
        _this.getFloatValue = function () {
            var value = _this.props.value;
            return (value * 100) % 100 + "%";
        };
        return _this;
    }
    Star.prototype.getClassName = function () {
        var _a;
        var _b = this.props, prefix = _b.prefix, index = _b.index, value = _b.value, allowHalf = _b.allowHalf, readOnly = _b.readOnly;
        var starValue = index + 1;
        var isFull = starValue <= value;
        var isZero = starValue > Math.ceil(value);
        var isHalf = allowHalf && value + 0.5 === starValue;
        var isPart = readOnly && starValue > value && starValue === Math.ceil(value);
        return cx(prefix + "-rate-star", (_a = {},
            _a[prefix + "-rate-star-full"] = isFull,
            _a[prefix + "-rate-star-zero"] = isZero,
            _a[prefix + "-rate-star-half"] = isHalf,
            _a[prefix + "-rate-star-part"] = isPart,
            _a));
    };
    Star.prototype.render = function () {
        var _a = this, onHover = _a.onHover, onClick = _a.onClick;
        var _b = this.props, disabled = _b.disabled, prefix = _b.prefix, character = _b.character, readOnly = _b.readOnly;
        var disableEdit = disabled || readOnly;
        return (React.createElement("li", { ref: this.elRef, className: this.getClassName(), onClick: disableEdit ? undefined : onClick, onMouseMove: disableEdit ? undefined : onHover, "data-zv": '7.4.3' },
            React.createElement("div", { className: prefix + "-rate-star-first", style: readOnly ? { width: this.getFloatValue() } : undefined, "data-zv": '7.4.3' }, character),
            React.createElement("div", { className: prefix + "-rate-star-second", "data-zv": '7.4.3' }, character)));
    };
    return Star;
}(Component));
export default Star;
