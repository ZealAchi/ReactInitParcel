import { __assign, __extends, __rest } from "tslib";
import * as React from 'react';
import { Component } from 'react';
import { CSSTransition } from 'react-transition-group';
import Portal from '../portal';
import Icon from '../icon';
var NotifyTransition = function (_a) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(CSSTransition, __assign({}, props, { timeout: 800, classNames: "notify" }), children));
};
var ICON_TYPE = {
    success: 'check-circle',
    warn: 'warning',
    error: 'close-circle',
    info: 'info-circle',
};
var NotifyContent = (function (_super) {
    __extends(NotifyContent, _super);
    function NotifyContent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onExited = function () {
            _this.props.close();
        };
        return _this;
    }
    NotifyContent.prototype.render = function () {
        var _a = this.props, text = _a.text, status = _a.status, selector = _a.selector, isIn = _a.isIn;
        return (React.createElement(Portal, { selector: selector },
            React.createElement(NotifyTransition, { appear: true, unmountOnExit: true, in: isIn, onExited: this.onExited },
                React.createElement("div", { className: "zent-notify", "data-zv": '7.4.3' },
                    React.createElement("div", { className: "zent-notify-content zent-notify-content-" + status, "data-zv": '7.4.3' },
                        React.createElement(Icon, { className: "zent-notify-content-icon", type: ICON_TYPE[status] }),
                        React.createElement("div", { "data-zv": '7.4.3' }, text))))));
    };
    NotifyContent.defaultProps = {
        text: '',
        status: '',
        className: '',
    };
    return NotifyContent;
}(Component));
export default NotifyContent;
