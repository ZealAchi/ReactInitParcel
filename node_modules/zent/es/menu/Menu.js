import { __extends, __spreadArrays } from "tslib";
import * as React from 'react';
import cx from 'classnames';
import noop from '../utils/noop';
import CommonMenu from './CommonMenu';
import MenuItem from './MenuItem';
import SubMenu from './SubMenu';
var Menu = (function (_super) {
    __extends(Menu, _super);
    function Menu() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            selectedKey: _this.props.defaultSelectedKey,
            expandKeys: _this.props.defaultExpandKeys,
        };
        _this.toggleExpand = function (key) {
            var expandKeys = _this.state.expandKeys;
            var isCurrentKeyExpand = expandKeys.indexOf(key) !== -1;
            var newExpandKeys = isCurrentKeyExpand
                ? expandKeys.filter(function (item) { return item !== key; })
                : __spreadArrays([key], expandKeys);
            _this.setState({
                expandKeys: newExpandKeys,
            });
            _this.props.onExpandChange(newExpandKeys);
        };
        _this.handleSelect = function (key) {
            _this.setState({
                selectedKey: key,
            });
        };
        _this.handleClick = function (e, key) {
            var onClick = _this.props.onClick;
            onClick && onClick(e, key);
        };
        _this.renderMenuItem = function (component, index) {
            if (!component) {
                return null;
            }
            return _this.renderCommonMenuItem(component, index, undefined, {
                depth: 1,
                isInline: _this.props.mode === 'inline',
                inlineIndent: _this.props.inlineIndent,
                selectedKey: _this.state.selectedKey,
                expandKeys: _this.state.expandKeys,
                handleSelect: _this.handleSelect,
                toggleExpand: _this.toggleExpand,
                onSubMenuClick: _this.props.onSubMenuClick,
            });
        };
        return _this;
    }
    Menu.prototype.render = function () {
        var _a;
        var _b = this.props, children = _b.children, prefix = _b.prefix, className = _b.className, style = _b.style, mode = _b.mode;
        var isInline = mode === 'inline';
        var classString = cx(prefix + "-menu", className, (_a = {},
            _a[prefix + "-menu__inline"] = isInline,
            _a));
        return (React.createElement("ul", { className: classString, style: style, "data-zv": '7.4.3' }, React.Children.map(children, this.renderMenuItem)));
    };
    Menu.MenuItem = MenuItem;
    Menu.SubMenu = SubMenu;
    Menu.defaultProps = {
        prefix: 'zent',
        onClick: noop,
        mode: 'pop',
        inlineIndent: 24,
        defaultExpandKeys: [],
        onSubMenuClick: noop,
        onExpandChange: noop,
    };
    return Menu;
}(CommonMenu));
export { Menu };
export default Menu;
