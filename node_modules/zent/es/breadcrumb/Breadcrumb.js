import { __assign, __extends } from "tslib";
import * as React from 'react';
import { Component } from 'react';
import cx from 'classnames';
import Item from './Item';
var Breadcrumb = (function (_super) {
    __extends(Breadcrumb, _super);
    function Breadcrumb() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Breadcrumb.prototype.render = function () {
        var _a = this.props, prefix = _a.prefix, className = _a.className, _b = _a.children, children = _b === void 0 ? null : _b, breads = _a.breads;
        return (React.createElement("div", { className: cx(prefix + "-breadcrumb", className), "data-zv": '7.4.3' },
            children,
            breads &&
                breads.length > 0 &&
                breads.map(function (item, index) {
                    return React.createElement(Item, __assign({}, item, { key: index }));
                })));
    };
    Breadcrumb.defaultProps = {
        prefix: 'zent',
        className: '',
        breads: [],
    };
    Breadcrumb.Item = Item;
    return Breadcrumb;
}(Component));
export { Breadcrumb };
export default Breadcrumb;
