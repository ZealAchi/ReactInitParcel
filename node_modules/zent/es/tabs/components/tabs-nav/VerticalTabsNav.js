import { __assign, __extends } from "tslib";
import * as React from 'react';
import cn from 'classnames';
import VerticalTab from '../tab/VerticalTab';
import BaseTabsNav from '../base/BaseTabsNav';
import { commonTransformTabData } from '../../utils';
var VerticalTabsNav = (function (_super) {
    __extends(VerticalTabsNav, _super);
    function VerticalTabsNav() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.typeName = 'vertical';
        return _this;
    }
    Object.defineProperty(VerticalTabsNav.prototype, "tabsNavCls", {
        get: function () {
            return cn('zent-tabs-nav', "zent-tabs-nav-type__" + this.typeName);
        },
        enumerable: true,
        configurable: true
    });
    VerticalTabsNav.prototype.transformTabDataList = function (tabDataList) {
        return tabDataList.map(function (tabItem) {
            if ('divide' in tabItem) {
                return tabItem;
            }
            return commonTransformTabData(tabItem, false);
        });
    };
    VerticalTabsNav.prototype.renderTab = function (data, index) {
        if ('divide' in data) {
            return React.createElement("div", { key: "divide-" + index, className: "zent-tabs-divide", "data-zv": '7.4.3' });
        }
        return (React.createElement(VerticalTab, __assign({ onSelected: this.onTabSelected }, data, { id: data.key }), data.title));
    };
    VerticalTabsNav.prototype.render = function () {
        var maxHeight = this.props.scrollHeight;
        return (React.createElement("div", { className: this.tabsNavCls, "data-zv": '7.4.3' },
            React.createElement("div", { className: "zent-tabs-nav-content", "data-zv": '7.4.3' },
                React.createElement("div", { className: "zent-tabs-scroll", style: {
                        maxHeight: maxHeight,
                    }, role: "tablist", "data-zv": '7.4.3' }, this.renderTabs()))));
    };
    return VerticalTabsNav;
}(BaseTabsNav));
export default VerticalTabsNav;
