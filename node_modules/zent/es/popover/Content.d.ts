import { Component } from 'react';
import { PositionFunction, IPopoverPosition } from './position-function';
export declare function isPositionVisible(rect: any): boolean;
export interface IPopoverContentProps {
    prefix?: string;
    visible?: boolean;
    getAnchor?: () => Element;
    containerSelector?: string;
    getContentNode?: () => Element;
    placement?: PositionFunction;
    onPositionUpdated?: () => void;
    onPositionReady?: () => void;
    id?: string;
    className?: string;
    cushion?: number;
    anchor?: HTMLElement;
    container?: HTMLElement;
}
export interface IPopoverContentState {
    position: IPopoverPosition;
}
export default class PopoverContent extends Component<IPopoverContentProps, IPopoverContentState> {
    positionReady: boolean;
    positionedParent: Element | null;
    constructor(props: any);
    getAnchor(): Element;
    getPositionedParent(): Element;
    adjustPosition: () => void;
    onWindowResize: ((evt: any, delta: any) => void) & import("../utils/types").ICancelable;
    onWindowScroll: (() => void) & import("../utils/types").ICancelable;
    componentDidMount(): void;
    componentDidUpdate(prevProps: any): void;
    render(): JSX.Element;
}
