import { __extends } from "tslib";
import * as React from 'react';
import { Component } from 'react';
import memoize from '../../utils/memorize-one';
import Select from '../../select';
import { I18nReceiver as Receiver } from '../../i18n';
var memoizedNormalizeSelectOptions = memoize(function normalizeSelectOptions(pageSizeOptions, i18n) {
    return (pageSizeOptions || []).map(function (opt) {
        if (typeof opt === 'number') {
            return { value: opt, text: opt + " " + i18n.items };
        }
        return opt;
    });
});
var Text = function (props) {
    return (React.createElement("span", { className: "zent-pagination-count--" + props.type, "data-zv": '7.4.3' }, props.children));
};
var PageSizeChanger = (function (_super) {
    __extends(PageSizeChanger, _super);
    function PageSizeChanger() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PageSizeChanger.prototype.render = function () {
        var _a = this.props, total = _a.total, formatTotal = _a.formatTotal, pageSize = _a.pageSize, pageSizeOptions = _a.pageSizeOptions, onPageSizeChange = _a.onPageSizeChange;
        if (!pageSizeOptions || pageSizeOptions.length === 0) {
            return (React.createElement(StaticPageSize, { total: total, formatTotal: formatTotal, pageSize: pageSize }));
        }
        var totalText = formatTotal ? formatTotal(total) : total;
        return (React.createElement(Receiver, { componentName: "Pagination" }, function (i18n) {
            var select = (React.createElement(PageSizeSelect, { pageSizeOptions: pageSizeOptions, onPageSizeChange: onPageSizeChange, pageSize: pageSize, i18n: i18n }));
            return (React.createElement("div", { className: "zent-pagination-page-size-changer", "data-zv": '7.4.3' }, i18n.pageStats({
                select: select,
                total: totalText,
                Text: Text,
            })));
        }));
    };
    return PageSizeChanger;
}(Component));
export default PageSizeChanger;
var PageSizeSelect = (function (_super) {
    __extends(PageSizeSelect, _super);
    function PageSizeSelect() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onChange = function (evt, data) {
            _this.props.onPageSizeChange(data.value);
        };
        return _this;
    }
    PageSizeSelect.prototype.render = function () {
        var _a = this.props, pageSize = _a.pageSize, i18n = _a.i18n, pageSizeOptions = _a.pageSizeOptions;
        var options = memoizedNormalizeSelectOptions(pageSizeOptions, i18n);
        return (React.createElement(Select, { width: i18n.selectWidth, autoWidth: true, data: options, value: pageSize, onChange: this.onChange }));
    };
    return PageSizeSelect;
}(Component));
var StaticPageSize = (function (_super) {
    __extends(StaticPageSize, _super);
    function StaticPageSize() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StaticPageSize.prototype.render = function () {
        var _a = this.props, total = _a.total, formatTotal = _a.formatTotal, pageSize = _a.pageSize;
        var totalText = formatTotal ? formatTotal(total) : total;
        return (React.createElement(Receiver, { componentName: "Pagination" }, function (i18n) {
            return (React.createElement("div", { className: "zent-pagination-page-size-changer", "data-zv": '7.4.3' }, i18n.pageStatsStatic({
                total: totalText,
                pageSize: pageSize,
                Text: Text,
            })));
        }));
    };
    return StaticPageSize;
}(Component));
