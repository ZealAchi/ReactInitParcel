import { __extends } from "tslib";
import * as React from 'react';
import ArrowButton from '../button/ArrowButton';
import MiniPageJumper from '../jumper/MiniPageJumper';
import BasePageList from './BasePageList';
var MiniPageList = (function (_super) {
    __extends(MiniPageList, _super);
    function MiniPageList() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onPrevPage = _this.jumpToPageDelta(-1);
        _this.onNextPage = _this.jumpToPageDelta(1);
        return _this;
    }
    MiniPageList.prototype.resetActiveDoubleArrowButton = function () { };
    MiniPageList.prototype.render = function () {
        var _this = this;
        var _a = this.props, layout = _a.layout, buttonBordered = _a.buttonBordered, current = _a.current, onPageChange = _a.onPageChange, lastPageHelp = _a.lastPageHelp;
        return (React.createElement("div", { className: "zent-pagination-page-list--mini", "data-zv": '7.4.3' }, layout.map(function (btn) {
            var type = btn.type;
            if (type === 'left-arrow') {
                return (React.createElement(ArrowButton, { key: type, direction: "left", disabled: btn.disabled, bordered: buttonBordered, onClick: _this.onPrevPage }));
            }
            if (type === 'right-arrow') {
                return (React.createElement(ArrowButton, { key: type, direction: "right", disabled: btn.disabled, bordered: buttonBordered, onClick: _this.onNextPage, disabledHelp: lastPageHelp }));
            }
            if (type === 'mini-jumper') {
                return (React.createElement(MiniPageJumper, { key: type, current: current, totalPages: btn.totalPages, onJump: onPageChange }));
            }
            return null;
        })));
    };
    return MiniPageList;
}(BasePageList));
export default MiniPageList;
