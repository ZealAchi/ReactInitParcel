import { __extends } from "tslib";
import * as React from 'react';
import cx from 'classnames';
import PageSizeChanger from '../components/PageSizeChanger';
import NormalPageList from '../components/list/NormalPageList';
import PageJumper from '../components/jumper/PageJumper';
import BasePagination from './BasePagination';
var AbstractPagination = (function (_super) {
    __extends(AbstractPagination, _super);
    function AbstractPagination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AbstractPagination.prototype.render = function () {
        var layout = this.getLayout(this.props);
        var _a = this.props, current = _a.current, pageSize = _a.pageSize, pageSizeOptions = _a.pageSizeOptions, showQuickJumper = _a.showQuickJumper, showSizeChanger = _a.showSizeChanger, buttonBordered = _a.buttonBordered, className = _a.className, formatTotal = _a.formatTotal, lastPageHelp = _a.lastPageHelp;
        var total = this.getTotal();
        return (React.createElement("div", { className: cx("zent-pagination zent-pagination--" + this.name, className), "data-zv": '7.4.3' },
            showSizeChanger && (React.createElement(PageSizeChanger, { pageSize: pageSize, total: total, formatTotal: formatTotal, pageSizeOptions: pageSizeOptions, onPageSizeChange: this.onPageSizeChange })),
            React.createElement(NormalPageList, { layout: layout, current: current, buttonBordered: buttonBordered, onPageChange: this.onPageChange, lastPageHelp: lastPageHelp }),
            showQuickJumper && React.createElement(PageJumper, { onJump: this.onPageChange })));
    };
    return AbstractPagination;
}(BasePagination));
export { AbstractPagination };
export default AbstractPagination;
