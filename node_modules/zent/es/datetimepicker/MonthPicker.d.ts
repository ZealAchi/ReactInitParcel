import { PureComponent } from 'react';
import { noop } from './constants';
import { DatePickers } from './common/types';
export interface IMonthPickerProps extends DatePickers.ICommonProps {
    disabled?: boolean;
    isFooterVisible?: boolean;
    onBeforeClear?: () => unknown;
}
export declare class MonthPicker extends PureComponent<IMonthPickerProps, any> {
    static defaultProps: {
        placeholder: string;
        format: string;
        prefix: string;
        confirmText: string;
        popPosition: string;
        openPanel: boolean;
        onChange: typeof noop;
        isFooterVisible: boolean;
        canClear: boolean;
        autoComplete: string;
    };
    retType: string;
    picker?: HTMLDivElement | null;
    static getDerivedStateFromProps(props: IMonthPickerProps, state: any): {
        value: string;
        actived: any;
        selected: any;
        openPanel: boolean;
        showPlaceholder: any;
        prevProps: IMonthPickerProps;
    };
    constructor(props: IMonthPickerProps);
    getReturnValue: (date: any) => any;
    onChangeMonth: (val: any) => void;
    onSelectMonth: (val: any, isYear?: boolean) => void;
    onClearInput: (evt: any) => void;
    onConfirm: () => void;
    isDisabled: (val: any) => boolean;
    renderPicker(i18n: any): any;
    togglePicker: () => void;
    render(): JSX.Element;
}
export default MonthPicker;
