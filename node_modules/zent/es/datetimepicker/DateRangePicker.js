import { __assign, __extends, __rest } from "tslib";
import * as React from 'react';
import { PureComponent } from 'react';
import cx from 'classnames';
import isDate from '../utils/isDate';
import { I18nReceiver as Receiver } from '../i18n';
import { TIME_BEGIN, commonProps, noop } from './constants';
import DatePicker from './DatePicker';
var START = 'start';
var END = 'end';
function compatibleInterface(prop) {
    if (!prop)
        return [];
    if (Array.isArray(prop))
        return prop;
    return typeof prop === 'string' || isDate(prop) ? [prop, prop] : prop;
}
var DateRangePicker = (function (_super) {
    __extends(DateRangePicker, _super);
    function DateRangePicker() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onChange = function (type) {
            return function (val) {
                var _a = _this.props, onChange = _a.onChange, value = _a.value;
                var ret = value ? value.slice() : [];
                if (type === START) {
                    ret.length === 2 ? ret.splice(0, 1, val) : ret.splice(0, 1, val, '');
                }
                else {
                    ret.length === 0 ? ret.splice(1, 1, '', val) : ret.splice(1, 1, val);
                }
                onChange(ret);
            };
        };
        return _this;
    }
    DateRangePicker.prototype.renderPicker = function () {
        var _this = this;
        var _a = this.props, className = _a.className, defaultTime = _a.defaultTime, defaultValue = _a.defaultValue, disabledDate = _a.disabledDate, onChange = _a.onChange, onClick = _a.onClick, onClose = _a.onClose, onOpen = _a.onOpen, openPanel = _a.openPanel, placeholder = _a.placeholder, value = _a.value, disabledTime = _a.disabledTime, pickerProps = __rest(_a, ["className", "defaultTime", "defaultValue", "disabledDate", "onChange", "onClick", "onClose", "onOpen", "openPanel", "placeholder", "value", "disabledTime"]);
        var rangePicker;
        var timeArr = compatibleInterface(defaultTime);
        var defaultValueArr = compatibleInterface(defaultValue);
        rangePicker = (React.createElement("div", { className: cx(className, 'range-picker2'), "data-zv": '7.4.3' },
            React.createElement(Receiver, { componentName: "TimePicker" }, function (i18n) { return (React.createElement(DatePicker, __assign({}, pickerProps, { openPanel: openPanel[0], placeholder: placeholder[0] || i18n.start, max: value[1] || pickerProps.max, defaultValue: defaultValueArr[0], defaultTime: timeArr[0], value: value[0], onClick: function (val) { return onClick && onClick(val, START); }, onOpen: function () { return onOpen && onOpen(START); }, onClose: function () { return onClose && onClose(START); }, onChange: _this.onChange(START), disabledDate: function (val) { return disabledDate(val, START); }, disabledTime: function () { return disabledTime(START); } }))); }),
            React.createElement(Receiver, { componentName: "TimePicker" }, function (i18n) { return React.createElement("span", { className: "picker-seperator", "data-zv": '7.4.3' }, i18n.to); }),
            React.createElement(Receiver, { componentName: "TimePicker" }, function (i18n) { return (React.createElement(DatePicker, __assign({}, pickerProps, { openPanel: openPanel[1], placeholder: placeholder[1] || i18n.end, min: value[0] || pickerProps.min, defaultValue: defaultValueArr[1], defaultTime: timeArr[1], value: value[1], onClick: function (val) { return onClick && onClick(val, END); }, onOpen: function () { return onOpen && onOpen(END); }, onClose: function () { return onClose && onClose(END); }, onChange: _this.onChange(END), disabledDate: function (val) { return disabledDate(val, END); }, disabledTime: function () { return disabledTime(END); } }))); })));
        return rangePicker;
    };
    DateRangePicker.prototype.render = function () {
        var _a = this.props, prefix = _a.prefix, className = _a.className;
        var prefixCls = cx(prefix + "-datetime-picker", prefix + "-daterange-picker", className);
        return React.createElement("div", { className: prefixCls, "data-zv": '7.4.3' }, this.renderPicker());
    };
    DateRangePicker.defaultProps = __assign(__assign({}, commonProps), { disabledDate: noop, placeholder: ['', ''], format: 'YYYY-MM-DD', value: [], openPanel: [], defaultTime: [TIME_BEGIN, TIME_BEGIN], disabledTime: function () { return undefined; } });
    return DateRangePicker;
}(PureComponent));
export { DateRangePicker };
export default DateRangePicker;
