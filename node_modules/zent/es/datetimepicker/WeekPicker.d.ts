import { PureComponent } from 'react';
import { Omit } from 'utility-types';
import { noop } from './constants';
import { DatePickers } from './common/types';
export interface IWeekPickerProps extends Omit<DatePickers.ICommonProps<DatePickers.RangeValue>, 'onClick'> {
    startDay?: 0 | 1 | 2 | 3 | 4 | 5 | 6;
    onBeforeClear?: () => boolean;
    onClick?: (val: DatePickers.RangeValue, type?: DatePickers.RangeType) => void;
    isFooterVisible?: boolean;
    showTime?: boolean;
}
export declare class WeekPicker extends PureComponent<IWeekPickerProps, any> {
    static defaultProps: {
        placeholder: string;
        startDay: number;
        prefix: string;
        confirmText: string;
        format: string;
        popPosition: string;
        openPanel: boolean;
        onChange: typeof noop;
        isFooterVisible: boolean;
        canClear: boolean;
        autoComplete: string;
    };
    static getDerivedStateFromProps(props: IWeekPickerProps, state: any): {
        value: any;
        actived: any;
        selected: any;
        openPanel: boolean;
        showPlaceholder: any;
        prevProps: IWeekPickerProps;
    };
    retType: string;
    isFooterShow: boolean;
    constructor(props: IWeekPickerProps);
    onChangeDate: (val: any) => void;
    onHover: (val: any) => void;
    onSelectDate: (val: any) => void;
    onChangeMonth: (type: any) => () => void;
    onClearInput: (evt: any) => void;
    onMouseOut: (evt: any) => void;
    getReturnValue: (date: any) => any;
    onConfirm: () => void;
    renderPicker(i18n: any): any;
    togglePicker: () => void;
    render(): JSX.Element;
}
export default WeekPicker;
