import { __assign, __extends, __rest } from "tslib";
import * as React from 'react';
import { PureComponent } from 'react';
import cx from 'classnames';
import isDate from '../utils/isDate';
import { I18nReceiver as Receiver } from '../i18n';
import { commonProps, noop } from './constants';
import TimePicker from './TimePicker';
var START = 'start';
var END = 'end';
function compatibleInterface(prop) {
    if (!prop)
        return [];
    if (Array.isArray(prop))
        return prop;
    return typeof prop === 'string' || isDate(prop) ? [prop, prop] : prop;
}
var TimeRangePicker = (function (_super) {
    __extends(TimeRangePicker, _super);
    function TimeRangePicker() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onChange = function (type) {
            return function (val) {
                var _a = _this.props, onChange = _a.onChange, value = _a.value;
                var ret = value ? value.slice() : [];
                if (type === START) {
                    ret.length === 2 ? ret.splice(0, 1, val) : ret.splice(0, 1, val, '');
                }
                else {
                    ret.length === 0 ? ret.splice(1, 1, '', val) : ret.splice(1, 1, val);
                }
                onChange && onChange(ret);
            };
        };
        return _this;
    }
    TimeRangePicker.prototype.renderPicker = function () {
        var _this = this;
        var _a = this.props, className = _a.className, defaultValue = _a.defaultValue, onClose = _a.onClose, onOpen = _a.onOpen, placeholder = _a.placeholder, value = _a.value, disabledTime = _a.disabledTime, openPanel = _a.openPanel, pickerProps = __rest(_a, ["className", "defaultValue", "onClose", "onOpen", "placeholder", "value", "disabledTime", "openPanel"]);
        var rangePicker;
        var defaultValueArr = compatibleInterface(defaultValue);
        rangePicker = (React.createElement("div", { className: cx(className, 'range-picker2'), "data-zv": '7.4.3' },
            React.createElement(Receiver, { componentName: "TimePicker" }, function (i18n) { return (React.createElement(TimePicker, __assign({}, pickerProps, { openPanel: openPanel[0], placeholder: placeholder[0] || i18n.startTime, max: value[1] || pickerProps.max, defaultValue: defaultValueArr[0], value: value[0], onOpen: function () { return onOpen && onOpen(START); }, onClose: function () { return onClose && onClose(START); }, onChange: _this.onChange(START), disabledTime: function () { return disabledTime(START); } }))); }),
            React.createElement(Receiver, { componentName: "TimePicker" }, function (i18n) { return React.createElement("span", { className: "picker-seperator", "data-zv": '7.4.3' }, i18n.to); }),
            React.createElement(Receiver, { componentName: "TimePicker" }, function (i18n) { return (React.createElement(TimePicker, __assign({}, pickerProps, { openPanel: openPanel[1], placeholder: placeholder[1] || i18n.endTime, min: value[0] || pickerProps.min, defaultValue: defaultValueArr[1], value: value[1], onOpen: function () { return onOpen && onOpen(END); }, onClose: function () { return onClose && onClose(END); }, onChange: _this.onChange(END), disabledTime: function () { return disabledTime(END); } }))); })));
        return rangePicker;
    };
    TimeRangePicker.prototype.render = function () {
        var _a = this.props, prefix = _a.prefix, className = _a.className;
        var prefixCls = cx(prefix + "-datetime-picker", prefix + "-timerange-picker", className);
        return React.createElement("div", { className: prefixCls, "data-zv": '7.4.3' }, this.renderPicker());
    };
    TimeRangePicker.defaultProps = __assign(__assign({}, commonProps), { format: 'HH:mm:ss', isFooterVisible: true, hourStep: 1, minuteStep: 1, secondStep: 1, disabledDate: noop, placeholder: ['', ''], value: [], openPanel: [], showSecond: false, disabledTime: function () { } });
    return TimeRangePicker;
}(PureComponent));
export { TimeRangePicker };
export default TimeRangePicker;
