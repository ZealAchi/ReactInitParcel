import { __assign, __extends } from "tslib";
import * as React from 'react';
import { PureComponent } from 'react';
import cx from 'classnames';
var NO_STYLE = {};
var Badge = (function (_super) {
    __extends(Badge, _super);
    function Badge() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Badge.prototype.renderCount = function () {
        var _a = this.props, count = _a.count, maxCount = _a.maxCount, dot = _a.dot, showZero = _a.showZero, offset = _a.offset, style = _a.style, prefix = _a.prefix;
        var posStyle = Array.isArray(offset) && offset.length === 2
            ? {
                top: offset[0],
                right: offset[1],
            }
            : NO_STYLE;
        var badgeStyle = style ? __assign(__assign({}, style), posStyle) : posStyle;
        if (dot) {
            return React.createElement("span", { className: prefix + "-badge-dot", style: badgeStyle, "data-zv": '7.4.3' });
        }
        else if (count > 0 || (count === 0 && showZero)) {
            return (React.createElement("span", { className: prefix + "-badge-count", style: badgeStyle, "data-zv": '7.4.3' }, count > maxCount ? maxCount + "+" : count));
        }
        return null;
    };
    Badge.prototype.render = function () {
        var _a;
        var _b = this.props, className = _b.className, prefix = _b.prefix, children = _b.children;
        var containerCls = cx((_a = {},
            _a[prefix + "-badge"] = true,
            _a[prefix + "-badge--has-content"] = children,
            _a[prefix + "-badge--no-content"] = !children,
            _a[className] = !!className,
            _a[prefix + "-badge-none-cont"] = !children,
            _a));
        return (React.createElement("div", { className: containerCls, "data-zv": '7.4.3' },
            children ? (React.createElement("div", { className: prefix + "-badge-content", "data-zv": '7.4.3' }, children)) : null,
            this.renderCount()));
    };
    Badge.defaultProps = {
        count: 0,
        maxCount: 99,
        dot: false,
        showZero: false,
        className: '',
        prefix: 'zent',
    };
    return Badge;
}(PureComponent));
export { Badge };
export default Badge;
