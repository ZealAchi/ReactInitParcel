import { __extends } from "tslib";
import * as React from 'react';
import cx from 'classnames';
var MenuListItem = (function (_super) {
    __extends(MenuListItem, _super);
    function MenuListItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onClick = function (e) {
            var _a = _this.props, item = _a.item, onRequestClose = _a.onRequestClose;
            return handleItemClick({ item: item, onRequestClose: onRequestClose, event: e });
        };
        _this.onMouseEnter = function () {
            var _a = _this.props, focusTo = _a.focusTo, index = _a.index;
            focusTo(index, false);
        };
        _this.onMouseLeave = function () {
            _this.props.focusTo(null);
        };
        return _this;
    }
    MenuListItem.prototype.render = function () {
        var _a = this.props, item = _a.item, hover = _a.hover;
        if (!item) {
            return null;
        }
        var className = item.className, isDivider = item.isDivider, isGroup = item.isGroup, content = item.content;
        if (isDivider) {
            return React.createElement("div", { className: cx('zent-divider-line', className), "data-zv": '7.4.3' });
        }
        if (isGroup) {
            return (React.createElement("li", { className: cx('zent-menu-item-group-header', className), "data-zv": '7.4.3' },
                React.createElement("span", { "data-zv": '7.4.3' }, content)));
        }
        var title = typeof content === 'number' || typeof content === 'string'
            ? "" + content
            : undefined;
        var active = typeof item.active === 'function'
            ? item.active(item.value)
            : !!item.active;
        var hoverable = item.hoverable === undefined ? true : !!item.hoverable;
        return (React.createElement("li", { className: cx('zent-popup-menu-item', {
                hoverable: hoverable,
                disabled: item.disabled,
                active: active,
                hover: hover,
            }, className), onClick: this.onClick, onMouseEnter: this.onMouseEnter, onMouseLeave: this.onMouseLeave, "data-zv": '7.4.3' },
            item.icon ? React.createElement("i", { className: cx('zent-popup-menu-item-icon'), "data-zv": '7.4.3' }) : null,
            React.createElement("span", { title: title, "data-zv": '7.4.3' }, content)));
    };
    return MenuListItem;
}(React.Component));
export { MenuListItem };
export function handleItemClick(_a) {
    var event = _a.event, item = _a.item, onRequestClose = _a.onRequestClose;
    var disabled = item.disabled, onClick = item.onClick;
    if (disabled) {
        return;
    }
    if (onClick) {
        onClick(event);
        if (!event.defaultPrevented) {
            event.preventDefault();
            event.stopPropagation();
            onRequestClose && onRequestClose();
        }
    }
}
