import { __assign } from "tslib";
var transforms = {
    borderRadius: function (value) {
        return {
            msBorderRadius: value,
            MozBorderRadius: value,
            OBorderRadius: value,
            WebkitBorderRadius: value,
            borderRadius: value,
        };
    },
    boxShadow: function (value) {
        return {
            msBoxShadow: value,
            MozBoxShadow: value,
            OBoxShadow: value,
            WebkitBoxShadow: value,
            boxShadow: value,
        };
    },
    userSelect: function (value) {
        return {
            WebkitTouchCallout: value,
            KhtmlUserSelect: value,
            MozUserSelect: value,
            msUserSelect: value,
            WebkitUserSelect: value,
            userSelect: value,
        };
    },
    flex: function (value) {
        return {
            WebkitBoxFlex: value,
            MozBoxFlex: value,
            WebkitFlex: value,
            msFlex: value,
            flex: value,
        };
    },
    flexBasis: function (value) {
        return {
            WebkitFlexBasis: value,
            flexBasis: value,
        };
    },
    justifyContent: function (value) {
        return {
            WebkitJustifyContent: value,
            justifyContent: value,
        };
    },
    transition: function (value) {
        return {
            msTransition: value,
            MozTransition: value,
            OTransition: value,
            WebkitTransition: value,
            transition: value,
        };
    },
    transform: function (value) {
        return {
            msTransform: value,
            MozTransform: value,
            OTransform: value,
            WebkitTransform: value,
            transform: value,
        };
    },
    absolute: function (value) {
        var direction = value && value.split(' ');
        return {
            position: 'absolute',
            top: direction && direction[0],
            right: direction && direction[1],
            bottom: direction && direction[2],
            left: direction && direction[3],
        };
    },
};
var autoprefix = function (elements) {
    var prefixed = {};
    Object.keys(elements).forEach(function (element) {
        var styles = elements[element];
        var expanded = {};
        Object.keys(styles).forEach(function (key) {
            var value = styles[key];
            var transform = transforms[key];
            if (transform) {
                expanded = __assign(__assign({}, expanded), transform(value));
            }
            else {
                expanded[key] = value;
            }
        });
        prefixed[element] = expanded;
    });
    return prefixed;
};
export default autoprefix;
