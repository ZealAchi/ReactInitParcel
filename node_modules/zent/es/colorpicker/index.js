import { __extends } from "tslib";
import * as React from 'react';
import { PureComponent } from 'react';
import cx from 'classnames';
import ColorBoard from './ColorBoard';
import SketchPresetColors from './SketchPresetColors';
import PopoverClickTrigger from './PopoverClickTrigger';
import Popover from '../popover';
var ColorPicker = (function (_super) {
    __extends(ColorPicker, _super);
    function ColorPicker() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            popVisible: false,
        };
        _this.handleChange = function (color) {
            var _a = _this.props, onChange = _a.onChange, showAlpha = _a.showAlpha;
            var transColor = color;
            if (typeof color === 'object') {
                transColor = showAlpha ? color.rgba : color.hex;
            }
            onChange(transColor);
        };
        _this.handleVisibleChange = function (visible) {
            _this.setState({
                popVisible: visible,
            });
        };
        return _this;
    }
    ColorPicker.prototype.render = function () {
        var _a = this.props, color = _a.color, showAlpha = _a.showAlpha, prefix = _a.prefix, className = _a.className, wrapperClassName = _a.wrapperClassName, type = _a.type, presetColors = _a.presetColors;
        var popVisible = this.state.popVisible;
        var openClassName = popVisible ? 'open' : '';
        var backgroundColor = color;
        return (React.createElement(Popover, { className: cx(prefix + "-color-picker-popover", className), position: Popover.Position.AutoBottomLeft, display: "inline", cushion: 5, visible: popVisible, onVisibleChange: this.handleVisibleChange },
            React.createElement(PopoverClickTrigger, null,
                React.createElement("div", { className: cx(prefix + "-color-picker", wrapperClassName, openClassName), tabIndex: 0, "data-zv": '7.4.3' },
                    React.createElement("div", { className: prefix + "-color-picker__text", "data-zv": '7.4.3' },
                        React.createElement("div", { className: prefix + "-color-picker__preview", style: { backgroundColor: backgroundColor }, "data-zv": '7.4.3' })))),
            React.createElement(Popover.Content, null, type === 'simple' ? (React.createElement(SketchPresetColors, { colors: presetColors, onClick: this.handleChange, prefix: prefix, type: type })) : (React.createElement(ColorBoard, { color: color, showAlpha: showAlpha, onChange: this.handleChange, prefix: prefix, type: type })))));
    };
    ColorPicker.defaultProps = {
        showAlpha: false,
        onChange: function () { },
        className: '',
        wrapperClassName: '',
        prefix: 'zent',
        type: 'default',
        presetColors: [
            '#FFFFFF',
            '#F8F8F8',
            '#F2F2F2',
            '#999999',
            '#444444',
            '#FF4444',
            '#FF6500',
            '#FF884D',
            '#FFCD00',
            '#3FBD00',
            '#3FBC87',
            '#00CD98',
            '#5197FF',
            '#BADCFF',
            '#FFEFB8',
        ],
    };
    ColorPicker.ColorBoard = ColorBoard;
    return ColorPicker;
}(PureComponent));
export { ColorPicker };
export default ColorPicker;
