import * as React from 'react';
import { Component } from 'react';
import { IDisabledContext } from '../disabled';
export interface ISplitButtonProps<Value> {
    type?: 'default' | 'primary' | 'danger' | 'success';
    size?: 'medium' | 'large' | 'small';
    disabled?: boolean;
    loading?: boolean;
    dropdownData: Value[];
    dropdownTrigger?: 'click' | 'hover';
    dropdownText: keyof Value;
    dropdownValue: keyof Value;
    dropdownPosition?: 'left-top' | 'left-center' | 'left-bottom' | 'right-top' | 'right-center' | 'right-bottom' | 'top-left' | 'top-center' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right' | 'auto-bottom-center' | 'auto-bottom-left' | 'auto-bottom-right' | 'auto-top-center' | 'auto-top-left' | 'auto-top-right';
    className?: string;
    prefix?: string;
    onClick?: React.MouseEventHandler<HTMLButtonElement>;
    onSelect?: (key: string) => void;
}
export declare class SplitButton<Value> extends Component<ISplitButtonProps<Value>> {
    static defaultProps: {
        type: string;
        size: string;
        dropdownTrigger: string;
        dropdownData: any[];
        dropdownValue: string;
        dropdownText: string;
        dropdownPosition: string;
        prefix: string;
    };
    static contextType: React.Context<IDisabledContext>;
    context: IDisabledContext;
    state: {
        isShowDropdown: boolean;
    };
    toggleDropdown: (isShow: any) => void;
    handleSelect: (e: any, key: any) => void;
    render(): JSX.Element;
}
export default SplitButton;
