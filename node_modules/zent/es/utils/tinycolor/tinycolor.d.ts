import { IHSL, IHSLA, IHSV, IHSVA, IRGB, IRGBA } from './interfaces';
export interface ITinyColorOptions {
    format: string;
    gradientType: string;
}
export declare type ColorInput = string | IRGB | IRGBA | IHSL | IHSLA | IHSV | IHSVA | TinyColor;
export declare type ColorFormats = 'rgb' | 'prgb' | 'hex' | 'hex3' | 'hex4' | 'hex6' | 'hex8' | 'name' | 'hsl' | 'hsv';
export declare class TinyColor {
    r: number;
    g: number;
    b: number;
    a: number;
    format: ColorFormats;
    originalInput: ColorInput;
    isValid: boolean;
    gradientType?: string;
    roundA: number;
    constructor(color?: ColorInput, opts?: Partial<ITinyColorOptions>);
    toHsv(): {
        h: number;
        s: number;
        v: number;
        a: number;
    };
    toHsl(): {
        h: number;
        s: number;
        l: number;
        a: number;
    };
    toHex(allow3Char?: boolean): string;
    toRgb(): {
        r: number;
        g: number;
        b: number;
        a: number;
    };
    toRgbString(): string;
}
export declare function tinycolor(color?: ColorInput, opts?: Partial<ITinyColorOptions>): TinyColor;
