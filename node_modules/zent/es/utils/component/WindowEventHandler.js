import { useEffect, useRef } from 'react';
export function useWindowEvent(eventName, callback, useCapture) {
    var callbackRef = useRef(callback);
    callbackRef.current = callback;
    useEffect(function () {
        function cb(e) {
            callbackRef.current(e);
        }
        window.addEventListener(eventName, cb, !!useCapture);
        return function () { return window.removeEventListener(eventName, cb, !!useCapture); };
    }, [!!useCapture, eventName]);
}
export function WindowEventHandler(_a) {
    var useCapture = _a.useCapture, eventName = _a.eventName, callback = _a.callback;
    useWindowEvent(eventName, callback, useCapture);
    return null;
}
export default WindowEventHandler;
