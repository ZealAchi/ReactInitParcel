export interface IWindowEventHandlerProps<K extends keyof WindowEventMap> {
    eventName: K;
    callback(ev: WindowEventMap[K]): void;
    useCapture?: boolean;
}
export declare function useWindowEvent<K extends keyof WindowEventMap>(eventName: K, callback: (ev: WindowEventMap[K]) => void, useCapture?: boolean): void;
export declare function WindowEventHandler<K extends keyof WindowEventMap>({ useCapture, eventName, callback, }: IWindowEventHandlerProps<K>): any;
export default WindowEventHandler;
