import * as React from 'react';
import cx from 'classnames';
import { I18nReceiver as Receiver } from '../i18n';
import Dialog from '../dialog';
import Icon from '../icon';
import ActionButton from './ActionButton';
import { TitleIconMap } from './constants';
var openDialog = Dialog.openDialog;
function sweet(config, sweetType) {
    var _a;
    var _b = config.className, className = _b === void 0 ? '' : _b, _c = config.prefix, prefix = _c === void 0 ? 'zent' : _c, _d = config.confirmType, confirmType = _d === void 0 ? 'primary' : _d, _e = config.closeBtn, closeBtn = _e === void 0 ? false : _e, _f = config.maskClosable, maskClosable = _f === void 0 ? false : _f, title = config.title, type = config.type, content = config.content, onConfirm = config.onConfirm, onCancel = config.onCancel, confirmText = config.confirmText, cancelText = config.cancelText, parentComponent = config.parentComponent, onClose = config.onClose;
    var close = null;
    var renderTitle = function (i18n) {
        var icon = TitleIconMap[type];
        return (React.createElement("div", { className: prefix + "-sweetalert-" + (type ? 'icon-' : '') + "title", "data-zv": '7.4.3' },
            type && (React.createElement(Icon, { className: prefix + "-sweetalert-type-icon", type: icon })),
            title || i18n.title));
    };
    var renderButtons = function (i18n) {
        var isAlert = sweetType === 'alert';
        return (React.createElement("div", { className: "sweet-" + sweetType + "-actions", "data-zv": '7.4.3' },
            !isAlert && (React.createElement(ActionButton, { key: "sweetalert-cancel", type: "default", className: prefix + "-sweetalert-" + sweetType + "-btn-cancel", getClose: function () { return close; }, onClick: onCancel, text: cancelText || i18n.cancel })),
            React.createElement(ActionButton, { key: "sweetalert-confirm", type: confirmType, className: prefix + "-sweetalert-" + sweetType + "-btn-confirm", getClose: function () { return close; }, onClick: onConfirm, text: confirmText || (isAlert ? i18n.ok : i18n.confirm) })));
    };
    close = openDialog({
        prefix: prefix,
        closeBtn: closeBtn,
        maskClosable: maskClosable,
        className: cx(prefix + "-sweetalert-" + sweetType, (_a = {},
            _a[className] = !!className,
            _a)),
        title: React.createElement(Receiver, { componentName: "Sweetalert" }, renderTitle),
        children: content,
        footer: React.createElement(Receiver, { componentName: "Sweetalert" }, renderButtons),
        parentComponent: parentComponent,
        onClose: onClose,
    });
    return close;
}
export function alert(config) {
    if (config === void 0) { config = {}; }
    return sweet(config, 'alert');
}
export var info = alert;
export function confirm(config) {
    if (config === void 0) { config = {}; }
    return sweet(config, 'confirm');
}
export var Sweetalert = {
    alert: alert,
    info: info,
    confirm: confirm,
};
export default Sweetalert;
