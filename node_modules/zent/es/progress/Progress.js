import { __assign, __rest } from "tslib";
import * as React from 'react';
import cx from 'classnames';
import { defaultFormat, avaliableStatus } from './constants';
import CircleProgress from './components/CircleProgress';
import LineProgress from './components/LineProgress';
export var Progress = function (props) {
    var type = props.type, status = props.status, percent = props.percent, className = props.className, normalColor = props.normalColor, successColor = props.successColor, exceptionColor = props.exceptionColor, bgColor = props.bgColor, format = props.format, showInfo = props.showInfo, strokeWidth = props.strokeWidth, width = props.width, divAttrs = __rest(props, ["type", "status", "percent", "className", "normalColor", "successColor", "exceptionColor", "bgColor", "format", "showInfo", "strokeWidth", "width"]);
    var state = React.useMemo(function () {
        if (avaliableStatus.indexOf(status) !== -1) {
            return status;
        }
        return percent >= 100 ? 'success' : 'normal';
    }, [status, percent]);
    var currentColor = {
        exception: exceptionColor,
        success: successColor,
        normal: normalColor,
    }[state];
    var ProgressComponent;
    switch (type) {
        case 'circle':
            ProgressComponent = CircleProgress;
            break;
        case 'line':
        default:
            ProgressComponent = LineProgress;
            break;
    }
    var containerCls = cx('zent-progress', "zent-progress-type__" + type, "zent-progress-state__" + state, className);
    return (React.createElement("div", __assign({ className: containerCls }, divAttrs, { "data-zv": '7.4.3' }),
        React.createElement(ProgressComponent, { percent: percent, showInfo: showInfo, strokeWidth: strokeWidth, width: width, bgColor: bgColor, format: format, color: currentColor, state: state })));
};
Progress.defaultProps = {
    type: 'line',
    percent: 0,
    showInfo: true,
    strokeWidth: 10,
    format: defaultFormat,
};
export default Progress;
