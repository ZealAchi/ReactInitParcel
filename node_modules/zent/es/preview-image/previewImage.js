import { __assign, __rest } from "tslib";
import * as React from 'react';
import * as ReactDOM from 'react-dom';
import createElement from '../utils/dom/createElement';
import Image from './Image';
export function previewImage(options) {
    if (options === void 0) { options = {}; }
    var parentComponent = options.parentComponent, rest = __rest(options, ["parentComponent"]);
    var container = createElement('div');
    var closePreviewMask = function () {
        if (!container) {
            return;
        }
        ReactDOM.unmountComponentAtNode(container);
        container = null;
    };
    var props = __assign(__assign({}, rest), { onClose: closePreviewMask });
    var render = parentComponent
        ? ReactDOM.unstable_renderSubtreeIntoContainer.bind(ReactDOM, parentComponent)
        : ReactDOM.render;
    render(React.createElement(Image, __assign({}, props)), container);
}
export default previewImage;
