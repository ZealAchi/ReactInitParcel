import { __assign, __extends } from "tslib";
import * as React from 'react';
import { PureComponent } from 'react';
import Td from './Td';
var Body = (function (_super) {
    __extends(Body, _super);
    function Body(props) {
        var _this = _super.call(this, props) || this;
        var datasets = props.datasets, isExpanded = props.isExpanded;
        var expandItems = datasets.reduce(function (items, rowData, rowIndex) {
            if (typeof isExpanded === 'function') {
                items[rowIndex] = isExpanded(rowData, rowIndex);
            }
            else {
                items[rowIndex] = false;
            }
            return items;
        }, {});
        _this.state = {
            expandItems: expandItems,
        };
        return _this;
    }
    Body.prototype.handleExpand = function (rowIndex) {
        var _this = this;
        return function () {
            var expandItems = __assign({}, _this.state.expandItems);
            expandItems[rowIndex] = !(expandItems[rowIndex] || 0);
            _this.setState({
                expandItems: expandItems,
            });
        };
    };
    Body.prototype.isExpanded = function (rowData, rowIndex) {
        return this.state.expandItems[rowIndex] || 0;
    };
    Body.prototype.onRowClick = function (key) {
        var _a;
        var selection = this.props.selection;
        if (selection.canRowSelect) {
            selection.onSelect(key, (_a = selection.selectedRowKeys, (_a !== null && _a !== void 0 ? _a : [])).indexOf(key) === -1);
        }
    };
    Body.prototype.render = function () {
        var _this = this;
        var _a = this.props, datasets = _a.datasets, columns = _a.columns, emptyLabel = _a.emptyLabel, rowKey = _a.rowKey, selection = _a.selection, getRowConf = _a.getRowConf, expandRender = _a.expandRender, needExpand = _a.needExpand;
        var trs = [];
        var dataIterator = function (rowData, rowIndex) {
            var _a = getRowConf(rowData, rowIndex), _b = _a.canSelect, canSelect = _b === void 0 ? true : _b, _c = _a.rowClass, rowClass = _c === void 0 ? '' : _c;
            var key = rowData[rowKey] || rowIndex;
            var tds = [];
            if (needExpand) {
                tds.push(React.createElement("div", { key: "-1", className: "td expanded-item", "data-zv": '7.4.3' },
                    React.createElement("span", { className: _this.isExpanded(rowData, rowIndex)
                            ? 'expandable-btn collapse-btn'
                            : 'expandable-btn expand-btn', onClick: _this.handleExpand(rowIndex), "data-zv": '7.4.3' })));
            }
            columns.forEach(function (item, columnIndex) {
                var pos = {
                    row: rowIndex,
                    column: columnIndex,
                };
                var needSelect = false;
                if (selection.needSelect && columnIndex === 0) {
                    needSelect = true;
                }
                tds.push(React.createElement(Td, { column: item, key: columnIndex, data: rowData, pos: pos, rowKey: rowKey, selection: {
                        needSelect: needSelect,
                        isSingleSelection: selection.isSingleSelection,
                        canSelect: canSelect,
                        selectedRowKeys: selection.selectedRowKeys,
                        indeterminateRowKeys: selection.indeterminateRowKeys,
                        onSelect: selection.onSelect,
                    } }));
            });
            trs.push(React.createElement("div", { className: rowClass + " tr", key: key, onClick: function () { return _this.onRowClick(key); }, "data-zv": '7.4.3' }, tds));
        };
        var expandedInterator = function (rowData, rowIndex) {
            var key = rowData[rowKey] || rowIndex;
            trs.push(React.createElement("div", { className: "tr tr--expanded", key: key + "-expand", style: {
                    display: _this.isExpanded(rowData, rowIndex) ? 'flex' : 'none',
                }, onClick: function () { return _this.onRowClick(key); }, "data-zv": '7.4.3' },
                React.createElement("div", { className: "td expanded-item", "data-zv": '7.4.3' }),
                React.createElement("div", { className: "td", "data-zv": '7.4.3' }, expandRender(rowData))));
        };
        if (needExpand) {
            datasets.forEach(function (rowData, rowIndex) {
                dataIterator(rowData, rowIndex);
                expandedInterator(rowData, rowIndex);
            });
        }
        else {
            datasets.forEach(function (rowData, rowIndex) {
                dataIterator(rowData, rowIndex);
            });
        }
        return (React.createElement("div", { className: "tbody", "data-zv": '7.4.3' }, datasets.length !== 0 ? (trs) : (React.createElement("div", { className: "tr", "data-zv": '7.4.3' },
            React.createElement("div", { className: "cell empty-data", "data-zv": '7.4.3' }, emptyLabel)))));
    };
    return Body;
}(PureComponent));
export default Body;
