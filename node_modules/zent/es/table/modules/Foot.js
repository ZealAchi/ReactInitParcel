import { __assign, __extends, __rest } from "tslib";
import * as React from 'react';
import { PureComponent } from 'react';
import * as ReactDOM from 'react-dom';
import isNil from '../../utils/isNil';
import helper from '../helper';
import Pagination from '../../pagination';
import Checkbox from '../../checkbox';
import LitePagination from '../../pagination/LitePagination';
import MiniPagination from '../../pagination/MiniPagination';
var Foot = (function (_super) {
    __extends(Foot, _super);
    function Foot() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.batch = null;
        _this.onSelect = function (e) {
            var isChecked = false;
            if (e.target.checked) {
                isChecked = true;
            }
            _this.props.selection.onSelectAll(isChecked);
        };
        return _this;
    }
    Foot.prototype.renderBatchComps = function (selectedRows, batchComponents) {
        return batchComponents.map(function (comp, index) {
            var subComponent;
            if (helper.isReactComponent(comp)) {
                var Comp = comp;
                subComponent = React.createElement(Comp, { data: selectedRows });
            }
            else if (typeof comp === 'function') {
                subComponent = comp(selectedRows, index);
            }
            else {
                subComponent = comp;
            }
            return (React.createElement("div", { className: "subcomponent-wrapper", key: index, "data-zv": '7.4.3' }, subComponent));
        });
    };
    Foot.prototype.componentWillReceiveProps = function (nextProps) {
        if (nextProps.batchComponentsFixed) {
            this.footStyleFixed = {
                height: ReactDOM.findDOMNode(this.batch).getBoundingClientRect().height,
            };
        }
        else {
            this.footStyleFixed = {};
        }
    };
    Foot.prototype.render = function () {
        var _this = this;
        var _a = this.props, onPageChange = _a.onPageChange, paginationType = _a.paginationType, batchComponents = _a.batchComponents, selection = _a.selection, current = _a.current;
        var pageInfo = this.props.pageInfo || {};
        var totalItem = pageInfo.totalItem, pageSize = pageInfo.pageSize, total = pageInfo.total, limit = pageInfo.limit, _ = pageInfo.current, restPageInfo = __rest(pageInfo, ["totalItem", "pageSize", "total", "limit", "current"]);
        var needSelect = selection.needSelect, selectedRows = selection.selectedRows;
        var batchClassName = 'tfoot__batchcomponents';
        var shouldRenderFoot = (batchComponents && batchComponents.length > 0) ||
            Object.keys(pageInfo).length !== 0;
        if (batchComponents && batchComponents.length > 0) {
            batchClassName += ' tfoot__batchcomponents--has-children';
        }
        if (this.props.batchComponentsFixed) {
            batchClassName += ' tfoot__batchcomponents--fixed';
        }
        var PaginationComp;
        switch (paginationType) {
            case 'mini':
                PaginationComp = MiniPagination;
                break;
            case 'lite':
                PaginationComp = LitePagination;
                break;
            case 'default':
                PaginationComp = Pagination;
                break;
            default:
                PaginationComp = Pagination;
                break;
        }
        return (shouldRenderFoot && (React.createElement("div", { className: "tfoot clearfix", style: this.footStyleFixed, "data-zv": '7.4.3' },
            React.createElement("div", { className: batchClassName, ref: function (c) { return (_this.batch = c); }, "data-zv": '7.4.3' },
                needSelect && batchComponents && batchComponents.length > 0 && (React.createElement(Checkbox, { className: "select-check", onChange: this.onSelect, checked: selection.isSelectAll, indeterminate: selection.isSelectPart })),
                batchComponents &&
                    batchComponents.length > 0 &&
                    this.renderBatchComps(selectedRows, batchComponents)),
            React.createElement("div", { className: "tfoot__page", "data-zv": '7.4.3' }, Object.keys(pageInfo).length > 0 && (React.createElement(PaginationComp, __assign({ current: current, total: isNil(total) ? totalItem : total, pageSize: isNil(pageSize) ? limit : pageSize, onChange: onPageChange }, restPageInfo)))))));
    };
    return Foot;
}(PureComponent));
export default Foot;
