import { __assign, __extends, __rest } from "tslib";
import * as React from 'react';
import { Component } from 'react';
import cx from 'classnames';
import ConfigContext from './ConfigContext';
import LayoutBreakpointContext from './BreakPointContext';
import { getValueForBreakpoint } from './screen-breakpoints';
var LayoutRow = (function (_super) {
    __extends(LayoutRow, _super);
    function LayoutRow() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LayoutRow.prototype.render = function () {
        var _this = this;
        var _a = this.props, className = _a.className, style = _a.style, justify = _a.justify, align = _a.align, others = __rest(_a, ["className", "style", "justify", "align"]);
        var classes = cx({
            'zent-row': true,
        }, "zent-row-justify-" + justify, "zent-row-align-" + align, className);
        return (React.createElement(LayoutBreakpointContext.Consumer, null, function (breakpoints) { return (React.createElement(ConfigContext.Consumer, null, function (config) {
            var colGutter = getValueForBreakpoint(breakpoints, config.colGutter);
            var rowGutter = getValueForBreakpoint(breakpoints, config.rowGutter);
            var rowStyles = style;
            if (colGutter > 0) {
                var width = -(colGutter / 2);
                rowStyles = __assign(__assign({}, rowStyles), { marginLeft: width, marginRight: width });
            }
            if (rowGutter && rowGutter > 0) {
                var height = rowGutter / 2;
                rowStyles = __assign(__assign({}, rowStyles), { paddingTop: height, paddingBottom: height });
            }
            return (React.createElement("div", __assign({}, others, { className: classes, style: rowStyles, "data-zv": '7.4.3' }), _this.props.children));
        })); }));
    };
    LayoutRow.defaultProps = {
        justify: 'start',
        align: 'start',
    };
    return LayoutRow;
}(Component));
export { LayoutRow };
export default LayoutRow;
