import { __assign, __extends, __rest } from "tslib";
import * as React from 'react';
import { Component } from 'react';
import cx from 'classnames';
import isEqual from '../utils/isEqual';
import DateRangePicker from '../datetimepicker/DateRangePicker';
import { I18nReceiver as Receiver } from '../i18n';
import * as Helper from './helper';
var DateRangeQuickPicker = (function (_super) {
    __extends(DateRangeQuickPicker, _super);
    function DateRangeQuickPicker() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleTimeChange = function (value) {
            var onChange = _this.props.onChange;
            onChange(value, 0);
        };
        _this.handleChooseDays = function (num) {
            var _a = _this.props, format = _a.format, onChange = _a.onChange, valueType = _a.valueType;
            var value = Helper.calculateTime(format, num, valueType);
            onChange(value, num);
        };
        return _this;
    }
    DateRangeQuickPicker.prototype.render = function () {
        var _this = this;
        var _a = this.props, className = _a.className, format = _a.format, value = _a.value, chooseDays = _a.chooseDays, prefix = _a.prefix, preset = _a.preset, pickerProps = __rest(_a, ["className", "format", "value", "chooseDays", "prefix", "preset"]);
        var showTime = format === 'YYYY-MM-DD';
        return (React.createElement("div", { className: cx(prefix + "-date-range-picker", className), "data-zv": '7.4.3' },
            React.createElement(DateRangePicker, __assign({ value: value, onChange: this.handleTimeChange, format: format, showTime: !showTime }, pickerProps)),
            React.createElement("div", { className: prefix + "-date-range-picker__filter", "data-zv": '7.4.3' }, preset.map(function (item, index) { return (React.createElement(Receiver, { key: index, componentName: "RangePicker" }, function (i18n) { return (React.createElement("span", { key: index, className: cx(prefix + "-date-range-picker__btn", {
                    active: isEqual(chooseDays, item.value),
                }), onClick: _this.handleChooseDays.bind(_this, item.value), "data-zv": '7.4.3' }, item.text ||
                (typeof item.value === 'number' ? i18n[item.value] : ''))); })); }))));
    };
    DateRangeQuickPicker.defaultProps = {
        prefix: 'zent',
        className: '',
        value: [],
        valueType: 'string',
        format: 'YYYY-MM-DD',
        preset: [
            {
                value: 7,
            },
            {
                value: 30,
            },
        ],
        min: '',
        max: '',
    };
    return DateRangeQuickPicker;
}(Component));
export { DateRangeQuickPicker };
export default DateRangeQuickPicker;
