'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * EmptyData Component for uxcore
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author eternalsky
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2015-2016, Uxcore Team, Alinw.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var EmptyData = function (_React$Component) {
  _inherits(EmptyData, _React$Component);

  function EmptyData(props) {
    _classCallCheck(this, EmptyData);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.state = {};
    return _this;
  }
  // http://facebook.github.io/react/docs/reusable-components.html


  EmptyData.prototype.render = function render() {
    var _classnames;

    var me = this;
    var _me$props = me.props,
        prefixCls = _me$props.prefixCls,
        children = _me$props.children,
        type = _me$props.type,
        icon = _me$props.icon,
        largeIcon = _me$props.largeIcon,
        style = _me$props.style,
        className = _me$props.className;

    var iconMap = {
      normal: icon,
      large: largeIcon
    };
    return _react2["default"].createElement(
      'div',
      {
        className: (0, _classnames3["default"])((_classnames = {}, _defineProperty(_classnames, prefixCls + ' ' + type, true), _defineProperty(_classnames, className, !!className), _classnames)),
        style: style
      },
      _react2["default"].createElement('div', {
        className: prefixCls + '-icon',
        style: {
          backgroundImage: 'url(' + iconMap[type] + ')'
        }
      }),
      _react2["default"].createElement(
        'div',
        { className: prefixCls + '-content' },
        children
      )
    );
  };

  return EmptyData;
}(_react2["default"].Component);

EmptyData.propTypes = {
  prefixCls: _propTypes2["default"].string,
  icon: _propTypes2["default"].string,
  largeIcon: _propTypes2["default"].string,
  style: _propTypes2["default"].object,
  type: _propTypes2["default"].oneOf(['normal', 'large'])
};
EmptyData.defaultProps = {
  prefixCls: 'kuma-empty-data',
  children: '暂无数据',
  type: 'normal',
  icon: '//g.alicdn.com/uxcore/pic/empty.png',
  largeIcon: '//g.alicdn.com/uxcore/pic/empty.png'
};
EmptyData.displayName = 'EmptyData';
exports["default"] = EmptyData;
module.exports = exports['default'];