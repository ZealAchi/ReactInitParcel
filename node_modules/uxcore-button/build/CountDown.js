'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var CountDown = function (_Component) {
  _inherits(CountDown, _Component);

  function CountDown(props) {
    _classCallCheck(this, CountDown);

    var _this = _possibleConstructorReturn(this, _Component.call(this, props));

    var time = props.time;

    _this.state = {
      time: time
    };
    _this.countFun = _this.countFun.bind(_this);
    return _this;
  }

  CountDown.prototype.componentDidMount = function componentDidMount() {
    var time = this.state.time;

    if (time > 0) {
      this.countFun();
    }
  };

  CountDown.prototype.componentWillUnmount = function componentWillUnmount() {
    clearInterval(this.timer);
  };

  CountDown.prototype.countFun = function countFun() {
    var _this2 = this;

    var time = this.state.time;

    this.timer = setInterval(function () {
      if (time > 0) {
        time -= 1;
        _this2.setState({
          time: time
        });
      } else {
        var callback = _this2.props.callback;

        callback();
        clearInterval(_this2.timer);
      }
    }, 1000);
  };

  CountDown.prototype.render = function render() {
    var time = this.state.time;
    var className = this.props.className;

    return React.createElement(
      'span',
      { className: (0, _classnames3["default"])(_defineProperty({}, className, className))
      },
      time > 0 ? '(' + time + ')' : ''
    );
  };

  return CountDown;
}(_react.Component);

CountDown.defaultProps = {
  time: 5000,
  callback: function callback() {
    return undefined;
  },
  className: ''
};

CountDown.propTypes = {
  time: _propTypes2["default"].number,
  callback: _propTypes2["default"].func,
  className: _propTypes2["default"].string
};

exports["default"] = CountDown;
module.exports = exports['default'];