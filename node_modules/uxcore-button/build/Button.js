'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Loading = require('./Loading');

var _Loading2 = _interopRequireDefault(_Loading);

var _CountDown = require('./CountDown');

var _CountDown2 = _interopRequireDefault(_CountDown);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var Component = _react2["default"].Component;


var sizeMap = {
  small: 'sm',
  medium: '',
  middle: '',
  large: 'lg'
};

var Button = function (_Component) {
  _inherits(Button, _Component);

  function Button() {
    var _temp, _this, _ret;

    _classCallCheck(this, Button);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleClick = function (e) {
      var _this$props = _this.props,
          loading = _this$props.loading,
          onClick = _this$props.onClick;

      if (loading) {
        return;
      }
      if (onClick) {
        onClick(e);
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  Button.prototype.render = function render() {
    var _classnames;

    var type = this.props.type;

    var _props = this.props,
        disabled = _props.disabled,
        className = _props.className,
        size = _props.size,
        children = _props.children,
        htmlType = _props.htmlType,
        prefixCls = _props.prefixCls,
        loading = _props.loading,
        ghost = _props.ghost,
        danger = _props.danger,
        countDown = _props.countDown,
        onCountDownEnd = _props.onCountDownEnd,
        others = _objectWithoutProperties(_props, ['disabled', 'className', 'size', 'children', 'htmlType', 'prefixCls', 'loading', 'ghost', 'danger', 'countDown', 'onCountDownEnd']);

    type = disabled ? 'disabled' : type;
    var classNames = (0, _classnames3["default"])(prefixCls, prefixCls + '-' + type, (_classnames = {}, _defineProperty(_classnames, className, className), _defineProperty(_classnames, prefixCls + '-' + sizeMap[size], !!sizeMap[size]), _defineProperty(_classnames, prefixCls + '-loading', loading), _defineProperty(_classnames, prefixCls + '-white', type === 'disabled' && this.props.type === 'white'), _defineProperty(_classnames, prefixCls + '-ghost', ghost), _defineProperty(_classnames, prefixCls + '-danger', danger), _defineProperty(_classnames, prefixCls + '-has-icon', loading), _classnames));
    return _react2["default"].createElement(
      'button',
      _extends({}, others, {
        type: htmlType,
        className: classNames,
        disabled: disabled,
        onClick: this.handleClick
      }),
      loading ? _react2["default"].createElement(_Loading2["default"], { className: prefixCls + '-loading-icon' }) : null,
      children,
      countDown ? _react2["default"].createElement(_CountDown2["default"], { className: prefixCls + '-countdown', time: countDown, callback: onCountDownEnd }) : null
    );
  };

  return Button;
}(Component);

Button.displayName = 'uxcore-button';
Button.propTypes = {
  prefixCls: _propTypes2["default"].string,
  disabled: _propTypes2["default"].bool,
  size: _propTypes2["default"].oneOf(['small', 'medium', 'middle', 'large']),
  style: _propTypes2["default"].object,
  type: _propTypes2["default"].oneOf(['primary', 'secondary', 'outline', 'white']),
  className: _propTypes2["default"].string,
  children: _propTypes2["default"].node,
  htmlType: _propTypes2["default"].oneOf(['submit', 'button', 'reset']),
  loading: _propTypes2["default"].bool,
  ghost: _propTypes2["default"].bool,
  danger: _propTypes2["default"].bool,
  onCountDownEnd: _propTypes2["default"].func,
  countDown: _propTypes2["default"].number
};
Button.defaultProps = {
  prefixCls: 'kuma-button',
  size: 'middle',
  type: 'primary',
  disabled: false,
  className: '',
  children: 'Button',
  htmlType: 'button',
  loading: false,
  ghost: false,
  danger: false,
  onCountDownEnd: function onCountDownEnd() {},
  countDown: undefined
};

module.exports = Button;