'use strict';

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _cloneDeep = require('lodash/cloneDeep');

var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = require('react-lifecycles-compat');

var _isEqual = require('lodash/isEqual');

var _isEqual2 = _interopRequireDefault(_isEqual);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var preventDefaultClick = function preventDefaultClick(e) {
  e.preventDefault();
};

var changeChosenData = function changeChosenData(arr1, arr2, isAsc) {
  var newArr1 = arr1.filter(function (item) {
    return !item.selected;
  });
  var newArr2 = arr1.filter(function (item) {
    return item.selected;
  }).map(function (item) {
    var newItem = (0, _cloneDeep2["default"])(item);
    newItem.chosen = !newItem.chosen;
    newItem.selected = false;
    newItem.justMoved = true;
    return newItem;
  });
  newArr2 = isAsc ? arr2.concat(newArr2) : newArr2.concat(arr2);
  return {
    arr1: newArr1,
    arr2: newArr2
  };
};

var Transfer = function (_React$Component) {
  _inherits(Transfer, _React$Component);

  function Transfer(props) {
    _classCallCheck(this, Transfer);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.state = {
      chosen: props.data.filter(function (item) {
        return !!item.chosen;
      }),
      unChosen: props.data.filter(function (item) {
        return !item.chosen;
      }),
      lastData: props.data
    };
    _this.refCbs = [];
    _this.saveRef = _this.saveRef.bind(_this);
    _this.handleItemClick = _this.handleItemClick.bind(_this);
    _this.renderItem = _this.renderItem.bind(_this);
    _this.handleCheckLeftAll = _this.handleCheckLeftAll.bind(_this);
    _this.handleCheckRightAll = _this.handleCheckRightAll.bind(_this);
    _this.handleButtonClick = _this.handleButtonClick.bind(_this);
    return _this;
  }

  Transfer.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    if (!(0, _isEqual2["default"])(nextProps.data, prevState.lastData)) {
      return {
        chosen: nextProps.data.filter(function (item) {
          return !!item.chosen;
        }),
        unChosen: nextProps.data.filter(function (item) {
          return !item.chosen;
        }),
        lastData: nextProps.data
      };
    }
    return null;
  };

  Transfer.prototype.saveRef = function saveRef(name) {
    var _this2 = this;

    if (!this.refCbs[name]) {
      this.refCbs[name] = function (c) {
        _this2[name] = c;
      };
    }
    return this.refCbs[name];
  };

  Transfer.prototype.selectItems = function selectItems(arr) {
    var me = this;
    var data = (0, _cloneDeep2["default"])(this.state);
    for (var i = 0; i < data.chosen.length; i++) {
      var item = data.chosen[i];
      if (arr.indexOf(item.value) !== -1) {
        item.selected = true;
      }
    }
    for (var _i = 0; _i < data.unChosen.length; _i++) {
      var _item = data.unChosen[_i];
      if (arr.indexOf(_item.value) !== -1) {
        _item.selected = true;
      }
    }
    me.setState(data);
  };

  /**
   * 重置，取消所有的用户操作
   */


  Transfer.prototype.reset = function reset() {
    var me = this;
    me.setState({
      chosen: me.props.data.filter(function (item) {
        return !!item.chosen;
      }),
      unChosen: me.props.data.filter(function (item) {
        return !item.chosen;
      })
    });
  };

  Transfer.prototype.locateItem = function locateItem(value, position) {
    var me = this;
    if (value === '') {
      return;
    }
    var data = (0, _cloneDeep2["default"])(me.state[position]);
    var leftBlockEl = me.leftBlock;
    var rightBlockEl = me.rightBlock;
    var index = -1;
    for (var i = 0; i < data.length; i++) {
      data[i].justMoved = false;
    }
    for (var _i2 = 0; _i2 < data.length; _i2++) {
      if (data[_i2].name.indexOf(value) !== -1) {
        index = _i2;
        break;
      }
      if (data[_i2].keywords instanceof Array) {
        var keywords = data[_i2].keywords;
        for (var j = 0; j < keywords.length; j++) {
          if (keywords[j].indexOf(value) !== -1) {
            index = _i2;
            break;
          }
        }
        if (index !== -1) break;
      }
    }

    if (index === -1) {
      return;
    }
    data[index].justMoved = true;
    if (position === 'unChosen') {
      leftBlockEl.scrollTop = 32 * index;
    } else {
      rightBlockEl.scrollTop = 32 * index;
    }
    var obj = {};
    obj[position] = data;
    this.setState(obj);
  };

  Transfer.prototype.handleSearchIconClick = function handleSearchIconClick(position) {
    var leftSearch = this.leftSearch,
        rightSearch = this.rightSearch;

    var _ref = position === 'unChosen' ? leftSearch : rightSearch,
        value = _ref.value;

    this.locateItem(value, position);
  };

  Transfer.prototype.handleSearch = function handleSearch(position, e) {
    if (e.keyCode === 13) {
      this.handleSearchIconClick(position);
    }
  };

  Transfer.prototype.handleItemClick = function handleItemClick(e) {
    var me = this;
    if (me.props.disabled) return;
    var target = e.currentTarget;
    var key = target.getAttribute('data-key');
    var isChosen = JSON.parse(target.getAttribute('data-chosen'));
    var newData = (0, _cloneDeep2["default"])(me.state[isChosen ? 'chosen' : 'unChosen']);
    if (newData[key].disabled) {
      return;
    }
    me.removeJustMoved(function () {
      newData[key].selected = !newData[key].selected;
      var newState = {};
      newState[isChosen ? 'chosen' : 'unChosen'] = newData;
      me.setState(newState);
    });
  };

  Transfer.prototype.removeJustMoved = function removeJustMoved(cb) {
    var me = this;
    var data = (0, _cloneDeep2["default"])(this.state);
    for (var i = 0; i < data.chosen.length; i++) {
      var item = data.chosen[i];
      item.justMoved = false;
    }
    for (var _i3 = 0; _i3 < data.unChosen.length; _i3++) {
      var _item2 = data.unChosen[_i3];
      _item2.justMoved = false;
    }
    me.setState(data, function () {
      if (cb) {
        cb();
      }
    });
  };

  Transfer.prototype.handleButtonClick = function handleButtonClick(e) {
    e.preventDefault();
    var me = this;
    if (me.props.disabled) return;
    var target = e.currentTarget;
    var direction = target.getAttribute('data-direction');
    if (target.className.indexOf('enable') === -1) return;
    var oldChosen = (0, _cloneDeep2["default"])(me.state.chosen);
    var oldUnChosen = (0, _cloneDeep2["default"])(me.state.unChosen);
    var newChosen = [];
    var newUnChosen = [];
    var newData = {};
    if (direction === 'left') {
      newData = changeChosenData(oldChosen, oldUnChosen, me.props.isAsc);
      newChosen = newData.arr1;
      newUnChosen = newData.arr2;
    } else {
      newData = changeChosenData(oldUnChosen, oldChosen, me.props.isAsc);
      newUnChosen = newData.arr1;
      newChosen = newData.arr2;
    }

    me.setState({
      chosen: newChosen,
      unChosen: newUnChosen
    }, function () {
      me.props.onChange(me.state);
    });
  };

  Transfer.prototype.handleCheckLeftAll = function handleCheckLeftAll(e) {
    e.preventDefault();
    var unChosen = (0, _cloneDeep2["default"])(this.state.unChosen);
    for (var i = 0; i < unChosen.length; i++) {
      var item = unChosen[i];
      if (!item.disabled) {
        item.selected = true;
      }
    }
    this.setState({
      unChosen: unChosen
    });
  };

  Transfer.prototype.handleCheckRightAll = function handleCheckRightAll(e) {
    e.preventDefault();
    var chosen = (0, _cloneDeep2["default"])(this.state.chosen);
    for (var i = 0; i < chosen.length; i++) {
      var item = chosen[i];
      if (!item.disabled) {
        item.selected = true;
      }
    }
    this.setState({
      chosen: chosen
    });
  };

  Transfer.prototype.renderItem = function renderItem(item, index) {
    var me = this;
    window.me = me;
    return _react2["default"].createElement(
      'li',
      {
        key: index,
        'data-key': index,
        'data-value': item.value,
        'data-chosen': item.chosen,
        onClick: me.handleItemClick
      },
      _react2["default"].createElement(
        'a',
        {
          className: (0, _classnames2["default"])({
            selected: !!item.selected,
            justMoved: !!item.justMoved,
            disabled: !!item.disabled
          }),
          title: item.description || item.name,
          onClick: preventDefaultClick
        },
        item.name
      )
    );
  };

  Transfer.prototype.renderUnchosen = function renderUnchosen() {
    var me = this;
    var arr = me.state.unChosen.filter(function (item) {
      return !item.chosen;
    }).map(me.renderItem);
    return arr;
  };

  Transfer.prototype.renderChosen = function renderChosen() {
    var me = this;
    var arr = me.state.chosen.filter(function (item) {
      return item.chosen;
    }).map(me.renderItem);
    return arr;
  };

  Transfer.prototype.renderSearch = function renderSearch(position) {
    var me = this;
    if (!me.props.showSearch) return null;
    var map = {
      unChosen: 'leftSearch',
      chosen: 'rightSearch'
    };
    return _react2["default"].createElement(
      'div',
      { className: 'searchBar' },
      _react2["default"].createElement('input', {
        type: 'text',
        ref: this.saveRef(map[position]),
        className: 'kuma-input',
        placeholder: me.props.searchPlaceholder,
        onKeyDown: me.handleSearch.bind(me, position)
      }),
      _react2["default"].createElement('i', {
        className: 'uxcore-icon uxicon-sousuo',
        onClick: me.handleSearchIconClick.bind(me, position)
      })
    );
  };

  Transfer.prototype.render = function render() {
    var me = this;
    var _props = this.props,
        height = _props.height,
        showSearch = _props.showSearch,
        leftTitle = _props.leftTitle,
        disabled = _props.disabled,
        rightTitle = _props.rightTitle,
        checkAllText = _props.checkAllText,
        prefixCls = _props.prefixCls;

    var style = void 0;
    if (height) {
      style = {
        height: height - 41 - (showSearch ? 34 : 0) + 'px'
      };
    }
    return _react2["default"].createElement(
      'div',
      {
        className: (0, _classnames2["default"])(prefixCls, {
          disabled: disabled
        })
      },
      _react2["default"].createElement(
        'table',
        { className: prefixCls + '-container' },
        _react2["default"].createElement(
          'thead',
          { className: prefixCls + '-head' },
          _react2["default"].createElement(
            'tr',
            null,
            _react2["default"].createElement(
              'th',
              { className: 'fn-clear left-head' },
              _react2["default"].createElement(
                'span',
                { className: 'title' },
                leftTitle
              ),
              _react2["default"].createElement(
                'a',
                {
                  className: 'check-all',
                  title: checkAllText,
                  onClick: this.handleCheckLeftAll
                },
                checkAllText
              )
            ),
            _react2["default"].createElement('th', null),
            _react2["default"].createElement(
              'th',
              { className: 'fn-clear right-head' },
              _react2["default"].createElement(
                'span',
                { className: 'title' },
                rightTitle
              ),
              _react2["default"].createElement(
                'a',
                {
                  className: 'check-all',
                  title: checkAllText,
                  onClick: this.handleCheckRightAll
                },
                checkAllText
              )
            )
          )
        ),
        _react2["default"].createElement(
          'tbody',
          null,
          _react2["default"].createElement(
            'tr',
            null,
            _react2["default"].createElement(
              'td',
              { className: 'left-block' },
              me.renderSearch('unChosen'),
              _react2["default"].createElement(
                'ul',
                {
                  ref: this.saveRef('leftBlock'),
                  className: prefixCls + '-block',
                  style: style
                },
                me.renderUnchosen()
              )
            ),
            _react2["default"].createElement(
              'td',
              { className: prefixCls + '-buttons' },
              _react2["default"].createElement('a', {
                'data-direction': 'left',
                className: (0, _classnames2["default"])({
                  enable: me.state.chosen.some(function (item) {
                    return !!item.selected;
                  }) && !disabled
                }),
                onClick: me.handleButtonClick
              }),
              _react2["default"].createElement('br', null),
              _react2["default"].createElement('a', {
                'data-direction': 'right',
                className: (0, _classnames2["default"])({
                  enable: me.state.unChosen.some(function (item) {
                    return !!item.selected;
                  }) && !disabled
                }),
                onClick: me.handleButtonClick
              })
            ),
            _react2["default"].createElement(
              'td',
              { className: 'right-block' },
              me.renderSearch('chosen'),
              _react2["default"].createElement(
                'ul',
                {
                  ref: this.saveRef('rightBlock'),
                  className: prefixCls + '-block',
                  style: style
                },
                me.renderChosen()
              )
            )
          )
        )
      )
    );
  };

  return Transfer;
}(_react2["default"].Component);

Transfer.displayName = 'Transfer';
Transfer.defaultProps = {
  height: 280,
  searchPlaceholder: '请输入搜索内容',
  data: [],
  leftTitle: '未选中',
  rightTitle: '已选中',
  checkAllText: '全选',
  disabled: false,
  showSearch: true,
  onChange: function onChange() {},

  prefixCls: 'kuma-uxtransfer',
  isAsc: false
};
Transfer.propTypes = {
  height: _propTypes2["default"].number,
  searchPlaceholder: _propTypes2["default"].string,
  data: _propTypes2["default"].array,
  disabled: _propTypes2["default"].bool,
  showSearch: _propTypes2["default"].bool,
  leftTitle: _propTypes2["default"].string,
  rightTitle: _propTypes2["default"].string,
  checkAllText: _propTypes2["default"].string,
  onChange: _propTypes2["default"].func,
  prefixCls: _propTypes2["default"].string,
  isAsc: _propTypes2["default"].bool
};

(0, _reactLifecyclesCompat.polyfill)(Transfer);

module.exports = Transfer;