'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uxcoreTooltip = require('uxcore-tooltip');

var _uxcoreTooltip2 = _interopRequireDefault(_uxcoreTooltip);

var _uxcoreButton = require('uxcore-button');

var _uxcoreButton2 = _interopRequireDefault(_uxcoreButton);

var _uxcoreIcon = require('uxcore-icon');

var _uxcoreIcon2 = _interopRequireDefault(_uxcoreIcon);

var _uxcoreCheckboxGroup = require('uxcore-checkbox-group');

var _uxcoreCheckboxGroup2 = _interopRequireDefault(_uxcoreCheckboxGroup);

var _scrollToTop = require('./scrollToTop');

var _scrollToTop2 = _interopRequireDefault(_scrollToTop);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); } /*
uthor: tongbin.xtb
ate: 2018-01-03 17:34:28
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @Last Modified by: tongbin.xtb
ast Modified time: 2018-02-24 19:32:32
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

var texts = {
  'zh-cn': {
    done: '我知道了',
    "final": '立即体验',
    next: '下一步',
    prev: '上一步',
    skip: '跳过',
    learnMore: '了解更多',
    noRemind: '不再提醒'
  },
  'en-us': {
    done: 'Got it',
    next: 'next',
    "final": 'Getting started',
    skip: 'Skip',
    learnMore: 'Learn more',
    noRemind: 'Do not remind'
  }
};

var getCenter = function getCenter(s) {
  var center = {};
  if (s.type === 'HTMLElement' || s.type === 'HTMLElementMaker' || s.type === 'ReactComponent') {
    var dom = s.dom;

    if (s.type === 'HTMLElementMaker') {
      if (typeof s.getDom === 'function') {
        dom = s.getDom();
      }
    }
    if (!(dom instanceof HTMLElement)) {
      return {
        x: 0, y: 0, w: 0, h: 0
      };
    }

    var _dom$getBoundingClien = dom.getBoundingClientRect(),
        top = _dom$getBoundingClien.top,
        left = _dom$getBoundingClien.left,
        w = _dom$getBoundingClien.width,
        h = _dom$getBoundingClien.height;

    center = {
      x: left + w / 2,
      y: top + h / 2,
      w: w,
      h: h
    };
    center.y += window.scrollY;
  }
  return center;
};

var UserGuideStage = function (_React$Component) {
  _inherits(UserGuideStage, _React$Component);

  function UserGuideStage(props) {
    _classCallCheck(this, UserGuideStage);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.state = {
      currentStep: 0,
      skipChecked: props.skipChecked || false
    };
    return _this;
  }

  UserGuideStage.prototype.componentDidMount = function componentDidMount() {
    this.nextStep(-1);
  };

  UserGuideStage.prototype.nextStep = function nextStep(index) {
    var _this2 = this;

    var _props = this.props,
        designMode = _props.designMode,
        steps = _props.steps;

    if (designMode) {
      return;
    }
    var center = { x: 0, y: 0 };
    if (steps[index + 1]) {
      center = getCenter(steps[index + 1]);
    }
    var to = void 0;
    var height = center.h;
    if (center.x - 319 - center.w / 2 < 0) {
      height += 200;
    }
    var _window = window,
        innerHeight = _window.innerHeight;

    if (innerHeight > height) {
      to = center.y - center.h / 2 - (innerHeight - height) / 2;
    } else {
      to = center.y - center.h / 2 + height - innerHeight;
    }
    if (to < 0) {
      to = 0;
    }
    (0, _scrollToTop2["default"])(to);
    this.setState({
      currentStep: index + 1
    }, function () {
      var _props2 = _this2.props,
          propSteps = _props2.steps,
          done = _props2.done;
      var currentStep = _this2.state.currentStep;

      if (currentStep >= propSteps.length) {
        done();
      }
    });
  };

  UserGuideStage.prototype.handleNoMindChange = function handleNoMindChange() {
    var _this3 = this;

    var skipChecked = this.state.skipChecked;

    this.setState({
      skipChecked: !skipChecked
    }, function () {
      var _props3 = _this3.props,
          onAssistClick = _props3.onAssistClick,
          steps = _props3.steps;
      var currentStep = _this3.state.currentStep;

      onAssistClick(steps[currentStep]);
    });
  };

  UserGuideStage.prototype.renderSkipText = function renderSkipText() {
    var _this4 = this;

    var _props4 = this.props,
        assistType = _props4.assistType,
        locale = _props4.locale,
        prefixCls = _props4.prefixCls,
        onAssistClick = _props4.onAssistClick,
        steps = _props4.steps;
    var _state = this.state,
        currentStep = _state.currentStep,
        skipChecked = _state.skipChecked;

    switch (assistType) {
      case 'SKIP':
        return _react2["default"].createElement(
          'span',
          {
            role: 'button',
            tabIndex: -1,
            className: prefixCls + '-skip-text',
            onClick: function onClick() {
              return _this4.nextStep(steps.length - 1);
            },
            onKeyDown: function onKeyDown() {}
          },
          texts[locale].skip
        );
      case 'LEARN_MORE':
        return _react2["default"].createElement(
          'span',
          {
            role: 'button',
            tabIndex: -1,
            className: prefixCls + '-skip-text',
            onClick: function onClick() {
              return onAssistClick(steps[currentStep]);
            },
            onKeyDown: function onKeyDown() {}
          },
          texts[locale].learnMore
        );
      case 'NO_REMIND':
        return _react2["default"].createElement(
          _uxcoreCheckboxGroup2["default"],
          {
            value: [skipChecked ? '1' : '0'],
            onChange: this.handleNoMindChange.bind(this),
            className: prefixCls + '-skip-checkbox'
          },
          _react2["default"].createElement(_uxcoreCheckboxGroup2["default"].Item, { text: texts[locale].noRemind, value: '1' })
        );
      default:
        return undefined;
    }
  };

  UserGuideStage.prototype.renderIcon = function renderIcon(step) {
    var prefixCls = this.props.prefixCls;

    if (!step.icon) {
      return false;
    }
    if (typeof step.icon === 'string') {
      return _react2["default"].createElement(_uxcoreIcon2["default"], {
        usei: true,
        name: step.icon,
        className: prefixCls + '-step-hint-icon'
      });
    }
    return step.icon;
  };

  UserGuideStage.prototype.render = function render() {
    var _this5 = this;

    var finalText = this.props.finalText;
    var _props5 = this.props,
        steps = _props5.steps,
        locale = _props5.locale,
        prefixCls = _props5.prefixCls,
        designMode = _props5.designMode;
    var currentStep = this.state.currentStep;

    var last = steps.length - 1;
    var multiple = steps.length > 1;
    finalText = finalText || (multiple ? texts[locale]["final"] : texts[locale].done);
    return _react2["default"].createElement(
      'div',
      { className: prefixCls + '-holder' },
      steps.map(function (s, index) {
        var center = getCenter(s);
        var visible = currentStep === index || designMode;
        var hint = _react2["default"].createElement(
          'div',
          {
            className: prefixCls + '-step-hint'
          },
          _react2["default"].createElement(
            'div',
            { className: prefixCls + '-step-hint-wrp' },
            _this5.renderIcon(s),
            _react2["default"].createElement(
              'div',
              null,
              s.title && _react2["default"].createElement(
                'div',
                { className: prefixCls + '-step-hint-title' },
                s.title
              ),
              (!s.contentType || s.contentType === 'TEXT') && _react2["default"].createElement(
                'div',
                { className: prefixCls + '-step-hint-desc' },
                s.content
              ),
              s.contentType === 'IMAGE' && _react2["default"].createElement(
                'div',
                { className: prefixCls + '-step-hint-desc' },
                _react2["default"].createElement('img', { role: 'presentation', src: s.content, alt: '' })
              ),
              s.contentType === 'VIDEO' && _react2["default"].createElement(
                'div',
                { className: prefixCls + '-step-hint-desc' },
                _react2["default"].createElement(
                  'video',
                  {
                    controls: 'true',
                    src: s.content,
                    poster: s.poster,
                    preload: 'auto'
                  },
                  _react2["default"].createElement('track', { kind: 'captions' })
                )
              )
            )
          ),
          _react2["default"].createElement(
            'div',
            { className: prefixCls + '-hint-bottom' },
            _this5.renderSkipText(),
            _react2["default"].createElement(
              _uxcoreButton2["default"],
              {
                type: 'primary',
                size: 'small',
                onClick: function onClick() {
                  _this5.nextStep(index);
                }
              },
              index === last ? finalText : texts[locale].next
            ),
            index > 0 && _react2["default"].createElement(
              _uxcoreButton2["default"],
              {
                type: 'secondary',
                size: 'small',
                onClick: function onClick() {
                  _this5.nextStep(index - 2);
                }
              },
              texts[locale].prev
            )
          )
        );
        return _react2["default"].createElement(
          _uxcoreTooltip2["default"],
          {
            overlay: hint,
            placement: 'bottomRight',
            trigger: ['click'],
            visible: visible,
            overlayClassName: prefixCls + '-stage-step-hint',
            key: s.step
          },
          _react2["default"].createElement(
            'div',
            {
              key: s.step,
              className: prefixCls + '-breathing-point' + (visible ? '' : ' ' + prefixCls + '-hidden'),
              style: {
                top: center.y + center.h / 2 - 20 || 0,
                left: center.x + center.w / 2 - 20 || 0
              }
            },
            _react2["default"].createElement('div', { className: prefixCls + '-big' }),
            _react2["default"].createElement('div', { className: prefixCls + '-small' })
          )
        );
      })
    );
  };

  return UserGuideStage;
}(_react2["default"].Component);

UserGuideStage.defaultProps = {
  steps: [],
  done: function done() {},
  locale: 'zh-cn',
  designMode: false,
  prefixCls: 'kuma-user-guide',
  assistType: undefined,
  onAssistClick: function onAssistClick() {},
  skipChecked: false,
  finalText: undefined
};

UserGuideStage.propTypes = {
  steps: _propTypes2["default"].array,
  done: _propTypes2["default"].func,
  locale: _propTypes2["default"].string,
  finalText: _propTypes2["default"].string,
  designMode: _propTypes2["default"].bool,
  prefixCls: _propTypes2["default"].string,
  assistType: _propTypes2["default"].string,
  onAssistClick: _propTypes2["default"].func,
  skipChecked: _propTypes2["default"].bool
};

UserGuideStage.displayName = 'UserGuideStage';

module.exports = UserGuideStage;