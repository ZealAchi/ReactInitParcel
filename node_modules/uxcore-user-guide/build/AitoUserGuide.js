'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * AitoUserGuide Component for uxcore
 * @author buzhou
 *
 * Copyright 2015-2016, Uxcore Team, Alinw.
 * All rights reserved.
 */
var React = require('react');
var ReactDOM = require('react-dom');
var AitoUserGuideStage = require('./AitoUserGuideStage');
var scrollToTop = require('./scrollToTop');

var guideMap = {};

// HOC, 不是一个react component

var AitoUserGuide = function () {
  function AitoUserGuide(key, config) {
    _classCallCheck(this, AitoUserGuide);

    this.key = key;
    this.locale = config && config.locale || 'zh-cn';
    this.useImg = config && config.useImage || false;
  }

  AitoUserGuide.prototype.addUserGuide = function addUserGuide(guideProps) {
    var _this = this;

    var _guideProps$step = guideProps.step,
        step = _guideProps$step === undefined ? 0 : _guideProps$step;

    if (!this.steps) {
      this.steps = [];
    }
    this.steps[step] = guideProps || {};
    // if (WrappedComponent instanceof HTMLElement) {
    //   this.steps[step].dom = WrappedComponent;
    //   return WrappedComponent;
    // }
    if (guideProps.type === 'ReactComponent') {
      return function (props) {
        return React.createElement(guideProps.dom, _extends({}, props, {
          ref: function ref(comp) {
            _this.steps[step].dom = comp;
          }
        }));
      };
    }
    return false;
  };

  AitoUserGuide.prototype.start = function start() {
    var _this2 = this;

    // key must specified
    var steps = (this.steps || []).filter(function (i) {
      return i;
    });
    var dom = document.createElement('div');
    var height = Math.max(window.innerHeight, window.document.body.clientHeight);
    dom.className = 'aito-user-guide-stage';
    dom.style.height = height + 60 + 'px';
    document.body.appendChild(dom);
    var overflow = document.body.style.overflowY;
    document.body.style.overflowY = 'hidden';
    scrollToTop(0);
    ReactDOM.render(React.createElement(AitoUserGuideStage, {
      steps: steps,
      locale: this.locale,
      done: function done() {
        document.body.removeChild(dom);
        document.body.style.overflowY = overflow;
        _this2.drop();
        if (typeof _this2.onComplete === 'function') {
          _this2.onComplete();
        }
      }
    }), dom);
  };

  AitoUserGuide.prototype.drop = function drop() {
    delete guideMap[this.key];
  };

  return AitoUserGuide;
}();

exports["default"] = AitoUserGuide;


AitoUserGuide.getWithKey = function getWithKey(key, config) {
  if (guideMap[key]) {
    return guideMap[key];
  }
  guideMap[key] = new AitoUserGuide(key, config);
  return guideMap[key];
};

module.exports = AitoUserGuide;
module.exports = exports['default'];