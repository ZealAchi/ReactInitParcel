'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _CrumbItem = require('./CrumbItem');

var _CrumbItem2 = _interopRequireDefault(_CrumbItem);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Crumb Component for uxcore
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author peijie.dpj
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2014-2017, Uxcore Team, Alinw.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

var Crumb = function (_React$Component) {
  _inherits(Crumb, _React$Component);

  function Crumb() {
    _classCallCheck(this, Crumb);

    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }

  Crumb.prototype.render = function render() {
    var _classnames;

    var me = this;

    return _react2["default"].createElement(
      'div',
      {
        className: (0, _classnames3["default"])((_classnames = {}, _defineProperty(_classnames, me.props.prefixCls, true), _defineProperty(_classnames, me.props.className, !!me.props.className), _classnames))
      },
      me.props.children
    );
  };

  return Crumb;
}(_react2["default"].Component);

Crumb.defaultProps = {
  prefixCls: 'kuma-uxcrumbs',
  className: ''
};

// http://facebook.github.io/react/docs/reusable-components.html
Crumb.propTypes = {
  /**
   * @title 类名前缀
   * @veIgnore
   */
  prefixCls: _propTypes2["default"].string,
  /**
   * @title CSS类名
   * @veIgnore
   */
  className: _propTypes2["default"].string
};

Crumb.Item = _CrumbItem2["default"];

Crumb.displayName = 'Crumb';

exports["default"] = Crumb;
module.exports = exports['default'];