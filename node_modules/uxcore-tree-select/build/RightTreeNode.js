'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _i18n = require('./i18n');

var _i18n2 = _interopRequireDefault(_i18n);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * RightTreeNode Component for Tree
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author chenqiu  wb-cq231719@alibaba-inc.com
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

var RightTreeNode = function (_React$Component) {
  _inherits(RightTreeNode, _React$Component);

  function RightTreeNode(props) {
    _classCallCheck(this, RightTreeNode);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.removeSelected = function () {
      var _this$props = _this.props,
          removeSelected = _this$props.removeSelected,
          value = _this$props.value,
          position = _this$props.position;

      removeSelected(value, { position: position });
    };

    _this.expand = function () {
      _this.setState({
        expand: !_this.state.expand
      });
    };

    _this.state = {
      expand: !(props.isAll || _this.isSelectNode() && props.children)
    };
    return _this;
  }

  RightTreeNode.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    if (this.props.isAll !== nextProps.isAll) {
      this.setState({
        expand: !nextProps.isAll
      });
    }
  };

  RightTreeNode.prototype.getMaxWidth = function getMaxWidth(isSelectNode, paddingLeftStyle) {
    var _props = this.props,
        locale = _props.locale,
        children = _props.children,
        isAll = _props.isAll,
        dropdownWidth = _props.dropdownWidth,
        disabled = _props.disabled;
    // padding:32, delete:26, isALL: 38, arrow: 18

    var padWidth = 20;
    if (isAll || isSelectNode && children) {
      padWidth += locale === 'en-us' ? 25 : 36;
    }
    if (isSelectNode && !disabled) {
      padWidth += locale === 'en-us' ? 38 : 26;
    }
    if (children) {
      padWidth += 18;
    }

    return dropdownWidth - padWidth - paddingLeftStyle;
  };

  RightTreeNode.prototype.isSelectNode = function isSelectNode() {
    var _props2 = this.props,
        pos = _props2.pos,
        keys = _props2.keys;


    return keys.indexOf(pos) > -1;
  };

  RightTreeNode.prototype.render = function render() {
    var _arrowCls;

    var _props3 = this.props,
        treeNodeLabelProp = _props3.treeNodeLabelProp,
        children = _props3.children,
        isAll = _props3.isAll,
        prefixCls = _props3.prefixCls,
        level = _props3.level,
        locale = _props3.locale,
        disabled = _props3.disabled,
        treeCheckStrictly = _props3.treeCheckStrictly;
    var expand = this.state.expand;
    // padding 无箭头 +36  有箭头+18

    var paddingLeft = 0;
    if (level > 1) {
      paddingLeft = !children ? 16 + (level - 1) * 18 : 16 + (level - 2) * 18;
    } else if (treeCheckStrictly || level === 1 && !children) {
      // fix style for the first level label which has no Children
      paddingLeft = 5;
    }
    var arrowCls = (_arrowCls = {}, _defineProperty(_arrowCls, prefixCls + '-arrow-close', !expand), _defineProperty(_arrowCls, prefixCls + '-arrow-open', expand), _defineProperty(_arrowCls, prefixCls + '-arrow-switch', true), _arrowCls);
    var isSelectNode = this.isSelectNode();

    var maxWidth = this.getMaxWidth(isSelectNode, paddingLeft);

    var content = _react2["default"].createElement(
      'span',
      {
        style: { maxWidth: maxWidth + 'px' },
        className: prefixCls + '-label',
        title: this.props[treeNodeLabelProp]
      },
      this.props[treeNodeLabelProp]
    );

    if (treeCheckStrictly) {
      paddingLeft = 15;
    }

    return _react2["default"].createElement(
      'div',
      null,
      _react2["default"].createElement(
        'div',
        { className: prefixCls + '-hoverNode', style: { paddingLeft: paddingLeft + 'px' } },
        !treeCheckStrictly && children ? _react2["default"].createElement('span', { onClick: this.expand, className: (0, _classnames2["default"])(arrowCls) }) : null,
        content,
        isAll || !treeCheckStrictly && isSelectNode && children ? _react2["default"].createElement(
          'span',
          { className: prefixCls + '-allSelect' },
          _i18n2["default"][locale].all
        ) : null,
        isSelectNode && !disabled ? _react2["default"].createElement(
          'span',
          { className: prefixCls + '-clear', onClick: this.removeSelected },
          _i18n2["default"][locale]["delete"]
        ) : null
      ),
      expand && children ? children : null
    );
  };

  return RightTreeNode;
}(_react2["default"].Component);

exports["default"] = RightTreeNode;


RightTreeNode.defaultProps = {
  locale: 'zh-cn',
  keys: []
};

RightTreeNode.propTypes = {
  position: _propTypes2["default"].string,
  value: _propTypes2["default"].oneOfType([_propTypes2["default"].array, _propTypes2["default"].string, _propTypes2["default"].object]),
  treeNodeLabelProp: _propTypes2["default"].any,
  children: _propTypes2["default"].any,
  treeCheckStrictly: _propTypes2["default"].bool,
  isAll: _propTypes2["default"].bool,
  prefixCls: _propTypes2["default"].string,
  level: _propTypes2["default"].number,
  removeSelected: _propTypes2["default"].func,
  pos: _propTypes2["default"].string,
  locale: _propTypes2["default"].oneOf(['zh-cn', 'en-us']),
  dropdownWidth: _propTypes2["default"].number,
  keys: _propTypes2["default"].array,
  disabled: _propTypes2["default"].bool
};
module.exports = exports['default'];