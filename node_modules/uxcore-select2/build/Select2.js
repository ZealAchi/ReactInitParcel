'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _rcSelect = require('rc-select');

var _rcSelect2 = _interopRequireDefault(_rcSelect);

var _classnames3 = require('classnames');

var _classnames4 = _interopRequireDefault(_classnames3);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var Select2 = function (_React$Component) {
  _inherits(Select2, _React$Component);

  function Select2() {
    _classCallCheck(this, Select2);

    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }

  Select2.prototype.componentDidMount = function componentDidMount() {
    var _props = this.props,
        labelInValue = _props.labelInValue,
        value = _props.value,
        prefixCls = _props.prefixCls;

    if (labelInValue && value && value.label && value.title) {
      var $select = _reactDom2["default"].findDOMNode(this.rcSelect);
      var $value = $select.querySelector('.' + prefixCls + '-selection-selected-value');
      if ($value) {
        $value.title = value.title;
      }
    }
  };

  Select2.prototype.render = function render() {
    var _this2 = this;

    var me = this;
    var className = (0, _classnames4["default"])(me.props.className, _defineProperty({}, me.props.prefixCls + '-' + me.props.size, !!me.props.size));
    var dropdownClassName = (0, _classnames4["default"])(me.props.dropdownClassName, _defineProperty({}, me.props.prefixCls + '-dropdown-' + me.props.size, !!me.props.size));

    return _react2["default"].createElement(_rcSelect2["default"], _extends({}, this.props, {
      ref: function ref(c) {
        _this2.rcSelect = c;
        _this2.props.rcRef(c);
      },
      className: className,
      dropdownClassName: dropdownClassName,
      onSearch: function onSearch(key) {
        _this2.forceUpdate();_this2.props.onSearch(key);
      }
    }));
  };

  return Select2;
}(_react2["default"].Component);

Select2.displayName = 'Select2';
Select2.RcSelect = _rcSelect2["default"];
Select2.propTypes = {
  size: _propTypes2["default"].oneOf(['large', 'middle', 'small']),
  rcRef: _propTypes2["default"].func,
  onSearch: _propTypes2["default"].func
};
Select2.defaultProps = {
  size: 'large',
  prefixCls: 'kuma-select2',
  optionLabelProp: 'children',
  transitionName: 'selectSlideUp',
  rcRef: function rcRef() {},
  onSearch: function onSearch() {}
};

Select2.Option = _rcSelect2["default"].Option;
Select2.OptGroup = _rcSelect2["default"].OptGroup;

exports["default"] = Select2;
module.exports = exports['default'];