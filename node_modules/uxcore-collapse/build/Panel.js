'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _uxcoreAnimate = require('uxcore-animate');

var _uxcoreAnimate2 = _interopRequireDefault(_uxcoreAnimate);

var _util = require('./util');

var _util2 = _interopRequireDefault(_util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var CollapsePanel = function (_Component) {
  _inherits(CollapsePanel, _Component);

  function CollapsePanel(props) {
    _classCallCheck(this, CollapsePanel);

    var _this = _possibleConstructorReturn(this, _Component.call(this, props));

    _this.handleItemClick = _this.handleItemClick.bind(_this);
    _this.renderPanel = _this.renderPanel.bind(_this);

    _this.state = {
      isActive: props.isActive
    };
    return _this;
  }

  CollapsePanel.prototype.handleItemClick = function handleItemClick(e) {
    this.props.onItemClick(this.props.isActive, e);
  };

  CollapsePanel.prototype.renderPanel = function renderPanel() {
    var _props = this.props,
        prefixCls = _props.prefixCls,
        children = _props.children,
        isActive = _props.isActive;


    var contentCls = (0, _classnames3["default"])(_defineProperty({}, prefixCls + '-content', true));

    if (isActive) {
      return _react2["default"].createElement(
        'div',
        {
          className: contentCls,
          'data-active': isActive,
          role: 'tabpanel'
        },
        _react2["default"].createElement(
          'div',
          { className: prefixCls + '-content-box' },
          children
        )
      );
    }
    return null;
  };

  CollapsePanel.prototype.render = function render() {
    var _props2 = this.props,
        prefixCls = _props2.prefixCls,
        header = _props2.header,
        isActive = _props2.isActive;


    var headerCls = prefixCls + '-header fn-text-overflow';

    var arrowCls = isActive ? 'arrow-active' : 'arrow';

    return _react2["default"].createElement(
      'div',
      { className: prefixCls + '-item' },
      _react2["default"].createElement(
        'div',
        {
          className: headerCls,
          onClick: this.handleItemClick,
          role: 'tab',
          'aria-expanded': isActive
        },
        _react2["default"].createElement('i', { className: arrowCls }),
        header
      ),
      _react2["default"].createElement(
        _uxcoreAnimate2["default"],
        {
          component: '',
          animation: {
            enter: function enter(node, done) {
              _util2["default"].toggleHeightAnim(node, true, done);
            },
            leave: function leave(node, done) {
              _util2["default"].toggleHeightAnim(node, false, done);
            }
          }
        },
        this.renderPanel()
      )
    );
  };

  return CollapsePanel;
}(_react.Component);

CollapsePanel.displayName = 'CollapsePanel';
CollapsePanel.propTypes = {
  prefixCls: _propTypes2["default"].string,
  header: _propTypes2["default"].oneOfType([_propTypes2["default"].string, _propTypes2["default"].number, _propTypes2["default"].node]),
  isActive: _propTypes2["default"].bool,
  onItemClick: _propTypes2["default"].func,
  children: _propTypes2["default"].any
};
CollapsePanel.defaultProps = {
  isActive: false,
  onItemClick: _util2["default"].noop
};
exports["default"] = CollapsePanel;
module.exports = exports['default'];