'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var propTypes = {
  prefixCls: _propTypes2["default"].string,
  step: _propTypes2["default"].number,
  current: _propTypes2["default"].object
};

var defaultProps = {
  prefixCls: '',
  step: 60,
  current: {}
};

var LeftTimeLine = function (_Component) {
  _inherits(LeftTimeLine, _Component);

  function LeftTimeLine() {
    _classCallCheck(this, LeftTimeLine);

    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }

  LeftTimeLine.prototype.render = function render() {
    var _props = this.props,
        prefixCls = _props.prefixCls,
        step = _props.step,
        current = _props.current;

    var hour = (0, _moment2["default"])(current).hour();
    var minute = (0, _moment2["default"])(current).minute() || 0;
    hour = hour > 9 ? hour : '0' + hour;
    minute = minute > 9 ? minute : '0' + minute;
    var prefixTime = hour > 12 ? 'pm' : 'am';

    var selected = hour === (0, _moment2["default"])().hour();
    selected = selected && (0, _moment2["default"])().minute() >= parseInt(minute, 10);
    selected = selected && (0, _moment2["default"])().minute() < step + parseInt(minute, 10);

    return _react2["default"].createElement(
      'td',
      { className: prefixCls + '-time-panel', key: current },
      _react2["default"].createElement(
        'div',
        {
          className: (0, _classnames3["default"])(_defineProperty({}, prefixCls + '-timeline-now', selected)),
          key: current
        },
        _react2["default"].createElement(
          'div',
          { className: 'cell-number' },
          hour + ':' + minute + ' ' + prefixTime
        )
      )
    );
  };

  return LeftTimeLine;
}(_react.Component);

LeftTimeLine.propTypes = propTypes;
LeftTimeLine.defaultProps = defaultProps;
exports["default"] = LeftTimeLine;
module.exports = exports['default'];