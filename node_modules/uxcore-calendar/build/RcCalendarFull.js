'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _CalendarMixin = require('rc-calendar/lib/mixin/CalendarMixin');

var _CalendarMixin2 = _interopRequireDefault(_CalendarMixin);

var _CommonMixin = require('rc-calendar/lib/mixin/CommonMixin');

var _CommonMixin2 = _interopRequireDefault(_CommonMixin);

var _CalendarFullHeader = require('./CalendarFullHeader');

var _CalendarFullHeader2 = _interopRequireDefault(_CalendarFullHeader);

var _DateTable = require('./date/DateTable');

var _DateTable2 = _interopRequireDefault(_DateTable);

var _WeekTable = require('./fullWeek/WeekTable');

var _WeekTable2 = _interopRequireDefault(_WeekTable);

var _TimeTable = require('./fullTime/TimeTable');

var _TimeTable2 = _interopRequireDefault(_TimeTable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var FullCalendar = (0, _createReactClass2["default"])({
  displayName: 'FullCalendar',

  propTypes: {
    defaultType: _propTypes2["default"].string,
    type: _propTypes2["default"].string,
    prefixCls: _propTypes2["default"].string,
    locale: _propTypes2["default"].object,
    setType: _propTypes2["default"].func,
    fullscreen: _propTypes2["default"].bool,
    selectedValue: _propTypes2["default"].any,
    onSelect: _propTypes2["default"].func,
    dateRender: _propTypes2["default"].func,
    weekRender: _propTypes2["default"].func,
    showTypeSwitch: _propTypes2["default"].bool,
    // headerComponents: PropTypes.array,
    headerComponent: _propTypes2["default"].object, // The whole header component
    headerRender: _propTypes2["default"].func,
    showHeader: _propTypes2["default"].bool,
    disabledDate: _propTypes2["default"].func,
    showCount: _propTypes2["default"].number
  },
  mixins: [_CommonMixin2["default"], _CalendarMixin2["default"]],
  getDefaultProps: function getDefaultProps() {
    return {
      defaultType: 'month',
      fullscreen: false,
      showTypeSwitch: true,
      showHeader: true,
      showCount: 1,
      setType: function setType() {}
    };
  },
  onHeaderSelect: function onHeaderSelect(value, formatValue, momentValue) {
    var resultVal = momentValue || value;
    var originLocale = this.props.originLocale;

    this.setValue((0, _moment2["default"])(resultVal).locale(originLocale));
  },
  setType: function setType(type) {
    var setType = this.props.setType;

    setType(type);
  },
  getDateTableElement: function getDateTableElement() {
    var _props = this.props,
        locale = _props.locale,
        prefixCls = _props.prefixCls,
        disabledDate = _props.disabledDate,
        onSelect = _props.onSelect,
        others = _objectWithoutProperties(_props, ['locale', 'prefixCls', 'disabledDate', 'onSelect']);

    var _state = this.state,
        value = _state.value,
        selectedValue = _state.selectedValue;

    return _react2["default"].createElement(_DateTable2["default"], _extends({
      locale: locale,
      prefixCls: prefixCls,
      value: value,
      onSelect: this.handleSelect,
      selectedValue: selectedValue,
      disabledDate: disabledDate,
      seeEventsDetail: this.seeEventsDetail
    }, others));
  },
  getWeekTableElement: function getWeekTableElement() {
    var _props2 = this.props,
        locale = _props2.locale,
        prefixCls = _props2.prefixCls,
        disabledDate = _props2.disabledDate,
        others = _objectWithoutProperties(_props2, ['locale', 'prefixCls', 'disabledDate']);

    var value = this.state.value;


    return _react2["default"].createElement(_WeekTable2["default"], _extends({
      locale: locale,
      onSelect: this.onSelect,
      prefixCls: prefixCls + '-week-panel',
      value: value,
      disabledDate: disabledDate
    }, others));
  },
  getTimeTableElement: function getTimeTableElement() {
    var _props3 = this.props,
        locale = _props3.locale,
        prefixCls = _props3.prefixCls,
        showCount = _props3.showCount,
        others = _objectWithoutProperties(_props3, ['locale', 'prefixCls', 'showCount']);

    var value = this.state.value;


    return _react2["default"].createElement(_TimeTable2["default"], _extends({
      locale: locale,
      onSelect: this.onSelect,
      prefixCls: prefixCls + '-time-panel',
      value: value,
      showCount: showCount
    }, others));
  },
  getPanel: function getPanel() {
    var type = this.props.type;

    switch (type) {
      case 'month':
        return this.getDateTableElement();
      case 'week':
        return this.getWeekTableElement();
      case 'time':
        return this.getTimeTableElement();
      default:
        return '';
    }
  },
  handleSelect: function handleSelect(value) {
    this.onSelect(value);
  },
  seeEventsDetail: function seeEventsDetail(type, value) {
    var originLocale = this.props.originLocale;

    this.setValue((0, _moment2["default"])(value).locale(originLocale));
    this.setType(type);
  },
  initHeader: function initHeader() {
    var _props4 = this.props,
        prefixCls = _props4.prefixCls,
        showHeader = _props4.showHeader,
        headerComponent = _props4.headerComponent,
        headerRender = _props4.headerRender,
        type = _props4.type;
    var value = this.state.value;

    var header = null;
    if (showHeader) {
      if (headerRender) {
        header = headerRender((0, _moment2["default"])(value).toDate(), type);
      } else {
        var TheHeader = headerComponent || _CalendarFullHeader2["default"];
        header = _react2["default"].createElement(TheHeader, _extends({
          key: 'calendar-header',
          prefixCls: '' + prefixCls,
          type: type,
          value: value,
          typeChange: this.setType,
          onValueChange: this.onHeaderSelect
        }, this.props));
      }
    }
    return header;
  },
  render: function render() {
    var _props5 = this.props,
        prefixCls = _props5.prefixCls,
        fullscreen = _props5.fullscreen;

    var header = this.initHeader();
    var children = [header, _react2["default"].createElement(
      'div',
      { key: 'calendar-body', className: prefixCls + '-calendar-body' },
      this.getPanel()
    )];

    var className = [prefixCls + '-full'];

    if (fullscreen) {
      className.push(prefixCls + '-fullscreen');
    }

    return this.renderRoot({
      children: children,
      className: className.join(' ')
    });
  }
});

exports["default"] = FullCalendar;
module.exports = exports['default'];