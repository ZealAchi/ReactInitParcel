'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _util = require('rc-calendar/lib/util/');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var DATE_COL_COUNT = 8;

var DateTHead = function (_React$Component) {
  _inherits(DateTHead, _React$Component);

  function DateTHead() {
    _classCallCheck(this, DateTHead);

    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }

  DateTHead.prototype.getRenderData = function getRenderData() {
    var value = this.props.value;

    var now = (0, _moment2["default"])();
    var current = value || now;
    var cloneValue = current.clone();
    var localeData = current.localeData();
    var currentDay = (0, _moment2["default"])(value).format('E');
    var weekDays = [];

    for (var i = 0; i < DATE_COL_COUNT; i++) {
      if (i === 0) {
        weekDays[i] = { label: '', value: '' };
      } else {
        var diff = currentDay - i;
        if (diff < 0) {
          current = (0, _moment2["default"])(cloneValue).add(Math.abs(diff), 'd');
        } else {
          current = (0, _moment2["default"])(cloneValue).subtract(diff, 'd');
        }
        weekDays[i] = {};
        weekDays[i].label = localeData.weekdaysShort(current);
        weekDays[i].value = current;
      }
    }
    return weekDays;
  };

  DateTHead.prototype.render = function render() {
    var prefixCls = this.props.prefixCls;

    var now = (0, _moment2["default"])();
    var weekDays = this.getRenderData();
    var weekDaysEls = weekDays.map(function (day) {
      var _classnames;

      var cls = (0, _classnames3["default"])((_classnames = {}, _defineProperty(_classnames, prefixCls + '-column-header', true), _defineProperty(_classnames, prefixCls + '-today', day.value && (0, _moment2["default"])(day.value).isSame(now, 'day')), _classnames));
      return _react2["default"].createElement(
        'th',
        { key: day.value, role: 'columnheader', title: day, className: cls },
        _react2["default"].createElement(
          'span',
          { className: (0, _classnames3["default"])(prefixCls + '-column-header-inner') },
          _react2["default"].createElement(
            'span',
            { className: 'header-date' },
            day.value && day.value.date()
          ),
          day.label
        )
      );
    });
    return _react2["default"].createElement(
      'thead',
      null,
      _react2["default"].createElement(
        'tr',
        { role: 'row' },
        weekDaysEls
      )
    );
  };

  return DateTHead;
}(_react2["default"].Component);

exports["default"] = DateTHead;
module.exports = exports['default'];