'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _TimeTHead = require('./TimeTHead');

var _TimeTHead2 = _interopRequireDefault(_TimeTHead);

var _TimeTBody = require('./TimeTBody');

var _TimeTBody2 = _interopRequireDefault(_TimeTBody);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var TimeTable = function (_React$Component) {
  _inherits(TimeTable, _React$Component);

  function TimeTable(props) {
    _classCallCheck(this, TimeTable);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.state = {
      slicePiece: 0
    };
    _this.getSlicePiece = _this.getSlicePiece.bind(_this);
    return _this;
  }

  TimeTable.prototype.componentDidMount = function componentDidMount() {
    this.getSlicePiece();
  };

  TimeTable.prototype.getSlicePiece = function getSlicePiece() {
    var _props = this.props,
        startHour = _props.startHour,
        step = _props.step,
        endHour = _props.endHour;


    startHour = typeof startHour !== 'undefined' ? parseInt(startHour, 10) : 9;
    endHour = typeof endHour !== 'undefined' ? parseInt(endHour, 10) : 23;
    step = step ? parseInt(step, 10) : 60;
    if (endHour < startHour) {
      endHour = startHour;
    }

    var slicePiece = Math.ceil((endHour - startHour) * 60 / step);
    this.setState({ slicePiece: slicePiece });
  };

  TimeTable.prototype.renderEvents = function renderEvents() {
    var _props2 = this.props,
        scheduleRender = _props2.scheduleRender,
        startHour = _props2.startHour,
        step = _props2.step,
        endHour = _props2.endHour,
        value = _props2.value,
        type = _props2.type;
    var slicePiece = this.state.slicePiece;

    var renderOpts = _extends({
      startHour: startHour,
      step: step,
      endHour: endHour,
      type: type,
      slicePiece: slicePiece,
      current: value
    }, this.props);
    if (scheduleRender) {
      return scheduleRender(renderOpts);
    }
    return null;
  };

  TimeTable.prototype.render = function render() {
    var slicePiece = this.state.slicePiece;
    var _props3 = this.props,
        showCount = _props3.showCount,
        prefixCls = _props3.prefixCls,
        cellMaxheight = _props3.cellMaxheight,
        cellMinheight = _props3.cellMinheight;

    var timeCls = prefixCls + '-time';
    var tableCls = prefixCls + '-table';
    var realSlices = slicePiece + 2;
    var maxCellHeight = cellMaxheight * realSlices + 32;
    var minCellHeight = cellMinheight * realSlices + 32;
    var tableStyle = { minHeight: minCellHeight, maxHeight: maxCellHeight };
    return _react2["default"].createElement(
      'div',
      { className: timeCls },
      _react2["default"].createElement(
        'table',
        { className: tableCls, cellSpacing: '0', role: 'grid', style: tableStyle },
        _react2["default"].createElement(_TimeTHead2["default"], _extends({}, this.props, { dataCount: showCount })),
        _react2["default"].createElement(_TimeTBody2["default"], _extends({}, this.props, { slicePiece: slicePiece, dataCount: showCount }))
      ),
      this.renderEvents()
    );
  };

  return TimeTable;
}(_react2["default"].Component);

TimeTable.displayName = 'TimeTable';
TimeTable.defaultProps = {
  showCount: 1,
  startHour: 9,
  endHour: 23,
  step: 60,
  cellMaxheight: 68,
  cellMinheight: 32
};
TimeTable.propTypes = {
  prefixCls: _propTypes2["default"].string,
  showCount: _propTypes2["default"].number,
  timeRender: _propTypes2["default"].func,
  startHour: _propTypes2["default"].number,
  endHour: _propTypes2["default"].number,
  step: _propTypes2["default"].number,
  cellMaxheight: _propTypes2["default"].number,
  cellMinheight: _propTypes2["default"].number
};
exports["default"] = TimeTable;
module.exports = exports['default'];