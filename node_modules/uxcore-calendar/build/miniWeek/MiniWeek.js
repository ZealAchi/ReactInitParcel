'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _objectAssign = require('object-assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

var _uxcoreIcon = require('uxcore-icon');

var _uxcoreIcon2 = _interopRequireDefault(_uxcoreIcon);

var _calendarFullUtil = require('../calendarFullUtil');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 提供基础的mini周日历
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 提供当天事件业务自己渲染
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 提供基本信息
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var DATE_COL_COUNT = 7;
var proptypes = {
  prefixCls: _propTypes2["default"].string,
  getPopupContainer: _propTypes2["default"].func,
  value: _propTypes2["default"].oneOfType([_propTypes2["default"].string, _propTypes2["default"].number, _propTypes2["default"].object]),
  events: _propTypes2["default"].array,
  locale: _propTypes2["default"].string,
  scheduleRender: _propTypes2["default"].func
};
var defaultProps = {
  prefixCls: 'kuma-calendar-mini',
  value: new Date(),
  locale: 'zh-cn',
  events: [],
  scheduleRender: null,
  getPopupContainer: null
};

var MiniWeek = function (_React$Component) {
  _inherits(MiniWeek, _React$Component);

  function MiniWeek(props) {
    _classCallCheck(this, MiniWeek);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.state = {
      value: props.value || new Date(),
      currentDayInfo: {},
      weekDays: []
    };
    var locale = props.locale;

    _this.locale = locale ? locale.toLowerCase().replace('_', '-') : 'zh-cn';
    return _this;
  }

  MiniWeek.prototype.componentDidMount = function componentDidMount() {
    this.setWeekDays();
  };

  MiniWeek.prototype.getImportantEvents = function getImportantEvents(events) {
    if (!events || !events.length) {
      return false;
    }
    return events.some(function (event) {
      return event.important;
    });
  };

  MiniWeek.prototype.setWeekDays = function setWeekDays() {
    this.setState({
      weekDays: this.getRenderData()
    });
  };

  MiniWeek.prototype.getVisibleEvents = function getVisibleEvents(eventsHash) {
    var _this2 = this;

    var objectKeys = Object.keys(eventsHash);
    var resultEventsHash = {};
    objectKeys.forEach(function (eventKey) {
      resultEventsHash[eventKey] = { events: [] };
      var events = eventsHash[eventKey].events;

      var visibleEvents = events.filter(function (event) {
        return _this2.evaluateEventVisible(event, eventKey);
      });
      resultEventsHash[eventKey].events = visibleEvents;
    });
    return resultEventsHash;
  };

  MiniWeek.prototype.setValue = function setValue(newValue) {
    this.setState({
      value: newValue,
      weekDays: this.getRenderData(newValue)
    });
  };

  MiniWeek.prototype.getRenderShow = function getRenderShow() {
    var weekDays = this.state.weekDays;

    if (weekDays && weekDays.length) {
      var firstValue = weekDays[0].value;
      var endValue = weekDays[weekDays.length - 1].value;

      var firstMonthFormat = (0, _calendarFullUtil.getFormatDate)(firstValue, 'YYYY年MM月');
      var endMonthFormat = (0, _calendarFullUtil.getFormatDate)(endValue, 'YYYY年MM月');
      if (this.locale === 'en-us') {
        firstMonthFormat = (0, _calendarFullUtil.getFormatDate)(firstValue, 'YYYY.MMM ');
        endMonthFormat = (0, _calendarFullUtil.getFormatDate)(endValue, 'YYYY.MMM');
      }
      if (firstValue.isSame(endValue, 'month')) {
        return firstMonthFormat;
      }
      return firstMonthFormat + '-' + endMonthFormat;
    }
    return '--';
  };

  MiniWeek.prototype.getRenderData = function getRenderData(newValue) {
    var stateValue = this.state.value;

    var value = newValue || stateValue;
    var current = (0, _moment2["default"])(value || new Date()).locale(this.locale);
    var cloneValue = current.clone();
    var localeData = current.localeData();
    var currentDay = (0, _moment2["default"])(value).day();
    var events = this.props.events;

    var visibleEvents = {};
    (0, _calendarFullUtil.handlePropsEvents)(events, visibleEvents);
    this.getVisibleEvents(visibleEvents);
    var weekDays = [];

    for (var i = 0; i < DATE_COL_COUNT; i++) {
      var diff = currentDay - i;
      if (diff < 0) {
        current = (0, _moment2["default"])(cloneValue).add(Math.abs(diff), 'd');
      } else {
        current = (0, _moment2["default"])(cloneValue).subtract(diff, 'd');
      }
      var key = (0, _calendarFullUtil.getFormatDate)(current, 'YYYY-MM-DD');
      var weekDaysEvents = visibleEvents[key] ? visibleEvents[key].events : null;
      weekDays[i] = {};
      weekDays[i].label = localeData.weekdaysShort(current);
      weekDays[i].value = current;
      weekDays[i].events = weekDaysEvents;
      if (diff === 0) {
        this.setState({
          currentDayInfo: weekDays[i]
        });
      }
    }
    return weekDays;
  };

  MiniWeek.prototype.getWeekDayContent = function getWeekDayContent() {
    var _this3 = this;

    var _state = this.state,
        weekDays = _state.weekDays,
        stateValue = _state.value;
    var prefixCls = this.props.prefixCls;

    var now = (0, _moment2["default"])();
    return weekDays.map(function (day) {
      var _classnames;

      var value = day.value,
          label = day.label,
          events = day.events;

      var currentDay = (0, _moment2["default"])(value).day();
      var cls = (0, _classnames3["default"])((_classnames = {}, _defineProperty(_classnames, prefixCls + '-day', true), _defineProperty(_classnames, 'today', value && (0, _moment2["default"])(value).isSame(now, 'day')), _defineProperty(_classnames, 'rest', currentDay === 6 || currentDay === 0), _defineProperty(_classnames, 'past', (0, _moment2["default"])(value).isBefore(now, 'date')), _defineProperty(_classnames, 'active', (0, _moment2["default"])(value).isSame(stateValue)), _classnames));
      var important = _this3.getImportantEvents(events);
      return _react2["default"].createElement(
        'div',
        {
          key: value,
          title: label,
          className: cls,
          onClick: _this3.generateRender.bind(_this3, day)
        },
        _react2["default"].createElement(
          'p',
          null,
          label
        ),
        _react2["default"].createElement(
          'div',
          {
            className: (0, _classnames3["default"])('header-date', {
              event: !!events,
              important: important
            })
          },
          important && _react2["default"].createElement(_uxcoreIcon2["default"], { name: 'zhongyaoshijian', usei: true, className: 'import-event' }),
          value && _react2["default"].createElement(
            'p',
            null,
            value.date()
          )
        )
      );
    });
  };

  MiniWeek.prototype.getScheduleRender = function getScheduleRender() {
    var currentDayInfo = this.state.currentDayInfo;
    var _props = this.props,
        scheduleRender = _props.scheduleRender,
        getPopupContainer = _props.getPopupContainer;

    var content = null;
    if (JSON.stringify(currentDayInfo) !== '{}' && currentDayInfo.events && scheduleRender) {
      content = scheduleRender(currentDayInfo);
      if (getPopupContainer) {
        var mountNode = getPopupContainer();
        if (!mountNode) {
          return null;
        }
        return _reactDom2["default"].createPortal(content, mountNode);
      }
    }
    return content;
  };

  MiniWeek.prototype.evaluateEventVisible = function evaluateEventVisible(event, date) {
    var value = this.state.value;

    return (0, _calendarFullUtil.inSameWeek)(date, value);
  };

  MiniWeek.prototype.handlePrev = function handlePrev() {
    var value = this.state.value;

    var newValue = (0, _moment2["default"])(value).subtract(1, 'w');
    this.setValue(newValue);
  };

  MiniWeek.prototype.handleNext = function handleNext() {
    var value = this.state.value;

    var newValue = (0, _moment2["default"])(value).add(1, 'w');
    this.setValue(newValue);
  };

  MiniWeek.prototype.generateRender = function generateRender(dayInfo) {
    var value = dayInfo.value;
    var stateValue = this.state.value;

    if (value && !value.isSame(stateValue, 'date')) {
      var renderInfo = {};
      (0, _objectAssign2["default"])(renderInfo, dayInfo);
      renderInfo.value = (0, _moment2["default"])(value).toDate();
      this.setState({
        currentDayInfo: renderInfo,
        value: value
      });
    }
  };

  MiniWeek.prototype.render = function render() {
    var prefixCls = this.props.prefixCls;

    var showTitle = this.getRenderShow();
    var scheduleContent = this.getScheduleRender();

    return _react2["default"].createElement(
      'div',
      { className: prefixCls + '-week' },
      _react2["default"].createElement(
        'div',
        { className: 'header-container' },
        _react2["default"].createElement('span', { className: prefixCls + '-prev-btn', onClick: this.handlePrev.bind(this) }),
        _react2["default"].createElement(
          'div',
          { className: 'title' },
          showTitle
        ),
        _react2["default"].createElement(
          'div',
          { className: prefixCls + '-date' },
          this.getWeekDayContent()
        ),
        _react2["default"].createElement('span', { className: prefixCls + '-next-btn', onClick: this.handleNext.bind(this) })
      ),
      scheduleContent
    );
  };

  return MiniWeek;
}(_react2["default"].Component);

MiniWeek.displayName = 'MiniWeek';
MiniWeek.propTypes = proptypes;
MiniWeek.defaultProps = defaultProps;

exports["default"] = MiniWeek;
module.exports = exports['default'];