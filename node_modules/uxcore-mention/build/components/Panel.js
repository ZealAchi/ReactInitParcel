'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var Panel = function (_Component) {
  _inherits(Panel, _Component);

  function Panel() {
    _classCallCheck(this, Panel);

    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }

  Panel.prototype.render = function render() {
    var _this2 = this;

    var props = this.props;
    var onSelect = props.onSelect,
        list = props.list,
        style = props.style,
        visible = props.visible,
        idx = props.idx,
        formatter = props.formatter,
        prefixCls = props.prefixCls;

    return _react2["default"].createElement(
      'ul',
      {
        className: (0, _classnames2["default"])(prefixCls + '-panel', _defineProperty({}, prefixCls + '-panel-visible', visible)), style: style
      },
      list.map(function (item, index) {
        return _react2["default"].createElement(
          'li',
          {
            className: (0, _classnames2["default"])(prefixCls + '-panel-item', _defineProperty({}, prefixCls + '-panel-item-current', idx === index)), key: index, onClick: onSelect.bind(_this2, item)
          },
          _react2["default"].createElement('div', { dangerouslySetInnerHTML: { __html: formatter(item) } })
        );
      })
    );
  };

  return Panel;
}(_react.Component);

Panel.displayName = 'uxcore-mention-panel';
Panel.propTypes = {
  prefixCls: _propTypes2["default"].string,
  list: _propTypes2["default"].array,
  style: _propTypes2["default"].object,
  idx: _propTypes2["default"].number,
  onSelect: _propTypes2["default"].func,
  formatter: _propTypes2["default"].func
};
Panel.defaultProps = {
  prefixCls: '',
  list: [],
  style: {},
  idx: 0,
  onSelect: null,
  formatter: ''
};
exports["default"] = Panel;
module.exports = exports['default'];