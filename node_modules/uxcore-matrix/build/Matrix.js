'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _isEqual = require('lodash/isEqual');

var _isEqual2 = _interopRequireDefault(_isEqual);

var _reactLifecyclesCompat = require('react-lifecycles-compat');

var _util = require('./util');

var _util2 = _interopRequireDefault(_util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Matrix Component for uxcore
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author eternalsky
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2015-2016, Uxcore Team, Alinw.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var errorInfo = _react2["default"].createElement(
  'div',
  { className: 'error', style: { color: '#f00' } },
  '\u6570\u636E\u9519\u8BEF\uFF0C\u8BF7\u68C0\u67E5 data \u5C5E\u6027\u683C\u5F0F\u662F\u5426\u6B63\u786E\uFF01'
);

var Matrix = function (_React$Component) {
  _inherits(Matrix, _React$Component);

  Matrix.getVirtualMatrix = function getVirtualMatrix(data) {
    if (data && data.data) {
      if (data.data instanceof Array) {
        var vm = _util2["default"].generateVM(data.data);
        if (typeof vm === 'string') {
          return null;
        }
        return vm;
      }

      return null;
    }

    return null;
  };

  Matrix.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    if (!(0, _isEqual2["default"])(prevState.data, nextProps.data)) {
      return {
        data: nextProps.data,
        vm: Matrix.getVirtualMatrix(nextProps.data)
      };
    }

    // Return null to indicate no change to state.
    return null;
  };

  function Matrix(props) {
    _classCallCheck(this, Matrix);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.state = {
      data: props.data,
      vm: Matrix.getVirtualMatrix(props.data)
    };
    return _this;
  }

  Matrix.prototype.getRealMatrix = function getRealMatrix() {
    var _this2 = this;

    var _props = this.props,
        prefixCls = _props.prefixCls,
        cellHeight = _props.cellHeight,
        cellWidth = _props.cellWidth;

    if (!this.state.vm) {
      return errorInfo;
    }

    return this.state.vm.numData.map(function (item, index) {
      var style = {
        top: _util2["default"].getSubTotal(cellHeight, 0, item.y),
        left: _util2["default"].getSubTotal(cellWidth, 0, item.x),
        width: _util2["default"].getSubTotal(cellWidth, item.x, item.x + item.col),
        height: _util2["default"].getSubTotal(cellHeight, item.y, item.y + item.row)
      };
      if (item.x === 0) {
        style.borderLeft = 'none';
      }
      if (item.y === _util2["default"].getLargestArr(_this2.state.vm.vm).length - item.row) {
        style.borderBottom = 'none';
      }
      return _react2["default"].createElement(
        'div',
        {
          className: prefixCls + '-cell',
          key: index,
          style: style
        },
        _this2.props.render(item, style)
      );
    });
  };

  Matrix.prototype.render = function render() {
    var _props2 = this.props,
        prefixCls = _props2.prefixCls,
        height = _props2.height,
        width = _props2.width,
        cellWidth = _props2.cellWidth,
        cellHeight = _props2.cellHeight;

    if (!this.state.vm) {
      return errorInfo;
    }

    var vm = this.state.vm.vm;
    var matrixHeight = _util2["default"].getSubTotal(cellHeight, 0, _util2["default"].getLargestArr(vm).length);
    var matrixWidth = _util2["default"].getSubTotal(cellWidth, 0, vm.length);
    return _react2["default"].createElement(
      'div',
      {
        className: '' + prefixCls,
        style: {
          height: height || matrixHeight + 2,
          width: width || matrixWidth + 2
        }
      },
      _react2["default"].createElement(
        'div',
        {
          className: prefixCls + '-wrap',
          style: {
            height: matrixHeight,
            width: matrixWidth
          }
        },
        this.getRealMatrix()
      )
    );
  };

  return Matrix;
}(_react2["default"].Component);

// Polyfill your component so the new lifecycles will work with older versions of React


Matrix.displayName = 'Matrix';
Matrix.propTypes = {
  prefixCls: _propTypes2["default"].string,
  width: _propTypes2["default"].oneOfType([_propTypes2["default"].string, _propTypes2["default"].number]),
  height: _propTypes2["default"].oneOfType([_propTypes2["default"].string, _propTypes2["default"].number]),
  cellHeight: _propTypes2["default"].oneOfType([_propTypes2["default"].string, _propTypes2["default"].number, _propTypes2["default"].array]),
  cellWidth: _propTypes2["default"].oneOfType([_propTypes2["default"].string, _propTypes2["default"].number, _propTypes2["default"].array]),
  render: _propTypes2["default"].func,
  data: _propTypes2["default"].object
};
Matrix.defaultProps = {
  prefixCls: 'kuma-matrix',
  data: {},
  height: undefined,
  width: undefined,
  cellHeight: 50,
  cellWidth: 100,
  render: function render(cell) {
    return cell.text;
  }
};
(0, _reactLifecyclesCompat.polyfill)(Matrix);

exports["default"] = Matrix;
module.exports = exports['default'];