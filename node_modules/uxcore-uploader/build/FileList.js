'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _FileItem = require('./FileItem');

var _FileItem2 = _interopRequireDefault(_FileItem);

var _DefaultFileItem = require('./DefaultFileItem');

var _DefaultFileItem2 = _interopRequireDefault(_DefaultFileItem);

var _util = require('./util');

var _util2 = _interopRequireDefault(_util);

var _uploadcore = require('uploadcore');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uxcoreAlbum = require('uxcore-album');

var _uxcoreAlbum2 = _interopRequireDefault(_uxcoreAlbum);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var Photo = _uxcoreAlbum2["default"].Photo;

var FileList = function (_React$Component) {
  _inherits(FileList, _React$Component);

  function FileList(props) {
    _classCallCheck(this, FileList);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.core = props.core;

    _this.state = {
      items: _this.core.getStat().getFiles()
    };
    return _this;
  }

  FileList.prototype.componentDidMount = function componentDidMount() {
    var _this2 = this;

    var flag = this.props.showErrFile;
    var statchange = function statchange(stat) {
      var files = stat.getFiles();
      if (!flag) {
        files = files.filter(function (file) {
          return file.getStatus() != 64;
        });
      }
      _this2.setState({
        items: files
      });
    };
    this.core.on(_uploadcore.Events.QUEUE_STAT_CHANGE, statchange);
    this.stopListen = function () {
      _this2.core.off(_uploadcore.Events.QUEUE_STAT_CHANGE, statchange);
    };
  };

  FileList.prototype.componentWillUnmount = function componentWillUnmount() {
    if (this.stopListen) {
      this.stopListen();
    }
  };

  FileList.prototype.onShowFile = function onShowFile(file, url, current) {
    var _props = this.props,
        isOnlyImg = _props.isOnlyImg,
        fileList = _props.fileList,
        onShowFile = _props.onShowFile;


    if (onShowFile) {
      // 自定义预览行为
      onShowFile(file, url, current);
      return;
    }

    if (isOnlyImg && url) {

      var _fileList = fileList.map(function (item, index) {
        if (item.response) {
          var _util$getUrl = _util2["default"].getUrl(item.response),
              previewUrl = _util$getUrl.previewUrl;

          return _react2["default"].createElement(Photo, {
            src: previewUrl,
            key: index
          });
        }
        return null;
      });

      var shows = _fileList.filter(function (item) {
        return !!item;
      });

      _uxcoreAlbum2["default"].show({
        photos: shows,
        current: current,
        showButton: true
      });
    } else {
      window.open(url);
    }
  };

  FileList.prototype.onDownloadFile = function onDownloadFile(file, url, current) {
    var onDownloadFile = this.props.onDownloadFile;

    if (onDownloadFile) {
      onDownloadFile(file, url, current);
      return;
    }
    window.open(url);
  };

  FileList.prototype.renderDefaultFileItems = function renderDefaultFileItems() {
    var _this3 = this;

    var arr = [];
    var fileList = this.props.fileList || [];
    fileList.forEach(function (file, index) {
      if (file.type !== 'delete') {
        arr.push(_react2["default"].createElement(_DefaultFileItem2["default"], {
          file: file,
          prefixCls: _this3.props.prefixCls,
          locale: _this3.props.locale,
          key: index,
          mode: _this3.props.mode,
          isOnlyImg: _this3.props.isOnlyImg,
          readOnly: _this3.props.readOnly,
          isVisual: _this3.props.isVisual,
          onShowFile: function onShowFile(currentFile, url) {
            _this3.onShowFile(currentFile, url, index);
          },
          onDownloadFile: function onDownloadFile(currentFile, url) {
            _this3.onDownloadFile(currentFile, url, index);
          },
          onCancel: _this3.props.removeFileFromList.bind(_this3)
        }));
      }
    });
    return arr;
  };

  FileList.prototype.renderFileItems = function renderFileItems() {
    var _this4 = this;

    var arr = [];
    this.state.items.forEach(function (file) {
      if ([_uploadcore.Status.CANCELLED, _uploadcore.Status.SUCCESS, _uploadcore.Status.QUEUED].indexOf(file.status) === -1) {
        arr.push(_react2["default"].createElement(_FileItem2["default"], {
          prefixCls: _this4.props.prefixCls,
          locale: _this4.props.locale,
          key: file.id,
          file: file,
          mode: _this4.props.mode,
          isOnlyImg: _this4.props.isOnlyImg,
          isVisual: _this4.props.isVisual,
          interval: _this4.props.interval
        }));
      }
    });
    return arr;
  };

  FileList.prototype.render = function render() {
    var _props2 = this.props,
        prefixCls = _props2.prefixCls,
        mode = _props2.mode,
        isVisual = _props2.isVisual;


    return _react2["default"].createElement(
      'div',
      { className: prefixCls + '-filelist ' + (mode === 'nw' ? 'nwmode' : mode === 'mini' ? 'minimode' : 'iconmode') + (isVisual ? ' filelist-visual' : '') },
      _react2["default"].createElement(
        'div',
        { className: 'inner fn-clear' },
        this.renderDefaultFileItems(),
        this.renderFileItems(),
        this.props.children
      )
    );
  };

  return FileList;
}(_react2["default"].Component);

FileList.defaultProps = {
  mode: 'mini',
  showErrFile: true
};
FileList.propTypes = {
  prefixCls: _propTypes2["default"].string,
  locale: _propTypes2["default"].string,
  mode: _propTypes2["default"].string,
  isVisual: _propTypes2["default"].bool,
  isOnlyImg: _propTypes2["default"].bool,
  showErrFile: _propTypes2["default"].bool,
  readOnly: _propTypes2["default"].bool,
  fileList: _propTypes2["default"].array,
  core: _propTypes2["default"].any
};
exports["default"] = FileList;
module.exports = exports['default'];