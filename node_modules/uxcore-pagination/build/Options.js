'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _uxcoreButton = require('uxcore-button');

var _uxcoreButton2 = _interopRequireDefault(_uxcoreButton);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = require('react-lifecycles-compat');

var _KeyCode = require('./KeyCode');

var _KeyCode2 = _interopRequireDefault(_KeyCode);

var _locale = require('./locale');

var _locale2 = _interopRequireDefault(_locale);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var Options = function (_React$Component) {
  _inherits(Options, _React$Component);

  Options.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    if (nextProps.current !== prevState.lastCurrent) {
      return {
        current: nextProps.current,
        lastCurrent: nextProps.current
      };
    }
    return null;
  };

  function Options(props) {
    _classCallCheck(this, Options);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.state = {
      current: props.current,
      lastCurrent: props.current
    };

    ['_handleChange', '_changeSize', '_go', 'handleButtonClick'].forEach(function (method) {
      _this[method] = _this[method].bind(_this);
      return null;
    });
    return _this;
  }

  Options.prototype.handleButtonClick = function handleButtonClick() {
    this._go({
      target: {
        value: this.state.current
      },
      keyCode: _KeyCode2["default"].ENTER
    });
  };

  Options.prototype._changeSize = function _changeSize(value) {
    this.props.changeSize(Number(value));
  };

  Options.prototype._handleChange = function _handleChange(evt) {
    var _val = evt.target.value;

    this.setState({
      current: _val
    });
  };

  Options.prototype._go = function _go(e) {
    var _val = e.target.value;
    if (_val === '') {
      return;
    }
    _val = Number(_val);
    if (isNaN(_val)) {
      return;
    }
    if (e.keyCode === _KeyCode2["default"].ENTER) {
      var c = this.props.quickGo(_val);
      this.setState({
        current: c
      });
    }
  };

  Options.prototype.render = function render() {
    var props = this.props;
    var state = this.state;
    var prefixCls = props.rootPrefixCls + '-options';
    var sizeOptions = props.sizeOptions;
    var pageSize = props.pageSize;
    var changeSize = props.changeSize;
    var quickGo = props.quickGo;
    var Select = props.selectComponentClass;
    var changeSelect = null;
    var goInput = null;

    if (!(changeSize || quickGo)) {
      return null;
    }

    if (changeSize && Select) {
      var Option = Select.Option;
      changeSelect = _react2["default"].createElement(
        Select,
        {
          prefixCls: props.selectPrefixCls,
          showSearch: false,
          className: prefixCls + '-size-changer',
          getPopupContainer: props.getPopupContainer,
          optionLabelProp: 'children',
          dropdownClassName: prefixCls + '-size-changer-dropdown',
          defaultValue: sizeOptions.indexOf(pageSize) === -1 ? '' + sizeOptions[0] : '' + pageSize,
          onChange: this._changeSize
        },
        sizeOptions.map(function (option) {
          return _react2["default"].createElement(
            Option,
            { key: option, value: '' + option },
            option + _locale2["default"][props.locale].items_per_page
          );
        })
      );
    }

    if (quickGo) {
      goInput = _react2["default"].createElement(
        'div',
        { title: 'Quick jump to page', className: prefixCls + '-quick-jumper' },
        _locale2["default"][props.locale].jump_to,
        _react2["default"].createElement('input', {
          type: 'text',
          className: 'kuma-input',
          value: state.current,
          onChange: this._handleChange.bind(this),
          onKeyUp: this._go.bind(this)
        }),
        _locale2["default"][props.locale].page,
        _react2["default"].createElement(
          _uxcoreButton2["default"],
          {
            type: 'secondary',
            size: 'small',
            className: prefixCls + '-quick-jumper-button',
            onClick: this.handleButtonClick
          },
          _locale2["default"][props.locale].ok
        )
      );
    }

    return _react2["default"].createElement(
      'div',
      { className: '' + prefixCls },
      changeSelect,
      goInput
    );
  };

  return Options;
}(_react2["default"].Component);

/* eslint-disable react/require-default-props */


Options.propTypes = {
  changeSize: _propTypes2["default"].func,
  quickGo: _propTypes2["default"].func,
  selectComponentClass: _propTypes2["default"].func,
  current: _propTypes2["default"].number
};
/* eslint-enable react/require-default-props */

(0, _reactLifecyclesCompat.polyfill)(Options);

exports["default"] = Options;
module.exports = exports['default'];