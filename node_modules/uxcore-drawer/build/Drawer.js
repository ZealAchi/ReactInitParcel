'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _uxcoreDialog = require('uxcore-dialog');

var _uxcoreDialog2 = _interopRequireDefault(_uxcoreDialog);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Drawer Component for uxcore
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author kewenlei
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2017-2018, Uxcore Team, Alinw.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var WIDTH_MAP = { small: 400, normal: 780, large: 1160 };

var Drawer = function (_React$Component) {
  _inherits(Drawer, _React$Component);

  function Drawer(props) {
    _classCallCheck(this, Drawer);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.handleWidth = _this.handleWidth.bind(_this);
    _this.handleOptions = _this.handleOptions.bind(_this);
    _this.getStyle = _this.getStyle.bind(_this);
    _this.getChild = _this.getChild.bind(_this);
    _this.handleCancel = _this.handleCancel.bind(_this);
    _this.children = null;
    return _this;
  }

  Drawer.prototype.getChild = function getChild() {
    var _this2 = this;

    var children = this.props.children;

    var childrens = _react2["default"].Children.toArray(children);
    childrens.forEach(function (child) {
      var type = child.type;

      if (type && type.displayName === 'Drawer') {
        _this2.children = child;
      }
    });
  };

  Drawer.prototype.getStyle = function getStyle() {
    var _props = this.props,
        zIndex = _props.zIndex,
        style = _props.style,
        visible = _props.visible;


    var styleObject = _extends({
      zIndex: zIndex,
      transition: null
    }, style);

    if (visible) {
      this.getChild();
    }

    if (this.children) {
      if (this.children.props.visible) {
        styleObject.transform = this.getTransForm();
        styleObject.transition = 'transform .4s ease ';
      } else if (visible) {
        styleObject.transform = 'translateX(0)';
        styleObject.transition = 'transform .4s ease ';
      }
    }
    return styleObject;
  };

  Drawer.prototype.getTransForm = function getTransForm() {
    var placement = this.props.placement;

    var childWidth = this.handleWidth(this.children.props);
    var dist = this.showWidth - childWidth;
    if (dist < 0) {
      dist = Math.abs(dist) + 230;
    } else {
      dist = dist > 230 ? 230 : 230 + childWidth - this.showWidth;
    }
    if (placement === 'left') {
      return 'translateX(' + dist + 'px)';
    }
    return 'translateX(-' + dist + 'px)';
  };

  Drawer.prototype.firstUpperCase = function firstUpperCase(str) {
    return str.toLowerCase().replace(/( |^)[a-z]/g, function (L) {
      return L.toUpperCase();
    });
  };

  Drawer.prototype.handleCancel = function handleCancel(e) {
    var onCancel = this.props.onCancel;

    if (onCancel) {
      onCancel(e);
    }
  };

  Drawer.prototype.handleOptions = function handleOptions() {
    var _props2 = this.props,
        placement = _props2.placement,
        showFooter = _props2.showFooter,
        footer = _props2.footer,
        className = _props2.className,
        size = _props2.size,
        width = _props2.width,
        prefixCls = _props2.prefixCls,
        style = _props2.style,
        onCancel = _props2.onCancel,
        props = _objectWithoutProperties(_props2, ['placement', 'showFooter', 'footer', 'className', 'size', 'width', 'prefixCls', 'style', 'onCancel']);

    var placementStr = this.firstUpperCase(placement);
    var showWidth = this.handleWidth();
    var commonProps = _extends({
      width: showWidth,
      transitionName: 'dialogSlide' + placementStr
    }, props);
    this.showWidth = showWidth;
    if (!showFooter) {
      commonProps.footer = null;
      return commonProps;
    }
    if (footer) {
      commonProps.footer = footer;
      return commonProps;
    }
    return commonProps;
  };

  Drawer.prototype.handleWidth = function handleWidth(comp) {
    var _ref = comp || this.props,
        size = _ref.size,
        width = _ref.width;

    if (width) {
      return width;
    }
    return WIDTH_MAP[size];
  };

  Drawer.prototype.render = function render() {
    var _classnames,
        _this3 = this;

    var props = this.props;
    var prefixCls = props.prefixCls,
        className = props.className,
        placement = props.placement,
        title = props.title,
        showFooter = props.showFooter,
        size = props.size;

    var classNames = (0, _classnames3["default"])(className, (_classnames = {}, _defineProperty(_classnames, '' + prefixCls, true), _defineProperty(_classnames, prefixCls + '-' + size, true), _defineProperty(_classnames, prefixCls + '-' + placement, true), _defineProperty(_classnames, prefixCls + '-hastitle', !!title), _defineProperty(_classnames, prefixCls + '-hasfooter', showFooter), _classnames));
    var drawerOptions = this.handleOptions();
    return _react2["default"].createElement(_uxcoreDialog2["default"], _extends({
      ref: function ref(c) {
        _this3.drawer = c;
      },
      className: classNames,
      onCancel: this.handleCancel
    }, drawerOptions, {
      style: this.getStyle(drawerOptions.width)
    }));
  };

  return Drawer;
}(_react2["default"].Component);

Drawer.displayName = 'Drawer';
Drawer.propTypes = {
  prefixCls: _propTypes2["default"].string,
  className: _propTypes2["default"].string,
  title: _propTypes2["default"].string,
  visible: _propTypes2["default"].bool,
  onOk: _propTypes2["default"].func,
  onCancel: _propTypes2["default"].func,
  width: _propTypes2["default"].oneOfType([_propTypes2["default"].string, _propTypes2["default"].number]),
  size: _propTypes2["default"].oneOf(['small', 'normal', 'large']),
  showFooter: _propTypes2["default"].bool,
  footer: _propTypes2["default"].node,
  closable: _propTypes2["default"].bool,
  maskClosable: _propTypes2["default"].bool,
  locale: _propTypes2["default"].string,
  wrapClassName: _propTypes2["default"].string,
  style: _propTypes2["default"].object,
  zIndex: _propTypes2["default"].number,
  placement: _propTypes2["default"].oneOf(['left', 'right', 'top'])
};
Drawer.defaultProps = {
  prefixCls: 'kuma-drawer',
  className: '',
  title: '',
  visible: false,
  size: 'small',
  width: '',
  closable: true,
  maskClosable: true,
  locale: 'zh-cn',
  wrapClassName: '',
  style: {},
  zIndex: 1000,
  placement: 'right',
  showFooter: true,
  onOk: null,
  onCancel: null,
  footer: null
};
exports["default"] = Drawer;
module.exports = exports['default'];