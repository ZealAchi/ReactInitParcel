'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports["default"] = function () {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var Dialog = arguments[1];

  var htmlNode = document.documentElement;
  var supportClassList = !!htmlNode.classList;
  var div = document.createElement('div');
  document.body.appendChild(div);

  var newProps = (0, _objectAssign2["default"])({
    iconClassName: 'kuma-icon-caution',
    width: 320,
    locale: 'zh-cn'
  }, props);
  var locale = _i18n2["default"][newProps.locale];

  // 默认为 true，保持向下兼容
  if (!('okCancel' in newProps)) {
    newProps.okCancel = true;
  }

  function close() {
    if (newProps.htmlClassName) {
      if (supportClassList) {
        htmlNode.classList.remove(newProps.htmlClassName);
      } else {
        htmlNode.className = htmlNode.className.replace(new RegExp('\\s?' + newProps.htmlClassName), '');
      }
    }
    _reactDom2["default"].unmountComponentAtNode(div);
    if (document.body.contains(div)) {
      document.body.removeChild(div);
    }
  }

  if (newProps.timer) {
    setTimeout(function () {
      close();
    }, newProps.timer);
  }

  function onCancel() {
    var cancelFn = newProps.onCancel;
    if (cancelFn) {
      var ret = void 0;
      if (cancelFn.length) {
        ret = cancelFn(close);
      } else {
        ret = cancelFn();
        if (!ret) {
          close();
        }
      }
      if (ret && ret.then) {
        ret.then(close);
      }
    } else {
      close();
    }
  }

  function onOk() {
    var okFn = newProps.onOk;
    if (okFn) {
      var ret = void 0;
      if (okFn.length) {
        ret = okFn(close);
      } else {
        ret = okFn();
        if (!ret) {
          close();
        }
      }
      if (ret && ret.then) {
        ret.then(close);
      }
    } else {
      close();
    }
  }

  var icon = _react2["default"].createElement('i', { className: 'kuma-icon ' + newProps.iconClassName });

  if (newProps.icon) {
    icon = newProps.icon;
  }

  var body = _react2["default"].createElement(
    'div',
    { className: 'kuma-confirm-body' },
    icon,
    _react2["default"].createElement(
      'div',
      { className: 'kuma-confirm-body-main' },
      _react2["default"].createElement(
        'span',
        { className: 'kuma-confirm-title' },
        newProps.title
      ),
      _react2["default"].createElement(
        'div',
        { className: 'kuma-confirm-content' },
        newProps.content
      )
    )
  );
  var footer = void 0;

  if (newProps.okCancel) {
    footer = _react2["default"].createElement(
      'div',
      { className: 'kuma-confirm-action' },
      _react2["default"].createElement(
        _uxcoreButton2["default"],
        { type: 'secondary', size: newProps.buttonSize || 'small', onClick: onCancel },
        newProps.cancelText || locale.cancel
      ),
      _react2["default"].createElement(
        _uxcoreButton2["default"],
        { size: newProps.buttonSize || 'small', onClick: onOk },
        newProps.okText || locale.confirm
      )
    );
  } else {
    footer = _react2["default"].createElement(
      'div',
      { className: 'kuma-confirm-action' },
      _react2["default"].createElement(
        _uxcoreButton2["default"],
        { size: newProps.buttonSize || 'small', onClick: onOk },
        newProps.okText || locale.isee
      )
    );
  }

  if (newProps.htmlClassName) {
    if (supportClassList) {
      htmlNode.classList.add(newProps.htmlClassName);
    } else {
      htmlNode.className += ' ' + newProps.htmlClassName;
    }
  }

  _reactDom2["default"].render(_react2["default"].createElement(
    Dialog,
    {
      className: '' + newProps.className,
      onCancel: onCancel,
      isConfirm: true,
      visible: true,
      closable: true,
      title: '',
      footer: '',
      transitionName: newProps.transitionName,
      maskTransitionName: newProps.maskTransitionName,
      width: newProps.width,
      htmlClassName: newProps.htmlClassName,
      getContainer: newProps.getContainer
    },
    _react2["default"].createElement(
      'div',
      null,
      body,
      ' ',
      footer
    )
  ), div);
  return {
    close: close
  };
};

var _uxcoreButton = require('uxcore-button');

var _uxcoreButton2 = _interopRequireDefault(_uxcoreButton);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _objectAssign = require('object-assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _i18n = require('./i18n');

var _i18n2 = _interopRequireDefault(_i18n);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

module.exports = exports['default'];