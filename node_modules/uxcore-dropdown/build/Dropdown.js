'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rcDropdown = require('rc-dropdown');

var _rcDropdown2 = _interopRequireDefault(_rcDropdown);

var _objectAssign = require('object-assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var Dropdown = function (_RcDropdown) {
  _inherits(Dropdown, _RcDropdown);

  function Dropdown() {
    _classCallCheck(this, Dropdown);

    return _possibleConstructorReturn(this, _RcDropdown.apply(this, arguments));
  }

  return Dropdown;
}(_rcDropdown2["default"]);

Dropdown.displayName = 'uxcore-dropdown';
Dropdown.propTypes = _rcDropdown2["default"].propTypes;
Dropdown.defaultProps = (0, _objectAssign2["default"])({}, _rcDropdown2["default"].defaultProps, {
  prefixCls: 'kuma-dropdown',
  transitionName: 'dropdownSlideUp'
});

exports["default"] = Dropdown;
module.exports = exports['default'];