'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _objectAssign = require('object-assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

var _uxcoreCalendar = require('uxcore-calendar');

var _uxcoreCalendar2 = _interopRequireDefault(_uxcoreCalendar);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _uxcoreCellField = require('uxcore-cell-field');

var _uxcoreCellField2 = _interopRequireDefault(_uxcoreCellField);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * DateCellField Component for uxcore
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author AlphaGo88&lt;83268606@qq.com&gt;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2015-2016, Uxcore Team, Alinw.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

var DateCellField = function (_CellField) {
  _inherits(DateCellField, _CellField);

  function DateCellField() {
    _classCallCheck(this, DateCellField);

    return _possibleConstructorReturn(this, _CellField.apply(this, arguments));
  }

  /* eslint-disable class-methods-use-this */
  DateCellField.prototype.addSpecificClass = function addSpecificClass() {
    return 'kuma-date-cell-field';
  };
  /* eslint-enable class-methods-use-this */

  DateCellField.prototype.renderContent = function renderContent() {
    var me = this;
    var config = me.props.column.config;
    var propsToDelete = ['value', 'onSelect'];
    var fieldProps = {
      value: me.props.value,
      onSelect: function onSelect(value, formatDateString) {
        me.handleDataChange({
          text: formatDateString,
          value: value ? value.getTime() : value
        });
      }
    };
    if (config) {
      var customProps = _extends({}, config);
      propsToDelete.forEach(function (item) {
        delete customProps[item];
      });
      (0, _objectAssign2["default"])(fieldProps, customProps);
    }
    return _react2["default"].createElement(_uxcoreCalendar2["default"], fieldProps);
  };

  return DateCellField;
}(_uxcoreCellField2["default"]);

DateCellField.propTypes = (0, _objectAssign2["default"])({}, _uxcoreCellField2["default"].propTypes);
DateCellField.defaultProps = (0, _objectAssign2["default"])({}, _uxcoreCellField2["default"].defaultProps);

exports["default"] = DateCellField;
module.exports = exports['default'];