"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = require("classnames");

var _classnames3 = _interopRequireDefault(_classnames2);

var _RadiogroupItem = require("./RadiogroupItem");

var _RadiogroupItem2 = _interopRequireDefault(_RadiogroupItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * thanks for https://github.com/chenglou/react-radio-group
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author: zhouquan.yezq
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @time  : 5/25 2015
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

var Radiogroup = function (_React$Component) {
  _inherits(Radiogroup, _React$Component);

  function Radiogroup() {
    _classCallCheck(this, Radiogroup);

    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }

  Radiogroup.prototype.handleChange = function handleChange(value) {
    var me = this;
    if (me.props.value !== value) {
      me.props.onChange(value);
    }
  };

  Radiogroup.prototype.processChild = function processChild() {
    var me = this;
    var length = _react2["default"].Children.count(me.props.children);
    if (!length) return false;
    var elements = _react2["default"].Children.map(me.props.children, function (child, index) {
      if (!!child.type && child.type.displayName === "RadiogroupItem") {
        return _react2["default"].cloneElement(child, {
          jsxdisabled: me.props.disabled,
          onChange: me.handleChange.bind(me),
          key: index,
          checked: me.props.value === child.props.value
        });
      }
      return null;
    });
    return elements;
  };

  Radiogroup.prototype.render = function render() {
    var _classnames;

    var me = this;
    return _react2["default"].createElement(
      "div",
      {
        className: (0, _classnames3["default"])((_classnames = {}, _defineProperty(_classnames, me.props.prefixCls, true), _defineProperty(_classnames, me.props.className, !!me.props.className), _classnames))
      },
      me.processChild()
    );
  };

  return Radiogroup;
}(_react2["default"].Component);

Radiogroup.displayName = "Radiogroup";
Radiogroup.propTypes = {
  prefixCls: _propTypes2["default"].string,
  value: _propTypes2["default"].string,
  onChange: _propTypes2["default"].func
};
Radiogroup.defaultProps = {
  prefixCls: "kuma-radio-group",
  value: "",
  onChange: function onChange() {}
};

Radiogroup.Item = _RadiogroupItem2["default"];

exports["default"] = Radiogroup;
module.exports = exports["default"];