'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames3 = require('classnames');

var _classnames4 = _interopRequireDefault(_classnames3);

var _uxcoreButton = require('uxcore-button');

var _uxcoreButton2 = _interopRequireDefault(_uxcoreButton);

var _util = require('./util');

var _i18n = require('./i18n');

var _i18n2 = _interopRequireDefault(_i18n);

var _SuperComponent2 = require('./SuperComponent');

var _SuperComponent3 = _interopRequireDefault(_SuperComponent2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * CascadeSelect Component for uxcore
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * @author changming
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * Copyright 2015-2017, Uxcore Team, Alinw.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * All rights reserved.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */


var isNotEmpty = function isNotEmpty(arr) {
  if (arr instanceof Array) {
    return arr.length;
  }
  return false;
};

var CascadeSubmenu = function (_SuperComponent) {
  _inherits(CascadeSubmenu, _SuperComponent);

  function CascadeSubmenu() {
    _classCallCheck(this, CascadeSubmenu);

    return _possibleConstructorReturn(this, _SuperComponent.apply(this, arguments));
  }

  CascadeSubmenu.prototype.onItemClick = function onItemClick(item, groupIndex, hasChildren) {
    if (this.props.onItemClick) {
      this.props.onItemClick(item.value, groupIndex, item, hasChildren);
    }
  };

  CascadeSubmenu.prototype.onItemHover = function onItemHover(item, groupIndex, hasChildren) {
    var _this2 = this;

    clearTimeout(this.timeout);
    this.timeout = setTimeout(function () {
      if (_this2.props.onItemClick) {
        _this2.props.onItemClick(item.value, groupIndex, item, hasChildren);
      }
    }, 400);
  };

  CascadeSubmenu.prototype.renderUlList = function renderUlList(data, key, groupIndex) {
    var _this3 = this;

    var _props = this.props,
        expandTrigger = _props.expandTrigger,
        renderCustomItem = _props.renderCustomItem;

    return data.map(function (item) {
      var otherProps = {};
      if (expandTrigger === 'click') {
        otherProps.onClick = _this3.onItemClick.bind(_this3, item, groupIndex, isNotEmpty(item.children));
      } else if (expandTrigger === 'hover') {
        otherProps.onMouseOver = _this3.onItemHover.bind(_this3, item, groupIndex, isNotEmpty(item.children));
      }

      if (item.value === key) {
        if (groupIndex === 0) {
          _this3.displayData = [item.label];
          if (item.description) {
            _this3.descArr = [item.description];
          } else if (_this3.descArr) {
            _this3.descArr = [];
          }
        } else {
          _this3.displayData[groupIndex] = item.label;
          if (item.description) {
            if (!_this3.descArr) {
              _this3.descArr = [];
            }
            _this3.descArr[groupIndex] = item.description;
          } else if (_this3.descArr) {
            _this3.descArr[groupIndex] = null;
          }
        }
      }

      return _react2["default"].createElement(
        'li',
        _extends({
          key: item.value,
          title: item.label,
          className: (0, _classnames4["default"])({ active: item.value === key })
        }, otherProps),
        renderCustomItem ? renderCustomItem(item) : item.label
      );
    });
  };

  CascadeSubmenu.prototype.renderLoading = function renderLoading() {
    return _react2["default"].createElement('div', { className: 'kuma-loading-s ' + this.prefixCls('center-loading') });
  };

  CascadeSubmenu.prototype.renderSubmenus = function renderSubmenus() {
    var _this4 = this;

    var _props2 = this.props,
        value = _props2.value,
        options = _props2.options,
        expandTrigger = _props2.expandTrigger,
        cascadeSize = _props2.cascadeSize,
        miniMode = _props2.miniMode,
        loading = _props2.loading;

    var submenu = [];
    var columnSize = cascadeSize;
    if (!miniMode) {
      columnSize = cascadeSize + 1;
    }
    var unitWidth = (1 / columnSize).toFixed(4);
    var firstStyle = {};
    if (value && value.length > 0) {
      firstStyle.width = unitWidth * 100 + '%';
    } else {
      firstStyle.width = '100%';
    }
    submenu.push(_react2["default"].createElement(
      'ul',
      {
        className: (0, _classnames4["default"])(_defineProperty({}, this.prefixCls('hoverable'), expandTrigger === 'hover')),
        key: 'firstMenu',
        style: firstStyle
      },
      this.renderUlList(options, value[0], 0)
    ));
    var prevSelected = null;
    value.forEach(function (key, index) {
      var style = {};
      if (value && value.length > index + 1) {
        style.width = unitWidth * 100 + '%';
      } else {
        style.width = (1 - unitWidth * value.length) * 100 + '%';
        // style.width = `${((cascadeSize - value.length) / columnSize * 100).toFixed(1)}%`;
      }
      var parent = (0, _util.find)(prevSelected || options, function (item) {
        return item.value === key;
      });
      var renderArr = parent && parent.children;
      prevSelected = renderArr;
      if (renderArr || loading[key]) {
        submenu.push(_react2["default"].createElement(
          'ul',
          {
            key: key,
            className: (0, _classnames4["default"])(_defineProperty({}, _this4.prefixCls('hoverable'), expandTrigger === 'hover' && index < cascadeSize - 1)),
            style: style
          },
          loading[key] ? _this4.renderLoading() : _this4.renderUlList(renderArr, value[index + 1], index + 1)
        ));
      }
    });
    return submenu;
  };

  CascadeSubmenu.prototype.renderBottomBar = function renderBottomBar() {
    var size = this.props.size;
    var btnSize = size === 'large' ? 'medium' : 'small';
    return _react2["default"].createElement(
      'div',
      { className: this.prefixCls('submenu-bottom-bar') },
      _react2["default"].createElement(
        _uxcoreButton2["default"],
        { size: btnSize, onClick: this.props.onOkButtonClick },
        _i18n2["default"][this.props.locale].confirm
      )
    );
  };

  CascadeSubmenu.prototype.renderItemDescription = function renderItemDescription() {
    // options[].description 存在则渲染
    if (this.descArr && this.props.value && this.props.value.length) {
      var label = this.displayData[this.displayData.length - 1];
      var desc = this.descArr[this.descArr.length - 1];
      if (desc) {
        return _react2["default"].createElement(
          'div',
          { className: this.prefixCls('item-description-wrap') },
          label,
          ': ',
          desc || _i18n2["default"][this.props.locale].noDesc
        );
      }
    }
    return null;
  };

  CascadeSubmenu.prototype.renderAllSelection = function renderAllSelection() {
    var width = (100 / (this.props.cascadeSize + 1)).toFixed(1) + '%';
    return _react2["default"].createElement(
      'div',
      { style: { width: width }, className: this.prefixCls('submenu-all-selection') },
      _react2["default"].createElement(
        'div',
        { className: this.prefixCls('submenu-all-selection-title') },
        _i18n2["default"][this.props.locale].alreadyChoosed
      ),
      _react2["default"].createElement(
        'div',
        { className: this.prefixCls('submenu-all-body') },
        this.displayData ? this.displayData.map(function (label, idx) {
          return _react2["default"].createElement(
            'div',
            { key: idx, style: { marginLeft: 12 * idx } },
            _react2["default"].createElement('i', { className: 'kuma-icon kuma-icon-chevron-right' }),
            ' ',
            label
          );
        }) : null
      )
    );
  };

  CascadeSubmenu.prototype.render = function render() {
    var wrapStyle = {};
    if (this.props.columnWidth) {
      wrapStyle.width = this.props.columnWidth * this.props.cascadeSize;
    }
    var submenuStyle = {};
    if (this.props.cascaderHeight) {
      submenuStyle.height = this.props.cascaderHeight;
    }
    return _react2["default"].createElement(
      'div',
      { className: this.props.className },
      _react2["default"].createElement(
        'div',
        { className: this.prefixCls('submenu size-' + this.props.size), style: wrapStyle },
        _react2["default"].createElement(
          'div',
          { className: this.prefixCls('submenu-wrap'), style: submenuStyle },
          this.renderSubmenus(),
          this.props.miniMode ? null : this.renderAllSelection()
        ),
        this.props.miniMode ? null : this.renderItemDescription(),
        this.props.miniMode ? null : this.renderBottomBar()
      )
    );
  };

  return CascadeSubmenu;
}(_SuperComponent3["default"]);

CascadeSubmenu.propTypes = {
  prefixCls: _propTypes2["default"].string,
  onItemClick: _propTypes2["default"].func,
  value: _propTypes2["default"].array,
  options: _propTypes2["default"].array,
  miniMode: _propTypes2["default"].bool,
  onOkButtonClick: _propTypes2["default"].func,
  columnWidth: _propTypes2["default"].number,
  cascadeSize: _propTypes2["default"].number,
  size: _propTypes2["default"].oneOf(['large', 'middle', 'small']),
  className: _propTypes2["default"].string,
  locale: _propTypes2["default"].oneOf(['zh-cn', 'en-us']),
  expandTrigger: _propTypes2["default"].oneOf(['click', 'hover']),
  loading: _propTypes2["default"].object,
  cascaderHeight: _propTypes2["default"].number,
  renderCustomItem: _propTypes2["default"].func
};

CascadeSubmenu.defaultProps = {
  prefixCls: 'kuma-cascader',
  onItemClick: function onItemClick() {},

  value: [],
  options: [],
  miniMode: true,
  onOkButtonClick: function onOkButtonClick() {},
  size: 'large',
  className: '',
  locale: 'zh-cn',
  expandTrigger: 'click',
  loading: {},
  cascadeSize: 3,
  cascaderHeight: 0,
  renderCustomItem: null
};

CascadeSubmenu.displayName = 'CascadeSubmenu';

exports["default"] = CascadeSubmenu;
module.exports = exports['default'];